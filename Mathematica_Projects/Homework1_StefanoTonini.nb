(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1148711,      21767]
NotebookOptionsPosition[   1131503,      21465]
NotebookOutlinePosition[   1131973,      21483]
CellTagsIndexPosition[   1131930,      21480]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Sistemi Meccanici e Modelli\n",
 StyleBox["Homework 1- Anno Accademico 2022-23", "Chapter"]
}], "Title",
 CellChangeTimes->{{3.6548734392918253`*^9, 3.65487345111683*^9}, {
   3.6548735060026197`*^9, 3.654873512306179*^9}, {3.654875962607409*^9, 
   3.654875976574606*^9}, {3.720168777981319*^9, 3.720168779904544*^9}, {
   3.751683437391491*^9, 3.751683440990242*^9}, {3.75168873797991*^9, 
   3.751688739884865*^9}, {3.783077804224937*^9, 3.783077811896204*^9}, 
   3.798532043386293*^9, {3.812075660834284*^9, 3.812075667658681*^9}, {
   3.843476911277608*^9, 3.843476918323803*^9}, 3.847781316036169*^9, 
   3.857364416715643*^9, {3.8756983809759607`*^9, 
   3.875698387014578*^9}},ExpressionUUID->"b3541be0-15b0-420c-9e7f-\
953781c8bf7f"],

Cell[CellGroupData[{

Cell[TextData[{
 "Istruzioni ",
 StyleBox["(aggiornate 25/10/22)",
  FontColor->RGBColor[1, 0, 0]]
}], "Section",
 CellChangeTimes->{{3.654873492131336*^9, 3.654873493635097*^9}, {
  3.798532094805541*^9, 3.798532125548395*^9}, {3.8120756527128057`*^9, 
  3.812075656358324*^9}, {3.8434769268759327`*^9, 3.843476929771783*^9}, {
  3.84665297505122*^9, 3.8466529775274687`*^9}, {3.85736442466724*^9, 
  3.8573644312298822`*^9}, {3.875698394975368*^9, 
  3.875698400007152*^9}},ExpressionUUID->"67b9ee53-e707-453b-a884-\
661ac3741736"],

Cell[CellGroupData[{

Cell["Svolgimento dell\[CloseCurlyQuote]homework", "Subsection",
 CellChangeTimes->{{3.751684438107833*^9, 
  3.751684443500198*^9}},ExpressionUUID->"7777d8ea-9cca-41e0-8c03-\
96ad9c298842"],

Cell[TextData[{
 "Sviluppare gli argomenti indicati  e produrre un notebook Mathematica \
documentato che, per ogni punto, illustri:\na) Gli elementi di teoria \
utilizzati.\nb) Lo svolgimento e i risultati.\n\nIndicare: nome, matricola e \
la e-mail.\nData di consegna dell\[CloseCurlyQuote]elaborato: ",
 StyleBox["21/11/22.",
  FontColor->RGBColor[1, 0, 0]]
}], "Text",
 CellChangeTimes->{{3.654873523745186*^9, 3.654873836183146*^9}, {
   3.65487485982967*^9, 3.6548748737826*^9}, {3.654876014270685*^9, 
   3.654876056025669*^9}, {3.6548760904337273`*^9, 3.654876095511009*^9}, {
   3.720168832695754*^9, 3.720168860668949*^9}, {3.720168894146977*^9, 
   3.720168943351534*^9}, {3.720168973879285*^9, 3.720169042976668*^9}, 
   3.720976931045142*^9, {3.7209769670594063`*^9, 3.720976979427513*^9}, 
   3.720981798105939*^9, {3.7516842434798822`*^9, 3.75168429284085*^9}, {
   3.751684323426787*^9, 3.751684347342518*^9}, {3.751684391155113*^9, 
   3.7516844204111357`*^9}, {3.75168448748693*^9, 3.751684509184026*^9}, {
   3.783077821779917*^9, 3.783077824958243*^9}, {3.7830778719413548`*^9, 
   3.783077872075356*^9}, {3.796701929281436*^9, 3.796701945760578*^9}, {
   3.7985321451595917`*^9, 3.798532172213436*^9}, {3.8120757085151577`*^9, 
   3.812075718093927*^9}, {3.812075773138565*^9, 3.8120757793636303`*^9}, {
   3.843476988571843*^9, 3.843476994035838*^9}, {3.8466529977236567`*^9, 
   3.846653147291811*^9}, {3.857364804114318*^9, 3.857364831011054*^9}, {
   3.857364865402958*^9, 3.8573648733152237`*^9}, {3.875698423703395*^9, 
   3.875698481198612*^9}, {3.875698524711132*^9, 3.87569853515059*^9}, {
   3.8756986100947733`*^9, 
   3.8756986610698833`*^9}},ExpressionUUID->"d90db7b7-fbba-4b92-be90-\
34ceae23b25d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Modalit\[AGrave] di esame", "Subsection",
 CellChangeTimes->{{3.751683635625702*^9, 
  3.751683669258338*^9}},ExpressionUUID->"e6a48333-dd87-440f-b1e8-\
eb8d45be9fe0"],

Cell["\<\
Le modalit\[AGrave] d\[CloseCurlyQuote]esame previste nel Syllabus sono \
riportate di seguito:\
\>", "Text",
 CellChangeTimes->{{3.7516836785470867`*^9, 
  3.7516837134269953`*^9}},ExpressionUUID->"6d83045e-1317-4fc4-b4f3-\
7b1bbcd65144"],

Cell[CellGroupData[{

Cell["\<\
Metodi didattici e attivit\[AGrave] di apprendimento richieste allo studente\
\>", "Subsubsection",
 CellChangeTimes->{{3.751683738539136*^9, 
  3.751683761229308*^9}},ExpressionUUID->"8fdc472f-808c-4c37-8a5a-\
2434f726fd52"],

Cell["\<\
(...). Si assegneranno 3 homework per lo svolgimento individuale a casa. Gli \
homework consistono nella risoluzione di problemi di media \
complessit\[AGrave], applicando gli elementi appresi durante il corso.
Una licenza personale di Wolfram Mathematica sar\[AGrave] data ad ogni \
studente. Durante il corso Wolfram Mathematica sar\[AGrave] utilizzato per \
creare e analizzare modelli matematici di vari sistemi meccanici con i metodi \
teorici indicati sopra. Mathematica sar\[AGrave] inoltre necessaria per lo \
svolgimento dei 3 homework.\
\>", "Text",
 CellChangeTimes->{{3.7516838006553307`*^9, 3.7516838356814423`*^9}, {
   3.751683866628878*^9, 3.7516838666290073`*^9}, {3.7830778936223307`*^9, 
   3.7830778937670507`*^9}, {3.7967026609733*^9, 3.796702660981971*^9}, {
   3.8434770143887253`*^9, 3.843477015154482*^9}, {3.8434770501954193`*^9, 
   3.843477065786913*^9}, 
   3.8756987612531147`*^9},ExpressionUUID->"959e2749-dc51-4b5c-834a-\
426a9b9774ab"],

Cell["\<\
(...).Three homeworks will be assigned for individual study. The homeworks \
consist of solving problems of medium complexity, applying the elements \
learned in the course.
A personal Wolfram Mathematica license will be given to each student. During \
the course Wolfram Mathematica will be used to create and analyze \
mathematical models of various mechanical systems using the theoretical \
methods outlined above. Mathematica will also be required for the execution \
of the 3 homeworks.\
\>", "Text",
 CellChangeTimes->{{3.7516838006553307`*^9, 3.7516838356814423`*^9}, {
   3.751683869386923*^9, 3.751683921926217*^9}, {3.751684016092498*^9, 
   3.7516840186909647`*^9}, {3.84347707333071*^9, 3.843477095131542*^9}, 
   3.875698802521611*^9},ExpressionUUID->"d1f42ea9-14d4-431a-8201-\
6bb4cfe06a31"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metodo di accertamento e criteri di valutazione", "Subsubsection",
 CellChangeTimes->{{3.751684104248015*^9, 
  3.75168411203139*^9}},ExpressionUUID->"12c1cfb3-adbe-4445-afce-\
739f420cca5a"],

Cell[TextData[{
 StyleBox["L\[OpenCurlyQuote]esame \[EGrave] composto di una prova scritta e \
dei 3 homework. \nLo scritto \[EGrave] composto di una o pi\[UGrave] brevi \
domande di teoria e/o esercizi. Seguir\[AGrave] una correzione dello scritto \
e degli homework nella quale il docente potr\[AGrave] chiedere chiarimenti \
sugli elaborati. La correzione verr\[AGrave] svolta per appuntamento \
individualmente su Zoom.\nEventuali lacune su parti del programma non possono \
essere colmate rispondendo a domande aggiuntive su altre parti del programma. \
Qualora fosse acclarata una preparazione con lacune l\[CloseCurlyQuote]esame \
non pu\[OGrave] essere superato. Per esempio, costituiscono gravi lacune la \
incapacit\[AGrave] di scrivere le equazioni della cinematica e della dinamica \
con uno dei metodi spiegati a lezione (per esempio la incapacit\[AGrave] di \
scrivere ed applicare le equazioni di Newton-Eulero).\nIl voto viene \
attribuito attraverso un giudizio complessivo sulla prova e sulla discussione \
degli homework svolti (tutti gli homework saranno stati corretti ma la \
valutazione resta riservata fino all\[CloseCurlyQuote]esame). In particolare \
la prova scritta vale fino a 18 punti e gli homework fino 4 punti ciascuno. E\
\[CloseCurlyQuote] possibile fare l\[CloseCurlyQuote]esame senza uno o pi\
\[UGrave] homework, ma il voto sar\[AGrave] ridotto in proporzione a quanto \
non \[EGrave] stato consegnato.\n",
  FontColor->GrayLevel[0]],
 StyleBox["Lo svolgimento degli homework, entro le scadenze assegnate, \
\[EGrave] obbligatorio.  ",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["I primi due homework hanno scadenza fissa per tutti gli studenti. \
L\[CloseCurlyQuote]ultimo homework potr\[AGrave] essere consegnato una \
settima prima dell\[CloseCurlyQuote]esame (e non oltre \
l\[CloseCurlyQuote]appello di settembre).",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{{3.7516841526532917`*^9, 3.751684173301309*^9}, 
   3.843477275991436*^9, 3.843477309842938*^9, {3.8434773579899817`*^9, 
   3.843477359587431*^9}, {3.8573649007162437`*^9, 3.857364928283907*^9}, {
   3.875698843410494*^9, 
   3.875698865911663*^9}},ExpressionUUID->"aee77bc2-032b-4c7f-aaf4-\
124f2a56eb7b"],

Cell[TextData[{
 StyleBox["The examination consists of a written test and the 3 homework \
papers.\[NonBreakingSpace]\nThe written consists of one or more short theory \
questions and/or exercises. This will be followed by a correction of the \
written part and homeworks in which the lecturer may ask for clarification of \
the papers. The correction will be done by appointment individually on Zoom.\n\
Any gaps on parts of the syllabus cannot be filled by answering additional \
questions on other parts of the syllabus. If preparation with gaps is \
established, the exam cannot be passed. For example, the inability to write \
the equations of kinematics and dynamics by any of the methods explained in \
class (e.g., the inability to write and apply the Newton-Euler equations) \
constitute serious gaps.\nThe grade is awarded through an overall judgment on \
the proof and discussion of the homework done (all homework will have been \
corrected but the grade remains confidential until the exam). Specifically, \
the written test is worth up to 18 points and the homework up to 4 points \
each. It is possible to take the exam without one or more homework, but the \
grade will be reduced in proportion to what was not handed in.\n",
  FontColor->GrayLevel[0]],
 StyleBox["Doing the homework, within the assigned deadlines, is mandatory.\
\[NonBreakingSpace]",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["The first two homeworks have fixed deadlines for all students. The \
last homework may be turned in one week before the exam (and no later than \
the September roll call).",
  FontColor->GrayLevel[0]]
}], "Text",
 CellChangeTimes->{
  3.7516841526532917`*^9, 3.751684196071083*^9, {3.8434773891414843`*^9, 
   3.843477393077876*^9}, {3.857364931860268*^9, 3.857364932620542*^9}, {
   3.875698913988304*^9, 
   3.8756989243674583`*^9}},ExpressionUUID->"2668b96d-6c8c-43eb-a769-\
0c678ac82185"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Manipolatore parallelo", "Section",
 CellChangeTimes->{{3.843490088860696*^9, 3.8434900942787733`*^9}, {
  3.857364954787716*^9, 3.8573649628752747`*^9}, {3.875699071015655*^9, 
  3.8756990751435223`*^9}},ExpressionUUID->"d4a3e2d4-7b1b-4007-9b03-\
11dbb6d5a038"],

Cell["\<\
Si consideri il manipolatore parallelo mostrato in figura. Le dimensioni \
sono: AB = CD = 2 L,  OA = 6 L, CF = FC = FE = L. Siano s1, s2, s3,  le \
lunghezze dei tre attuatori lineari (considerare formati di una coppia \
prismatica). Sia E il punto al centro della pinza del manipolatore ed FE l\
\[CloseCurlyQuote]asse della pinza (ortogonale a CD).\
\>", "Text",
 CellChangeTimes->{{3.8434903385974913`*^9, 3.843490347714226*^9}, 
   3.8434916358416977`*^9, {3.846653178691388*^9, 3.8466532080031967`*^9}, {
   3.8466532555868464`*^9, 3.846653460946137*^9}, {3.846653594548389*^9, 
   3.8466536420412083`*^9}, {3.8573649818595963`*^9, 3.857365175429571*^9}, {
   3.857369202026771*^9, 3.857369208035552*^9}, {3.8756990993861847`*^9, 
   3.875699273699224*^9}, {3.8756993353078337`*^9, 3.875699361187855*^9}, 
   3.875792948172751*^9},ExpressionUUID->"8a3242f9-5177-4b55-a2b4-\
854dabc294ca"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3XuYVWWhP3AGGK6CkIJ4VxpQzDRMoFK00o6paaCSnqRSw7C8JJAd0SMK
nTLvgZejqWmmeVIzh6uCIHIVUGjACyh3RYHhPgNz3bvfLvpNEzJrBmbveYc1
n88zjw9777Xe9/u+f7CeWXxd++grfnrBjxo3atRoSIvUfy64/L++Nnjw5UMv
bJd60e+6IT8eeN2VA86+7mdXDrxy8JeuaJJ6888tGzXK3a9Ro7//+W8AAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkGGLFy9+5JFHnnji
ibSPnJeX9+STT95yyy2pwVOzpH18AAAAAAAAAACgISstLS0rKwudIrxkMvn2
228/+OCD3/nOdzp16tToH7Kzs5cvX56uKdavX9+nT59G/y4nJycvLy9dUwAA
AAAAAAAAAA1c7j+EThFGIpFYsGDByJEjL7jgggMPPLDR7lx22WVpmauoqKhr
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
Ht36/rRevXqFXgQAhBSwErbTBx98cMIJJ9Tkqn344YcnEonMJQGAmvje975X
8185L7zwwqKioozmKSkp6devX80jdenSpfZfXln/qYQBAAAAVFj15HOvHN4j
ohg266xLt737fuiYAP+UTCY7d+4ccaO7adOml156abX3w99/399sADRcwSth
OzMceuih1cZImTJlSkaTAEC02bNn1/xR1dddd13dlJlTs/zwhz+sYaqU4cOH
10GqsFTCAAAAACor37Hj3aG3j2mZU1UrbHTTI9++4X9KNm0OnRTgb1OnTo2+
y33uuefOmTOn2pvhw4YNC70UAAimPlTCUubPn9+qVatqk4wYMSLTSQCgKslk
skePHtVerVKysrLuuuuuOo43ZMiQmmRLadGixdKlS+s4Xh1TCQMAAAD4tB2r
18zpOyDicWHjDzh+1ePPJsvLQycFGrTLLrss+i73n/70p9Rh0U8SS0kdEHop
ABBMPamEpQwcOLDaJGeffXYdJAGA3XriiSeqvVTtdO+99wZJeO2119YwYewv
qSphAAAAAFXZMGPu1C+eHVEMm/L5M9dPnhE6JtBAbdu2bb/99ou4v73//vsX
FRWljhw6dGi1N8NnzPC3GQANVP2phM2fP7/aJIccckgdJAGAT0v9EtqpU6dq
L1Up55xzTqiQxcXFxx9/fE1CprzzzjuhctYBlTAAAACACMlkcvlDv3/5oC9E
FMPmXfKTwuWrQicFGpxq/+/sAQMG7DwyLy+v2jvhAwcODLscAAil/lTCUr74
xS9GJ2nWrFndJAGAXdx2223VXjFTOnXqtH79+oA5FyxYkLpc1iTq4MGDA+bM
NJUwAAAAgGqVbStY+NNho5sdXVUrbEzzzu/dek9ZQWHopEADcvrpp0ff3H79
9dcrDu7WrVv0we3bty8pKQm4HAAIpV5Vwq688spqwxQW+r0DgLqWTCaPPPLI
ai9SWVlZr7zySuiwf7v99turjZrSoUOH0tLS0GEzRSUMAAAAoIYKPlg+66xL
Ix4X9vLBJ3307EvJZDJ0UiD+li5dmpWVFXFn++ijj67819Hw4cOrvRn+5z//
OeCKACCUelUJGzFiRLVh1qxZUzdhAKDCq6++Wu0VqlG9ee5WIpE49dRTaxL4
hRdeCB02U1TCAID/x96dwEVV/f8fZ1gFVAQRFUQRURD3FRdAkVYtzbQ009Ky
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
77//XrNmzVL3z6OPPnrr1q2Sh0m30KBBg0oeM3ToUDXnl+43T09PmXvV3d09
NTW1+Hjpdn3ssceKf6tmITIAgC0wVAyWkZHxxRdf1K9f34TjKGvTpk2bTZs2
6QZ1TLAAAAAAAACd8x9+pWaJsIufLhSdFFVW1tXrh/qPlLn9Nvi0iV/yq7ao
SHRSZYbqwbKzsz/55BMXF5cKTvGFhIREREQ0bNjQJBOGFVG3bt3o6OiAgIAK
nkdqk08//TQnJ0dXGFbyC61MWgIALEbvymC6TvzSpUtDhgwxRedppZycnEaN
GnX16lUKw6DXuXPnDO1F7uXltXLlSt1hWVlZ/fr1K/nb1q1bSz9U+S4DBgyQ
v1GHDx+uuxXj4uI6dOhQ8lezZ88218UDACoJQ8VgOTk5Cxcu9Pf3r+B4qbJ4
/PHHT548yVaSAAAAAABAknsveX2tUMV6sM0BXQpzckSHRRV3b8d++QXrdrZ/
JGnPIdEx5ZRcV6Tk4mBXrlyJjo6uyJyem5tbjx49goKCTDVJaCoajaZ9+/Zd
u3Z1dnauyHkGDRqUlJTEcmEAACEMFYMlJydPmzbN1dXVVP2mNatWrdr48eNv
3rxpaE9numObNXjwYPmb54UXXliwYEFwcHDJH3p4eFy8eFH9uyxatEjxLu3Y
saM0JC61VfqIESOKKsM3RwAAZmJolVdpSHPkyBGp7yjHuEgNjUbTsGHD1q1b
d+7cOSIiomfPnlIn1a1bt/bt20t9YkhISKtWrdq2bSsFCAsL6/oP6bDu3btL
BwQGBrq7u5spmKOj42uvvXbnzh0KwwAAAAAAsHGHnx6tZomw26s2ik4Km6At
LLzyzY8bvFvJ3I2HB7+SFX9TdNLSDD1KzsnJWbt2rZeXV7mn8nx9fSMjIz08
PIydAGzSpElUVNTw4cOnT5/+3XffbdmyJTY29uTJk+fOnbty5crNmzcTExPv
3Llz6tSpXbt2/fXXX4sWLZo9e/b48eOjo6Pr1q1rbM5atWqFh4dX5Iu3LVu2
lMLolgvT+yRa9IcMAKiCZJb3/Pbbb+vVq1fufk2e1FP7+fm1bt26+OFgl390
6tSpXbt2rVq1Cg0NbdasmXSA9ENpJNCzZ0/p39LB0m+Dg4MrWIktQxq0LFmy
pFSRNt2xjSvHTuUajWbNmjVGvYs0Oi3HHfvCCy9wWwKALTM0lktLS5s6dao0
4ipH52KIk5OT1CfqBm9t27atyFSPTp06ddq3by+N8aR/Gzvto8jT03PevHkM
6gAAAAAAsFkph46u1ijXg/098GXRSWFb8u+nxo17d41TgKF7cq1r0LmZnxVk
ZYtO+l9lv46qWxwsJydn/vz5Dg4O5Zu+a9myZceOHTUajcrj/fz8BgwY8Mkn
n+zevTs7u6KNk5iYuH379nnz5o0YMUJ9oZeTk1PPnj19fX3Ld8m1atVasWKF
FL7scmHMWAIATEtmQYk9e/a0adOmfH2ZTBfZvHnz8PDwLl26SB1ruYcHOi4u
LiEhId27d4+IiGjVqlXNmjVNlVPnwQcfPHfuHKt3QqfUqlyKpOHrN998U443
MnYhl5EjR3I3AoDNMlQMJg1gtm7d2qxZM6P6FBmNGzfu2bNn586dzb1ybKNG
jXSjO29vb1Od86GHHrp27RqDOgAAAAAAbI30X/07O/ZWrAdb4xSQceGK6LCw
RelnL+5/+FmZm3OTf6ebv64SHdPgZpFZWVmTJk0q35RdQEBAeHi4mmIwV1fX
fv36/fjjjzdvmnfltDNnzsydO/fhhx9WMwXq4uLSs2dPHx+fcly7dNVvv/22
1Ho5OTl6ZyzNepkAABth6Bmi1AG9++67FazXKubs7Kzb5y40NNTYohqjSL1n
8+bNe/Xq1bZtW1OthuHm5jZnzhypQYpX7yxVp02nbDsaN25s1M3z9ddfl++N
Pv30U/Xv8tJLL3ETAoDNMlTYn5iY+PLLLxs56tFDGsW1a9eue/fu5f7KW0VI
Q7vWrVtHRkaaZMVab2/v33//nSXZAQAAAACwKZfmLlKzZeT5D74UnRQ27e76
bVubRcjconu6P3H/yAlR8fTWg+Xk5CQnJ/fv378cM3UeHh6RkZGKT42lw4YM
GfLnn39mZmZa+JKlq4uJiRk0aJCLi4t8SEdHx6ZNm5Zv3RKp9VJTU3UzllKT
8j1WAICplFocrGQ595kzZ8LCwsrRbZXi5uYmnadr167Vq1ev+NmMJb1pp06d
unTpUqdOnYqfrWPHjocPH2ZlCRv3xBNPqL9n5s+fX+43kobQnp6eat7l5Zdf
5vYDANskszjYgQMHGjVqVN5Rz38FBQVFRUXVrl27gucxlZCQkMjIyPr161fw
PCNGjLh37x6DOgAAAAAAbEFeyv2Y2i0V68E2+XUsyMwSHRa2rig//+KnC9d7
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
UqoxetXB04ItFJNJUnIODg4lJSUSHh5pa3//o3ln/iJKLjJFQ/o4ePBgwW1W
rVp19OjRc+fOhYaGapd4Rj5PAACARoENCWPmnExIGBnKc3NzMzIy7t+/HxMT
ExYWduXKFXKFTq7TR4wYwT9DkMvl7du313zHxMSEzBD4m0GmDfM++niSosXB
Oiplkxf5v6bLWljquli2rpCdY5ifrFbfffcdpz1i5tWrD52RcAVv1537ts1b
0O3tb7/9lsw2mTLl1dXV5ABmloYQEgYAAAAAAACC/nr06ELHAYLxYCfsnqnJ
V0ndWIB6YEtGMhUBOPlGunfvTrcO89HqdZJHgmm+Js38VLDNffv2peus/kyf
Pl3qA6R+du3a1axZs/p2MzAwUHCbDz74YM+ePUzikbpqUTHrfuQwZgoEICQM
AJoS7ZCwyspKct4jZ7/CwkJyPrS3t6caamRfbtol7RjdsnUb/hZ27tyZrmuG
9PPPP0t9jPz7SWVV7L8W/mHiwXPPdKLMjvqeqWDst6Oj4759+44fP37u3DnN
Es9ZWVnaJZ6ZvA0YqQEAAIwQJySMDN9kECdDORnQMzMzk5OT4+LiwsPDybX5
mTNn/vjjj3nz5glOJIKDgznvfPnllzwN2PL776NauG6VufIswy6ROTUw4l3f
OnToQPahIX871l9//cUJw5OJmM65eHhKvoL3/ler6fZ227ZtVSpVUVERk5YW
5SMBAAAAAABAvIT5K8SkCMvYsEPqlgKIVWu+kcrKytLS0uLiYqVSOWfOHLpF
GCdX932xGZIvImm+fr9+18zcgr/ZZmZmzs7OdF3Wh+bNm6vVaqkPExozZ85U
KMSuyooJO7Szs/v999/3799/7Nix8+fPh4aG3rlzh5N4hKlFxVQHQOIRAGh6
2JKRhHYIN3UB3xGTXpd8jB7zxnTBdmrfzzIq3t7eZNyR+hj5j6q0zCtB4/kr
K/WXWdW3jz4+PoLbDBky5MCBAydOnECJZwAAgEaNDNDMzJMM2WTgrqioIIM4
GcrJgE6G9ZSUlPj4+IiICHJtfu7cOXKdvnPnTgsLgSUXJycnU1NTzXc8PDxq
nUGRWcTYzr6rZS3562L7ygS+0UgsX77c8L8gQX4XTkv8/f0FWztm2ruSXx2Q
V6/Bw+n29vTp08mBWlZWRg5actHEzDkJhIQBAAAAAAAAj+oc5QlrL8F4sItd
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
sEHqY0THpk6dyumjmZkZRSY6S0vLN95449y5c+xd5oyMjLy8PJVKVVJSwqka
ibvMANDYaYdwV1dXV1VVlZaWkpNefn7+lStX6AYahanpr5fCJR+La31NmvWZ
YPs7dOigUCjo+q5bN2/elPowaajSyNhzfs/yXOmsl7Ua7NxacFcMHz5827Zt
+/btO3bsGBmpQ0NDIyIi4uLikpOTMzMz2cGaTDg5g7XUOwAAAAD4kMGaDNlk
4GYeJyRDORnQ1Wo1GdzJEE+uysm1OblCv3r1KpkAHDlyZM+ePZs3b+bJL+ou
M10kc+KZe2yStRoqs9bplM24WFlZkV2nv5/sq6++4nyju7u7ubm5YMM+XPGD
5NcCdb1WHzpDt7ctLCzi4+PJBRRbPpJcWJHjmVka1d+vAAAAAAAAAMbv77/+
utxjuGA82HGL9lXpWVI3FqAe6so3olKplErliBEj6JZZRr72huRrRPV69Rn+
nJh+icmMoUO+vr5//vmn1MeILv3000/a3aROayP7p47kypUrY2NjmbvM5KAt
LCwkB3BFRQVbiIqpAiB11wEAGkQzJIwJ4a6qqiLnuuLiYiarZ58+fehOpO99
tUryUbiu1+/X75pbWAh2ISgoiK7vOvTaa69JfYzoTOam3UccvXkueRbJnNxl
3ALQLFNT0xUrVuzYsePgwYMnT568ePHijRs3oqKi7t27l5qampWVpTlYa4aE
YbAGAAAwcsx0lA0JI0M5GdDJsE4GdzLEp6SkxMfH37lzJzT0f9i777iojrZv
4EuvggIqoIgFu9i7iN2YRJNY0ixJrDGWxCjRRE1MLKlGk9tuYgELTUWKWOgg
vUnvHRYWWHoRTfK+c2eed599KcvusHAov+9n/rgL7p6dPedcM7PXuSbAw8PD
2dnZzs7u2rVre/bsaTpg0OIprOfp3OMNaGm84cAb8BFPt/XUpa7v7bffbqfv
Kzo6WkWlcXU1aZ527G3Qz+5ZBudzAQnt3V372Hp71apVZAJVVlZWXV1NB6IN
DQ1ICQMAAAAAAIDUn85JUyKM/BnXRwogG7ru8eLFi4aGBrplZHl5uVAo5PP5
gYGBCgoKDAssioqK5x4/5XyBSKZ27lGAcpOFsqY0NDQGDmy9OIa8+Pj4cH2C
yJOvr6+ycuNfkM3MzNSk+LlfsunTp7u4uNDCI8XFxbTwSF1d3fPnz7ERFQB0
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
lb7dDE/u07e/NLf9UaNGsfUJA0VFxaioKK5PEHmKjo7W1NRs9DFHjhwpXlPC
kKd0lGcgYWZ0jWc0i6ch+nsyXvrmm2/i4+MzMjLy8vKKiorI2UuGneRMxq6R
AAAAXY6ElLCQkJC33npLNAYYwVP9ReLe02d4/Sfw1JoOsVRVVcnwQ94Dty6A
jLhSUlLa+AVt3ry56StbWFhIcwBT5i/mfNgva/vdzYett5WUlCIjI8nZW1FR
Qc5k+qgCto8EAAAAAADoUV6UVzw0MG81H+yR8ZSXNbVcHyyADGhKDK03QlPC
KisrKyoqiouLCwsLmZ/HfGvLDs7XguTSvr1mL2UBq0GDBmlra7N1V0tmzJjR
PX4VJefVkiVLmn5AY2Pjfv36ybfTJBs4cKCXlxdqhQFAFyWewl1TU1NVVVVa
WkpCdl5e3sSJE9lujHt+Oct5tJW17Tx+UpqPNnjwYFVVVbZukdXWrVu5Pjvk
iZxXTfcNV1dXNzMza/rZJ/DUzvD6S5gi/cLrN4L3v1/E6NGj7ezsxKuEVVdX
0/2dsWskAABAF0JTwhoaGsjotK6ujgxNhUIhCfEHDhwQJZbr8RQ/4fWWME64
xTNezeul2PIoy8jISE9Pr82Dta7n9ddfb8u3c/JkMwNmc3Nzad5aSVn5dzcf
zsf8DO0Dq8Nsvf3KK6+Qs5duaF5bW0tOaXJiY+EIAAAAAACg54j66HNpSoQV
ujzh+kgBZNO03gjdgorP51tbW7MtpCirqFz2CeN8IUhe7c1N26X84Obm5sxF
1ZpSUFAICQnh+gSRA4FAMHv27KYf0NDQcMCAAfLqLukpKys7OzvTXQCwvgcA
XYWEFO6ioqL9+/ez3RINjAbYx2ZxHmplbQ5x2UNGjZXmAzYbgOROV1eXBDuu
zxG5IZFx0aJFTT/mzJkzW+oBRR5vNa/XLZ6xhInSJ7zeerz//b13xYoV4eHh
jTaOpFXCuO4AAAAAkAqJ2iR20w3N6dMK1tbWgwYNorFemcd7g6dt3/Lw4B5v
wKe8Ptq81p/CmzhxopKSUqt/1v08fPiQ7atxc3NTVGycZ2diYtK/f+u1donX
1m/ifMDP1mxCEzS1e7H19pkzZ4RCITmN6dCUzLle/gtLRgAAAAAAAN1eRUyi
s6JJq/lgT+et4fpIAWRGU2LoQ521tbXV1dVlZWWlpaX5+fmTJ09mW0XZefwk
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
YeLEiWpqamx9yPs3iHT1jWNu3rypoaHR9KOpqKjMmCHtRpzEJ0d//snBbeSk
qTJ1oAFP6bDEfaZseEY7x06r+zdhG7XCAAAAOp74lpGiJxTyH/l4jlskIYKf
5vUbw5Mt8V5ZRfXNTdtFZecPXrgufZ6/jo4O84ONXdGJEydEX9Dly5ebHcvx
/t0qXfrXHDDUzDo4jvORfPu1GYuXsfX2li1bysrKKioq6PaRZEZGrgKaJIlB
KQAAAAAAQFcX+9k30pQIy73RTMlugM6MPt1JV/Pq6+vr6upovRGBQJCZmclc
b+Tba/acL/J0fLseFCvrDpK8fzeR1NHRaen/VVRU3LBhQ3p6OtdnSivi4uI2
btyopNTiY799+vSR6aFUauSkqTfDk6X/Cv7zwFddk/GkdXBwyM/PLy4uLi0t
pUt8SAkDgM5Dcgp3QECA9L+UiSNR5tzjp5wH0PZrMuUJjxs3Tta8ZRFvb2+u
zxF2JPC98847zX4uPT290aNlyHhfvOZ9Ued/9vMZfcPmt5BuyRie6mlePwmz
La9xiwoe+4rKMuA3OAAAgA7TqMh8eUpG2NqdktO5V/C0ZR2hTluw9OxD/0Yj
urWf7Zf+FZSVlWXKgOrStLW1CwoK0tPTFy5c2OwfqKurz5s3T/oX1NHTP/8k
kPMxfLu2k/ces/W2pqZmUFBQWVkZmYjV1NTQWmEoXQsAAAAAANAN1KRnuagO
aTUfzHfysn/+/pvrgwWQjXhKWF1dXU1NDU0JKywsXLVqFdsiifivgT2t3QhL
HD1luqw9ZmRkNH26pH+lrKy8fv16Pz8/rs+Xxsj54+TktGDBAskfcObMmcbG
xrJ2y8hJU21CE2Tq/6XvbpD1XaiPP/44Ozs7Ly9PIBCUlJTQ7SPp+h5SwgCg
M2iaEkZuUyRkFxcXk5BNbrNsd7/Nh45xHjrbtdnHZk22bP4HsmaNGDFi6NCh
snYjGTJxfYKwc3V1NTQ0bPZzDRs2bMCAAdL3AwncjQp73opIeXvHHlVZyq8p
8HgreNqSN58KW7erMi0L20cCAAB0DPH6YCT+1ldUJnx32lVtqIRNn7fzemvw
ZEsHMzEb8c2V2y0N6t7Y+LFMr7Zo0SK2Jya6nMmTJ7dUHIwM5MaMGSP9S5Ex
2/e2zpwP4Dugrdy6k623Fy9eTOZfTbePpA8pcH2lAgAAAAAAAKPg1zZIUyJM
GBzJ9ZECyED04zJ9wLOurq66ulpUbyQkJERZWZltheR3Nx/Ol3c4bLciUibM
tmTot6lTpyoqKkr+mxEjRvz0009FRUVcnz7/h5wnv/zyy+DBgyUfsImJCflc
DL0x59UVMu0XSdpX568xvBHv34w7Hx+fzMzMnJycwsLC4uJimhJWW1tLrgvx
OiRc9zoA9ET0Nziawi2+ZSRN4ebz+T/++CPb3a+3QV8SsziPm+3dboQlDR4l
w29hurq6kvO0G1FTUyMRhOvThAWJdJs2bWrpc5FOkFDFtKkho8dZh8Q3+xVc
8AievWyF9C9FaPAUtvN63+UNaGnm5ao2NPHo6eeVVeS6QIwGAABoV+L1wXLt
XR4ZT5GwOnqMZ2DMk201SVtXd/OhY/axWZIHda+8J9sjYBYWFtra2jL9k+5k
4sSJenp6Mv0Tq9MXOR+6d0z7wzdCWUW2/UxFbty4QbePrKurq6+vR0oYAAAA
AABAV5d320mafLDYXYe5PlIA2YjXG6FbRorqjRQVFTGX2f/A6jDnazucN9vo
tGkLlzL0no6OzsiRI1VVW1mYUlZWXrly5b1798hX1sGnTX5+/pkzZxYsWCBh
j0iqT58+8+bNY0ssXLVtt2N8jqzdPmTUWIb3Io4ePRoXF5eRkZGVlcXn8wUC
AU0Jq6mpQUoYAHCu0R49JGSTu1NVVVVZWVlpaWleXt6QIUPY7n6fHPuF84jZ
Me2Sd5hev/4ydY70O+wcPHiQ63NEZiSiXbt2TUIFMBLoZYrgJmYjrgXGSP4W
jtncGTJ6nPSvSRjzlI/xDCRMwR4ZT8lzcEWMBgAAaFd0OFoaHOk3Y7mEuHyO
138ST4bSoNSi1e9dC4yVZkTnGJ8z/623ZRtLGBvLtAV2t2FhYdHqI4fiFBQU
Pjn6M+eD9o5su74/xda3o0aNEggEou0jyQStoaEB5eUBAAAAAAC6qL+eP/cY
OrvVfLAHuqOfC0q4PlgAaTWtN9Joy8jffvuNbWFEU7uXrDv9ddfmEJe9Zvun
bN1oYGAwf/58dXX1Vv9SWVnZ0tLyxIkTkZGR7bfu9PLly6ioqB9//HHGjBnS
7Lygpqa2aNGi3r17M3x2JWXlHcdOMnT4B1aHGd6O0NfXDwkJefbsWXJycnp6
el5eHp/PFwqF5eXl1dXVtbW15Bp58eIFfm4GAK5I2DKyqKho8+bNbHe/aQuW
ch4rO7L95uLVp69sWWFTpkzp1auX5L8xNjYmwYLrc0Q2jx49Gj9+fEufSE9P
b/LkyTJ1lOGgwX/4Rkg5Ovrk6M+qUoxwxE3iqZ3j9ZcwF/ObsUIYEsV1vwIA
AHRbdQWFzz7+UkIsdtUZtVnXRIYMJDFvbf5E+hGdfWzW7FeWy/T6CgoK8+bN
U1FRYTq6rmfAgAEyFbwlFJWUPvv5DOfD9Q5uds8yZH1mROTIkSMlJSU0JYxu
H0m3YECtMAAAAAAAgC4nYf8JaUqEZf95m+sjBZCBeEoY/XGZbkFVXl4uFAoL
CgpGjhzJtiry1flrnK/qdKr25dkrmtqt/JrcEkNDw/nz57daMUykX79+77zz
zokTJ1xcXDIzM9u4DJWfn3/nzh0rK6u5c+dqampKeQxaWlpz5swZOHAg20fW
7KVz5IotQz/bx2YZGBmzvel3330XHh4eHR2dlJSUlpaGlDAA6GyaVvWkKdwC
gYDcuMiNl+3ud+KWE+dRsoPb2Yf+BkYt1sVqFolokrc/HjNmjJ+fH9fniLSi
oqIWL14s4eNMnz5dX19fpi4iXXrRM0T6b+GyT5iS7BVEFXm81bxezlrDJczI
nm3/sp7P/c7aAAAA3clfz59n/Panm9aIFkOwgknA6i1pUc+sra1lje+Ulo7u
zfBk6ccSds8ypsyXNJ5p1qhRo5hXuroKBQWF+fPny7pXprKKyv7//MH5QJ2T
ZnX6IltXGxkZ5efnl5eXk3kZTQmjC0d0Q3Our1oAAAAAAACQVm1OvquGWav5
YN7jFv3z119cHyyADEQ/LtMtqOiWkeXl5bTeyI4dO9iWRAYMNeN8PacTtjPu
fiZmI9i6lPfvA55z586V9fdZQltbe+bMmZs2bfrqq69Onjx57do1FxeXwMDA
5OTklJSUuLi4yMjIkJAQf39/T09PW1vbn376iXz1y5cvHz9+vK6urqxvZ2pq
amlpKevaozgj0yGnnT3ZOnnxmvfZ3nTx4sW+vr6kHyIiIhITE1NTU3NycvLz
80tKSoRCYVVVFVLCAIBD4ltGkntRoy0jCwoKFixYwHb3k6kaQ3dqFz1DDAcN
lrW7SCDu06eP5GgSHBzM9fkiyZMnT1asWCGh1KeOjs78+fNl7Zk+ffuffegv
01cwc+lrsr4L9eWXX2bFxj9ds81ZwaSleZmb1oiM3/786/lzrvsbAACgOyh6
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
3IjI7YjclEpLSwsLC1evXs1293t3517Oo16nbTfCEttevdPMzGz+/Pl9+vRp
4+vIkY6OjoWFxbhx49r4OiTmWofEM3cvc9WOTz75hETqgICA8PBwaVLCiJc1
tXGff+uqNrSleZyLyuCkr395UVnF9VUOAADAmX/+/jvv5t2H/SZIWPkMfm1D
bVYu/XtpUsJCQkKePn3q4eHx8OFDJyenVatWsUX/Je+sa8ug7ndX7yGj2zry
IYYNG2ZpaUlGd21/KTaKiopjxowhxyCX4u2WK1ZdD4rlfMjdydvit9eyde/K
lSvJTI0MTauqqmpqauj2kWR0Sq4auhjL7fUOAAAAAAAAIv/89Zf3uEWt5oO5
apjVZudxfbAAsmlUb6S2tlZUbyQ+Pl6mXYfE/WDrwvmiTTdoN8OT1+05oM26
kVMnp6ah8e6uffLdXfSSV6gia6mTU6dOOTo6urm5PXr0yNfX9+nTp9HR0XFx
cWlpaZmZmXw+XyAQ0Ac8yWVSX1+PdTwA6EjkVvPftJZ/0aqeoi0jSci+cOEC
261PVV396tNnnMe7ztwc43M2ffUd8yaSIurq6nPmzJk6daq2tnYbX4qZgYGB
hYXFpEmTlJWV2/hSmr109vxyti0du/WbE2xvTTqQxGsvLy8SrGVN3q7Nyg1+
bYOECd3DfhPybt79B8neAADQ85T6h/hMekVClPQZv7jEJ0j8nzSbEtZo48hG
KWGXL19mLk/65dkrbRl72D3LWLl1J1uF0qYGDRo0b9688ePHMxdrlYmRkdHc
uXNnzpypo6Mjlxc0MBpw+NINzkfaXaKdcfdj62RyqkdFRZWVldGUsPr6erp9
JJaSAAAAAAAAOpuUE/+RpkRY+q+XuD5SAJk1rTdCU8L4fP7atazPwW3dyfmK
TXdqNqEJb+/Yo6HF2S/IctfboN97u63aIwmBuZbLunXr7O3t79y58+DBg8eP
H/v5+QUFBdGUsIyMjOzs7MLCwuLiYpoShnU8AOh4opQwUVVPEq/LysrIrYmE
7PHjx7Pd/T4/2aasnp7TLngETbSYx9bJjSgqKtIdIUePHi2vHyUlGzp0qKWl
JTlJ5PV2Y6fPuugZ0sYuNTIdwvbuO3fudHV1ZUsJo0p8gnzGL5b0k/ekV0r9
Q7i62AEAADpYbU5+1EefS0qZNjBPP/1H05Rp8ZSwmpoaMlkuLS0VpYQlJiaS
CTUJ1qKNI52cnMik++OPP2YbA4yaPK3tg7qjNo79Bg5iO4BmKSkpjRo1ysLC
YtasWaampvJ6WU1NTTJWnD17NnlZ8vpyHDSSl3pt/aab4cmcD7C7UPtw/9ds
vb106VJyRZBZG5m7iW8fSS4cFJwHAAAAAADoJJ4LSh7ojm41H8xjyKy/nj/n
+mABZCDaMlJUb6S6ulq0gnf16lW25Q5lFdU/fCM4X67pfu1aYOz7n33Rb4AJ
2/fSSQwdY777x9/snmW0RxftPH6S7ajU1dWvXLly9+7d+/fvP3782MvLKzAw
MDQ0NCYmJiEhISsrKzc3t6ioqKSkpKKioqqqCilhANCRxOO16Bc3ci+iW0YW
FBRYWVmx3f1ITLGPzeI8wHWh9umPv/fqLc/9H42NjWfMmDFnzpyJEyf27dtX
Xi+rp6c3derUefPmTZo0SV6lJChVNbUNVofavt3z6xs2sx3AtGnT6BbP3t7e
/v7+TTeOpL+4kWuEjGzpL27NRup//v47/fQfDw3MJczvoj76vDYnn5OrHgAA
oGO8rK1L/eGsq4ZZixsrK5s++/jAi4rKZv95sylhxcXFoiphcXFxJFgHBQWJ
p4Rdu3atd+/ebCOBDfsOtn1EZxudtn7vV+302F2vXr0mTJhgYWExf/78uXPn
kiGZmZkZ+bzq6upNy6OR/0VfX3/o0KHm5ubkL2fOnEn+Ffm3Q4YMaacHB0zM
Rnxv68z5oLrLtRthiVo6jAX8f/vtN6FQ2GiAipQwAAAAAACAziP87Y+lKRFW
6PKE6yMFkE3TeiOiLagKCwunTp3Kttax6/tTnK/VdOPmGJ9z+NKNGYuXMW+P
yAlFRcUZS149ZnOnXTvHxGwE2+Ht3bvXzs7OycnJ1dXVw8PD29s7KCgoPDw8
Li4uKSmJpoQVFxeXlpaSa6Smpub58+cNDQ109RspYQDQ3hqlcJOQTVPCaImw
tLQ05lSir85f4zyudbl29ekzi9ffZOvwVpGvctq0aQsXLpwzZ8706dMnTJgw
fPhwQ0NDNTW1Rn9JAiv5H3v16jVo0KCJEyfSnx0tLS3JPzc2Nm6nwyMfvO3F
wUizDolX19RiO4Zjx47RlDAfH5+AgADmlDDqRUXls48PuCibtjTFc9UwS/3h
7Mvaug6+6gEAADoA3+nh44FTJSx1Pp2/pjo5XcIr0FKcJOCSCXJtbS0ZoAqF
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
1QwA3Z94CjdNCaMp3MXFxeTuNGIE45bBX567yvmtu1s2u2cZ+05dGD9rLtv3
0hlMtlz4zZ+32ql/7GOzmDPVd+3a5ejo6OzsTEK2t7c3CdmhoaGRkZEJCQkk
ZOfk5JBBbGlpKf2VjcRrmhLWli2eK54lBFiuljAN9Bg2R/DYV76XPAAAgNxV
xicHLn5PQkR7Yjoj1+YO24s3TQmjzy+UlJQIBILc3NysrKykpKTY2FgSuAMD
A728vB4/fkwCOpmGk8m4tbX1J598wjY2GDrGvF3HdTahCR/u/7oLVYJVVlGZ
vWzFt1ftHONzOB8Vd++27Zvv2b4jS0tLMl4V7XKOlDAAAAAAAAAOlUfGSngw
XNRC3tjI9ZECyKZRShitN1JZWSkUCgUCwfnz59mWNdQ1Na8FxnK+LIMmZXOM
z7n69NkpZ48jV2w/+/nMxi+PvLPj83d37Xv/sy/W7TmwYd/BD784/NGBbzZ9
9d0nx345fPnGaWfPTltPZsvh42wnrba29rVr1+jvy+7u7p6env7+/kFBQdHR
0XFxcenp6ZmZmfn5+YWFhXS9jtb2f/HiBbl22vITMwCA9ES7PDc0NIiqepKQ
TW5Nu3fvZrv7GQ8Zxvmtu9u3c48C3tqyQ1ffgO076nhqGhqvvLfhPw9827Vb
Fr+9lu3wZs2adfv27Tt37ri4uJCQ7ePjExAQEBERQUJ2UlJSampqbm4un88v
KyujJcJEKdxtj9e5NneemM6QMB8MXPxeZXyyvC55AAAAOWoQlsVbHXNWGtRi
3UtNs8SDP/5VX9/GN6LPTJHg+/z5cxKFq6qqyHi1tLS0oKAgJyeHROrExMTI
yMjQ0FA/Pz9vb+8HDx6QmE4iO4nvV69e1dfXZxshvLPj8/Ye1DnG53xv6/zG
xo/7m5iyHWQHGDDUbIPVIZQF67B2OypVR4/xpP3+++/Ft4+kS0zYPhIAAAAA
AKDj+c9c0Wo+mIuyaVViKtdHCiCDRltGNq03MnbsWLY1jX2nLnC+JoPWA5tj
fI7hIMaF2W3bttnb2zs5OT148MDDw8Pf3z8kJIRuQZWYmCjaggpbRgIAJxqV
XCDxurq6mv6+Rm5NSUlJurq6bHe/b6/Zc3737iGNFg2bMNuSeXOZ9qap3Wvu
8resfrt0KyKlvXvjSkC0KuvW5CdOnBDt8vz48WMSsoODg2kKd0ZGBgnZBQUF
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
giIjI+Pi4pKTk5utN0JX59qv3ggAgDhRjQUasuvq6uivacXFxfn5+aampmx3
v50nfuX81o3G1mxCE864+//m4vW7mw/5D+ceBVzwCLrkFXrZJ+yKf5R9TCbn
Ryih2Uan9Tboy3bS7t27187OzsnJ6cGDBx4eHn5+fiRkh4aGxsbGJiYmZmVl
kZBdWFgoqupJd97pmJQwqiYjO3jZekn7c/WfmHfbCSMHAABoJ8LAcN8pr0ra
0dh8cbHX0445GMnbR+bk5GRmZoq2jyQxnUzGyZTczc2NZoXZ2NisX7+ebcww
cNhwzsc8aD2z7f7hNNtJO3Xq1EaDWFrnlg5iMXoEAAAAAABoD9l/3JJmy8iE
Aye4PlIA2TTaMpIW8BfVGzl58iTb8oWWjm7nKUCB1qPaBqtDbCdt7969bWxs
HB0dxUuEhYeHx8bGJiUlcVtvBACg0X6RJGSTuxAJ2aItIzdv3sx295u+6BXO
b91oPbPNXf4W20k7f/7827dv37lzx9XV9fHjxz4+PkFBQREREdHR0XTLyJyc
HHJRkEtDKBSKUrg5qepZ7PXU23yxhPmj75RXhYHhHXMwAADQQ9Tl8aM27pUQ
fdz1x6X/eumfv/7qsENqmhJGl55IsC4uLs7NzSXT7eTk5Pj4eBLQQ0NDAwIC
vLy83N3d79+/7+DgcPPmzWvXrpmbm7ONHN7ctJ3zYQ9aD2x2zzL0DY3YTtqv
v/66rKyMXCN06YnMAVEoDAAAAAAAoP28rKl9ZDyl1XywhwbmL8oruD5YANmI
FuUaGhrq6+tramroo5rFxcWFhYVmZmZsaxcHL1znfO0FrQc2+5hM5gW3Xbt2
2dnZ3b17183NTVQiLCIiIi4uLiUlJTMzMycnh9t6IwDQk7WUEkZLhMXGxmpq
arLd/b63deb87o3WA9sl7zAlZWW2k/bnn38mIfvevXuiEmEhISHR0dHkQkhN
TSUhOy8vj8/n09/Rqqura2tryVVDqyt0fFVPMtRO//WSu/44CRPJqI176/L4
HXZIAADQXf1VV5f60zk3TbMWNy9WNn22bX9DWTk3h9dk+0gyuRYKhWSinZ+f
n5GRQabeMTExUVFRJLL7+/uTKE+m505OTvb29jdu3Dhw4ADbyEGzl86NsCTO
Bz9oPbDt/88fbCetoaFhQUGBaPvI+vp6MgEU1QpDVhgAAAAAAIB8xew8JE2J
sHzb+1wfKYAM6I/LjbaMpM9pCoVCPp+/c+dOtoULk2EjOF91QeuZbeGqd9lO
2tmzZ9+6dcvR0dHZ2VlUIiwsLOzZs2eJiYlpaWk5OTl5eXklJSXk6qAlwsTr
jSAlDADalXjIpincdXV14inc77//Ptvd760tOzi/daP1zDZj8TK2k5ac7TQf
rGkKNwnZNIW7qKiIhGyawk1/Qev4+mCNNJSVP9u230XZtKW5pJumWepP5/6q
q+Pk8AAAoBvg33/0ZNB0CeuWAZarqxJTOTxCOqCle6CT0azomUQSuAsKCkgQ
T09PJwGdTMPJZDwgIMDT09Pd3Z1M0slUnUzYr1+/vmTJErbxw9QFSzgf/KD1
zDbvjdVsJ+3atWvpAlRVVRW5XpASBgAAAAAA0E6qUzJcVAa3mg/mN+11TMeg
a2lUb4SWCKuoqCgrKyspKUlKStLR0WFbtThq7cj5kgtaD2x/+kWqqKqxnbQn
Tpyws7NzcnIS1RsJDg6OjIyMj49PTU3NysrKz8/n8/lCobC8vJzzeiMA0NOI
Qjat6kl/QaMhu6ioyMbGhu3Wp6yi+odvOOd3b7Qe2Hae+JXtpFVXV798+bKD
g8P9+/fd3d29vLwCAgJCQ0Ojo6MTEhKSk5NJyM7NzS0uLi4tLSXXSFVVVSdJ
CaOqElMDLFdLmFQ+GTSdf/8Rh0cIAABdUXlkbIDFSgnxxXO4RaGrB9eHKWn7
SIFAINo+MjExkUR2WiiMZoWJCoWdPHlSQUGBbRRxxt2f8yEQWg9sp+57sJ2x
qqqqcXFxtOxtbW0tmQOSmSC2jwQAAAAAAJC7oKVrWy8RpjCwPPwZ10cKIBvR
78s0H4yWCKP5YEVFRUuXLmVbsnh9w2bO11vQemazeP1NtpN29erVt2/fvnPn
jouLi3iJsJiYmKSkpIyMjNzc3MLCQoFAQOuNkIuFXDIvXrx4+fIl6oMBQHsT
T+F+/vw5zQcThez8/PypU6ey3f12nviV81s3Ws9sJmYj2E7affv22dvbOzk5
ubm5eXh4+Pv7h4SEREVF0RRuErLJFUFCdksp3Fxfzf+j0NXDc7iFpCouFisr
ouK4PkwAAOgCngtK/ru1gaJJSzHlgc6olGO//f3iBddH+l+ilDC6EkV3QidT
bBK4ybA2Ly8vOzubBHQyDSeT8fDw8MDAQB8fHzJJFxUKs7a2/uCDD9hGEeYz
LTgfAqH1zPb+Z1+wnbRvvPEGuTpEO6HTlSikhAEAAAAAAMhRrs0dabaMjNtz
hOsjBZBN03oj1dXVomcz/f392RYrFJWULngEc77YgtYD2+cnz7KdtKqqqhcv
XnRwcKAlwjw9PUW/LyckJKSlpWVnZ+fn55ProqSkpBPWGwGAbq9RShhN4aa/
nZFb0+HDh9nufnr9+ttGp3N+90brgW3lVsatyQ0NDW/fvk13eXZ3dychOyAg
QLTLc3p6emZmZkFBQVFREU3hrqmpIUPczpnC/feLFynHfnugM6rFOaaiSczO
Q88FJVwfKQAAdFIklGScuSo5lESs290JQ0nT7SNFxW/p9pFkGk4m49HR0aGh
oaLtI+/fv0+m7Tdv3rx8+bK2tjbbWGLzwaOcD4TQemC7HhSrrqnFdtJeunSp
tLSUjGxpVhi2jwQAAAAAAJCjv+rqnpjOaDUfzL3P2OclQq4PFkBaNIOl0ZaR
ohJhxcXFfD7fwsKCbaVi2zffc77SgtYz29Ax5mwn7e7du21tbWmJsMePH/v6
+gYFBUVERMTGxiYnJ2dkZOTl5RUWFpaUlAiFQnKZ0CU4cuF0qnojANBdtZTC
TUN2Tk6OkZER293P6vRFzm/daD2w3QxP1tbVZTtpDx48SFO4aT4YTeGOjo5O
TEykuzzn5uYKBILOuWVks54LSiLW7ZZc2iXjzNVOUtoFAAA6D8ETv65bcFI8
JYyuR1VWVpaXl5MgzufzSUAn03DxQmHe3t6PHj0iE3Yybb99+7a1tfXmzZvZ
xhL9Bg5yiMvmfDiE1gOb1W+X2E7acePGiZ5PREoYAAAAAACAfMXt/U6aEmE5
1x24PlIAGTRKCaP1RkQlwgoLC48fP862TKGrb3ArMpXzZRa0Htje3bmX7aQ1
MDCwsbFxcHC4f/++u7u7l5eXqN4ILRGWk5PD5/OLi4vLysrINdKZ640AQLck
HrJFKdzkdiQUCknIXrduHdvdb+7ytzi/daP1zDZ90StsJ+2SJUvoLs/Ozs7i
uzyTkJ2UlJSenk5Cdl5eHk3hpiXCxFO4O2dKGFURFRdgsVLCfNNzuIXgiR/X
hwkAAJ1CVWJq0NK1EqLGk0HTO/lCJZ1K00cenv+LLkmRIC4QCHJzc+n2kfHx
8VFRUSEhIf7+/o0KhV27dm3KlClsI4plaz/kfDiE1gObQ1y24aDBbCetlZWV
aEmKTAnJ+Fb0yAPXVzMAAAAAAEAXVpOZ46o2tNV8MJ8JS/5BSgB0KfQXMVG9
kfr6+pqamsrKSlG9ERMTE7Y1it0//sb5GgtaD2y3o1J19PTZTtp9+/bZ2dnd
u3fPzc3tyZMntERYZGRkfHx8SkpKZmZmXl6eQCAQCoUVFRXkMqmrqyOXDF18
Q0oYALS3RlU9RSXCyE2JhOyoqCg1NTW2u9/Je485v3uj9cB29iHj1uQKCgqn
T5+2t7enIdvDw0O0yzMJ2bREWH5+Pp/PJ1dHeXk53ViHXDXk2ukq8TrnusOT
QdMlTDyDlq6tSkzl+jABAIAzDWXlCftPuCibthQp3DTNEr/64a+6Oq6PtBWi
VSnRKJc+9UCCeGlpKYnmZBqekZGRnJwcGxsbERFBJulkqk4m7K6urnfv3rW1
tbWxsWHePF1NQ+NaYCzngyK0HtgOX77BdtLq6enl5uaSIS4tFFZfX49CYQAA
AAAAAG0XsuIjaUqElT4N4/pIAWTTbL2R8vLykpKSwsLCjRs3si1QzFjyKuer
K2g9s1m89gbbSbtgwYJbt245Ojo6Ozs/fPiw2XojfD6fXBp05a0L1RsBgO6h
aVVPusszuS8VFRW9+eabbHe/d3ft4/zWjdYz24Q5lmwn7YcffkhLhLm4uNAS
YYGBgeHh4TExMSRkZ2Rk5ObmknGsQCAgIbuyslL0Y1nXqur5V11d4lc/uGma
tTT3dFE2Tdh/oqGsnOsjBQCADvXPX3/lXLF11x8nYX0ydOWWujw+10cqA/Ht
I+vq6sh0m+6NTka5ZBpOJuNkSp6YmEim52SSTqbqXl5ejQqFvf7662zjikWr
3+N8UITWM9vSd9aznbQrV66kzypWV1eT64U++ICsMAAAAAAAAGYFDq7S5IM9
2/4l10cKIDP6+7J4iTBab0QgEMTFxWloaLCtTvxo78r50gpaD2wXPUMUlZTY
TtpffvnF3t7eycnpwYMHHh4efn5+wcHBtESYqN5IUVGRaP8pUb0RpIQBQLv6
R0yjqp50l2cSsi9evMh26/u3MEIM53dvtB7Ytn7NuDW5trb2lStXRLs8e3p6
NioRlp2dTUI2uS5KSkroL2V0F6ouWtWzLo8funKLhEmou/64nCu25O7A9ZEC
AEBHEAaGe49bJCEu+E55lfwN14cpM/GxLonaZKxL5t30cUUS00lkJ1PylJSU
uLg4MkknU3VaKMzNze3evXt2dnY2NjanTp1SVlZmG13sP/MH50MjtB7Yzrj7
KygoMJyxioqKERERouUpbB8JAAAAAADQFn83NHiaWbSaD+bWa2R9oYDrgwWQ
AV1wa7beSHFxcUFBwbvvvsu2mLZq227O11XQemabtmAp20m7du1a8XojPj4+
zdYboSXC6GOYXbHeCAB0RaJ43bSqJwnZAoGAhGxzc3O2u9/eU+c5v3Wj9cDm
GJ9jOMiU7aTdunWrra3t3bt3XV1dHz9+THd5joiIiI2NTU5OJiE7Ly+vqKio
tLRUKBTS/XS6QQq3MDDcd8qrEmaj3uMWdcUEAAAAkF5NRrbkJOFH/Sdmnrfu
imHu//z/20eSwP38+fOamprKykoSzck0nM/nkyl5o0Jh3t7eZPJOpvBkIk+m
89evX9+8eTPb6GLkxCmcj47Qemb76MA3bCft4sWLRUXsG20fSWuFddFbAQAA
AAAAQMdLPPijNCXCsi7d5PpIAWQjygej9Ubq6uqqq6srKirolpFXr15lW5RQ
UVX70y+S80UVtB7Ydhw7yXbSampq/vHHHw4ODrREmKenZ0BAQGhoaHR0dEJC
QlpaWnZ2dkFBQXFxsfgzmKJ6I1hqA4B21SiFWzxkl5aWkpBtZWXFdvfrb2Lq
EJfN+d0brQe219Yxbk0+ZcqUW7duiUqEeXl5iXZ5TkxMFO3yTEJ2WVkZuUZI
yCbXS/dI4Sb3gczz1o/6T5S8TVhNRjbXRwoAAHL2srom+dtfXdWGtriVsOqQ
2E+/fllVzfWRshN/CIKOeGtra8mIt7y8nNaxJ1PyrKys1NTU+Pj4qKiokJAQ
Pz8/Dw8PMoUnE3l7e/ubN2+SeX3v3r3Zxhjr937F+QAJrQe2G2FJ2rq6bCft
6dOn6faRokJh4ttHYp0KAAAAAABAGnW5BW6aZq3mg3mNWfD3y5dcHyyAbERb
RjZbb2Ty5MlsKxK7fzjN+YoKWs9sA4cNZztpN27caGdnJ029EVGJsG5QbwQA
uopmt4ykNRNIyE5LS9PX12e7+x28aM35rRutBzbr4Dh1TU22k/bIkSMkZN+7
d8/Nze3JkyeiXZ7j4uJSUlLoLs/kuqC/jpHLpPulcL+sqo799GsX1SEtzUxd
1YYmf/vry+oaro8UAADkgESufNv7j4wmS1iTDHplXU16FtdHKh80JUx8nUq0
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
IiI6OjohISE5OZn2G9HpdHq9nvYbIQ8F7TdCnpGe/0K/EQAYHgOVhLW0tNCu
nosXL2Zb/dZ+8Cn3pRshzrh8/o1sk3bdunUhISFhYWFxcXHx8fFpaWmZmZm0
hLuysrK6utput5OHgpZwd3R0dHZ2CjfR0Fc23trAjEwey/6ghAtu8HI4ULDy
9c7qGt4jBYD/R2+Hu/yjb2NGXzrQkxs7Zq7+39vJH+M9UjgXkJSjt7e3z/WR
NGknWYrRaDQYDFqttri4OCsrKz09PSEhQS6X0+sjDx06xHwWd9v9D3JP8BDi
jEfXrmObtPfddx95NMiull4fSXuF4fpIAAAAAAAYTpb9QYO5MrLsg694jxRg
aAa6MrKtrY32GykoKBg1ahTbjv6nWCX34wiECOPHmFS2GTty5Mg9e/aEhIRE
R0fHxsampqamp6fn5+cXFhaWlZUZDAaLxVJbW9vQ0NDU1NTe3k6vjES/EQAY
NvR9fdIS7vr6+p07d7KtfhPPm3K4oIL76o0QYbywmfFq8mnTph06dGgwJdz0
DhpcGQmnQ6+7U//v7bFj5g50PhAz+tLyj75FbQnAmYCs/LbDEd4rOfMefqnT
ZOE9Ujh3kJTj+PHj9KiNfschHLU5HA6TyWQ0Gknqolarc3JyMjIyEhMTFQpF
eHh4aGiov7//3r17x44dy5YpvfXNj9zTPIQIY39age+o0WyTNjMzs6mpiX7H
gZIwAAAAAAAYZr3uzoQLbzplPVj89OuPtbXzHizA0HjpN0J24g6HY/ny5Wx7
+eff+YD7WQRCnHHNLbezTdp//vOfwcHBoaGhnv1GiouLtVqtwWAwGo203wh5
NIRPF9FvBACGk2cJN72Dpq2trbW1tb6+nqxOc+fOZVv93ti2g/vSjRBhBGuq
p06fyTZpN27cKJFIIiMjZTJZcnKyUqnMy8srKCjQ6/UVFRU1NTU2m408F42N
je3t7R0dHSgJg9On02TJe/gl7zfQ2Q5HYNYBcNScU4j7XmH40ZIw+jUHSUW6
uro8G/LT6yPLyspKSkpUKlVubi5JaRISEqKjoyMiIgIDAwMCAjZs2MCWKc25
/ErumR5CnLH+c8bPlG677TaSvdOvOWhJGE3dcdQGAAAAAADDQLfhw8G0CLOH
yHiPFGDI+l8Z2dHRQXbfjY2NZCe+e/duto38+ImT/PP13A8iECKMtVs/Y5u0
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
0u0bRo5yTivgflwASVD//Pgrtkk7evTo06dPu7m50RZUUVFRtAVVRkYG9Ruh
JWHUb4RahNGSMOqwh5IwAMCVRnD1FEq4qSEAWZTI0vT666+zrX4LHlrBfemG
pKm/r3+WbdIuW7bs7Nmz3t7eZMsODQ2NjIxMTExMTU3NyckhW3ZZWRnZsvV6
PXkuBEMAcY8YvP0BgGKJT42d97i18pt7Hq2RJ/MeJpAEreWVGZvetFameNM9
5b86o0wRAAEa0pDwprOzU9w+knaTp+0j8/LyFApFSkpKfHx8RESE0D7yzJkz
p0+fnjBhAlsk9vT2t7mHkZAE5aYoHTdhItuk3bdvn8ViIc8IbR9Jj/JgHQwA
AAAAAACgZL/8bn8swgyBkbxHCsAlY8VvpKamRqfTzZw5ky3X/vjwH9zPCiAJ
yiNXM37iLWyT9u233xa3jJTL5YmJidRvpLi4uKysTNwykvqN0JaReLkMABgY
aAk3fe9DliD63qe2ttZoNKpUquHDh7Otft+6+nNfvSEJ6reYdLvBg9km7f79
+4US7piYmLi4uLS0tKysLHEJNwllydNB3/ugZSQAvfHnhQvlvzqH3nSPlbOO
jE1vtpZX8h4puG4519JauOdA4JDpVpqZ5r27B81MAegGPYigt0WoVxgJe+rr
60kIRLIDrVar0WhIjqBUKkmYlJSUFBUVFRYW5u/v7+Pj4+Li4uTktHv3brZI
bPioUWfSC7kHk5AEtfun39gm7cSJE6urq6nhP0mlxbdFkBoAAAAAAAAgcRoU
+QGDJvdZD5a65mXeIwWABaEkrJvfiMViMZlMO3fuZEu0J02fyf2UAJKmHnvu
RbZJu2TJEhcXFy8vL19f35CQkIiIiPj4+JSUFIVCkZeXV1paKrSgoidI1G8E
LagAAAOJuCSMrELNzc1kRSJbtl6vf/TRR9lWv6f++Rr3pRuSppY+tppt0m7c
uNHV1dXT01Mmk4WGhsbGxiYkJGRmZpItu7CwUK1Wa7VasmWTR6O2tpZEti0t
LSgJA8A6XQ2Nee/ukQ2e1tuJR+CQ6YV7DsAXHVxeyGpc5eoX/reFVk7bUla9
2FxcxnukAFyN9GwfSbKDxsZGEv+QKKi39pHBwcEBAQG0feSpU6dWrFjBFo8t
efQJ7sEkJE0tW/0U26R98cUX6YURtI8EAAAAAAAAiIm/f12f9WAyu6lNBcW8
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
S4NWzvfWPrK8vFytVufn52dnZ5O4i0RfJAYTqsJmzJjBFtdR3vrmAPfQFJKg
/ojLsndwYJu0rq6uQvtIVIUBAAAAAABw7XLh3Lnoux7usx4saNiMtspq3oMF
4NLo5g8m1IM1NjaSlNZkMlVXVz/66KNsefGW3Z9zz+shaeqO+YvYJu327dsF
v5Hw8PDY2FixRZjQMpJahMFvBAAwwAhbdrcSbloPRhaoqVOnsq1+eP8CcZFr
tnr0+BvZJu3777/v7u7u6+sbFBQUGRkpLuEuLi4uLy/X6XRky0bLSACuG9p0
+swX3g6w6fVMJmTsHM1RxwvnzvEe6fWPKSIuZvYjVs7H4havqU3J4j1MAAAL
tHKehExdXV1tbW2tra2NjY319fX0hLCysrKsrEylUuXk5KSnpyckJERHR4eG
hgYEBHh7e//FkrBJ02dyj04haYqkw2yTduHChRaLhaYb9IQQJWEAAAAAAABc
ixR//XN/LMJKD53gPVIALpneSsJIMltbW2s0Gn/66Se2pHj4qFFn0lXck3pI
gnr5oy/ZJu2YMWMcHR09PT39/f2Dg4Pp++VufiPV1dVms7murg5+IwCAgadb
l+e2trampiZaEka27Ndff51t9Vv48KPcl25ImnroqWfYJu2DDz549uxZumWH
hobGxMQkJiamp6cLW7ZWq9Xr9WTLtlgsdMtGSRgA1we1KVlxi9dYOZmJmf2I
KSKO9zCvW5pLNGnrt1r5/sMmzteecscaC8C1i/X2kSS+IlEWibVoVVhaWhqt
CqNGYTNnzmQL7QQ2bH+Le4AKSVDuOWXjJ/6NbdLu3buX9hEgTwrJ0Ds7O2nG
gaowAAAAAAAArhXajebgkXf0WQ8WOf2BC52dvAcLwCVzUb+RxsZGksyaTCad
Tsd8xe+TIye5Z/SQBOWeUzZuwkS2Sbtz507BbyQiIqKb34hGo6mqqqItI8kz
Qp4UvFwGAAwY3Uq4aT2YYBFWU1NDVqobbriBbfX71i2A++oNSVDHo1Jt7ezY
Ju0PP/xA68FCQkKElpHZ2dn5+flqtbq8vFwo4aZvZ4QSburqyfuBBgD8JciG
qD3lHjZxvpUjmrT1W5tLNLxHel1xrqm54ONvZPa39vadBzrcRv7BueYW3iMF
APwlhJIwAgmfSN5B4qimpqba2lqLxWIwGKhRWGFhYW5ubmZmZnJyslwuDw8P
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
geGXk8S+/PiZ0PF3W/k4GZvevCwVbsp3vuq7mm7I9A6z5a//LQDA9YRgFEaS
mm4lYQsWLNDpdOXl5SUlJXl5eTk5OampqYmJiSTYCw0N9fX19fT0dHZ2dnR0
XLlyJVsMuegReCNDfLR8zQa2Sbt58+ba2lqS0TQ1NbW3t5OkBn0KAAAAAAAA
uLykP72tP4eENfJk3iMFgIWL+o2QNNNisZjN5oKCghEjRrBlrF+f8eGebkMS
1O+x6XaD7dkm7TfffGPdb0Sn0+n1+tra2oaGBviNAAAGHnFJGHX1JMsRtQiL
iIhgW/rsHRxOyDO5r96QBPX2twfZJu2wYcNOnDjh7u7u7+8fFBQUFRUll8vT
0tKysrJI7FpcXFxRUUEtwmiXZxLcwtUTANCNDlNN8Mg7+jzqibzt/vMdHZf9
r7dqdRmb3rTyd0PH311+/MwlXTysiU2OnbvSyu+Uz19lSUi7XB+hpawiYNDk
Pr/A7Fc/uFx/EQBwfSBuH9mzJIzEbySKI7Gc0D4yNTWVto+UyWR+fn60feR/
/vMfW1tbtkjy58AY7mEwJEEdCohim7H29vY5OTn19fX0ngvaRwIAAAAAAHB5
0fuH9aceDGdc4Nrlon4jJM00m816vX7VqlVs6erqF1/lnmtD0tQDT6xlm7TP
PPNMn34jJpOJWoRd1G+E99MMALie6enqSbs819bW1tTUkC17wYIFbKvfjn0/
cl+6IWlq8vRZbJP23XffFZdwx8XFJSUlZWVl5eTk0BLu6urqbi0jsWUDALrR
z9t/hsDIKzcGS0KafP4qK389du7Kmti+rx9e6OpSbN1trcDspnsq/nD983K/
OC49+Ht/vkNjUNTl/bsAgGsaKyVhCxcuNJlMJJCrrKwkQZ1KpcrOzk5PTyfB
XkxMTEhIiEwm8/T0dHV1PXXq1IsvvsgWSc5Zcj/3MBiSpv6xazfbpF2zZg1J
/ElqQ6+6dHZ20tTmPHrWAAAAAAAA8Ne40NUVdfvyPk+3gm6Y2abT8x4sAIz0
5jdiNBpjY2PZElW7wYN/i07jnmhDEtR7B46yTdohQ4b89ttvffqNmEym2tra
pqami/qN8H6aAQDXMz1dPclaRFtGms3mPXv2sK1+4yfe4p5Txn31hiSop7e/
zTZpb7nlFmdnZ09PT19f39DQ0MjIyMTExNTU1JycnLy8vJKSkvLycr1eT54L
ahFGglvyvMDVEwAgpjYlqz+1TBnP77jSI/nzwoWKEy6hN91jZRjpz2xv0Wit
/JLSQyd6+1mZ/a35u/d1NTZdicF3NTT2x2kt8e8br8RfBwBc09CqsCVLlojD
vIULF5L4zWg0VldXV1RUlJaWKpVKhUKRkpKSkJBA20f6+fl5eXk5OTn9/vvv
I0eOZIsnt36+j3swDElQTil5w4YzNuMgE76mpob2LED7SAAAAAAAAC4XRXsP
9OeQsOzwKd4jBYAF634jVVVV9913H1uWuv2rb7hn2ZA0desds9km7VtvvdUf
vxHaMpL6tKMeDAAwkPQs4aaunmRpImvUhAkT2Fa/D3/+nfvSDUlQzmkFN4wc
xTZpv/jiC3d3dz8/P5lMRku4U1NTL1rCLViECffo0TISAPA//63Cip33eJ9H
PTL7W1tKywdmSF2NTfm795G/2NtgAodMt3L0lLbu1Yv+VOqal5vVmis68mqf
kP6cm2mOOl7RYQAArjl6KwkjIZzZbCY5jlarJWmOSqVSKpVpaWlJSUnR0dHh
4eH+/v4+Pj4uLi5OTk7btm1jiydv+ttkD2U595AYkqA+OPgr26S96667yKNB
2xagJAwAAAAAAIDLQnu1IWj4rD7PtaJmPXihq4v3YAFgwYrfiMlk+vrrr9lS
1DE33uyareaeYkMS1Ka3P2CbtDfffLOTk1N//Ebq6urIM9LW1ga/EQDAAENL
uLu6usji09ra2tzcXF9fX1tbS1Yn5p4py55cx33phqSpJSsZW5OvXLnS1dWV
bNkymSwkJCQmJiYuLi49PT07O1ulUqnV6srKyurq6pqaGrplCxZhKAkDAAiU
/HCsP1VM6u+PDvDAmtWa1DUvWxmSOTrxoj+Y/8G/u/3L6Dv/bgqXD8CY/7xw
IWLa0v4cnQ3AYAAA1xA0JOtWErZo0SLaucBsNldVVWm12pKSksLCQoVCkZGR
IZfLo6Ojg4ODAwICaPvI06dPL1iwgC2qfGLzP7mHxJAE5ZlXccut09km7e7d
u2mO07N9JHIcAAAAAAAAGOjtlmU3DcwhGwBXAit+IxUVFZMmTWLLT9/54TD3
/BqSoFwyi0eOGcs2aT/55BMPD4/++I2QZ4T6jcAiDAAwYPRWwl1TU0OWpvT0
dAcHB7bV76B/JPfVG5KgfgmW29jYMMzYQYMGHThwwMvLi2zZ4hJuhUKhVCpL
S0vJll1dXW00Gum7EsEiTLhBz/tpBgDwp7O2LmTsnD6PesInLzrf1sZlhKZw
efSdf7/oqPI//PqiP9JuNEfNWEb/TciY2WU/nyR5/oANWO8f1p/Ts4KPvhmw
IQEArn56KwmjJ5MWi4UEdVVVVWVlZcXFxTk5OZmZmSTwk8vlYWFhQUFB3t7e
Hh4ejo6OX375JVsq5DB06MkEBffAGJKgvjrpyjZpx4wZQ/Kd2tpakua0trZ2
/Bd4hQEAAAAAAMCGJS6lPydamZt38h4pAOxY8Rt59dVX2ZLTJStXcc+sIWlq
2ZPr2CbtQw895Obm1k+/kaamJuo3gpIwAMCA0bMkjL4ooR1V1qxZw7b6bXrr
fe5LNyRNzb3vQbZJ+9JLL7m4uPj4+Pj7+4eHh0dHRycnJ5MtW6lUki1bo9Fo
tVryUAgdVQSLMOzXAACBzH+81Z/TnmrvYI6DvHDuXNnPJ0PGzO42KvIfe/uR
8+3t1T4h1Z6B55qaB3KolMzNO/v8SsnHOdfSOvBjAwBczSxdulQc7C1evJjE
b9QorKamhl5ZLSsry8/Pz83NFdpHhoWFkWjQ29v7zJkzTk5Oq1evZostH97w
LPfAGJKmHn1uM9uk3bBhg5Ds0BYGQv8CAu8HGgAAAAAAgGuGP8+fj7l7ZZ/H
WYFDZ7RWVPEeLAAsdHu5TGhubhb8RrKzs4cOHfr/sXfn0U1XadzAT4GyI6CA
GwIu4zIOoiPq4DgKjgKOKIiig6MjooIIuCDuy7igoiK4AOICdN/SLU33Nm26
p2vapE3btEmbpNmapG2aNrUgznvfue/Jm9MiiVfoBX7fz3n+mXOcc+6h93d/
z715fvdh25l+Jkrjvq1GCDD2Z5eMGj2aYcYGBQV9/vnn8fHxSUlJ6enp2dnZ
RUVFZWVlQ+4bsVgsTqeT9p/yeDxHjhxBy0gAGAHe9/WQEm76K4nZbP7uu+/Y
3tcTJk0+XKLkvnojBBjPvPsR26Q955xzQkJC4uLixGJxWlqaVCqVyWSVlZXk
ld3Y2NjS0qLX6zs6OoaUcNMrwuhPJHhlA0B3tVIc5L8erPyBp3mP9P8adHTV
PfemePQcOqr86+464urlPajj66lRBVJoV/nIJt4jBYDTy/CSMLLfoVciOxwO
m81GEjydTkeSPZVKRRK/srKyvLy87OxskhAmJiZGRUWFh4fv2bMnODiYLcN8
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
GwEAvoaUhJElyLdDyq233sq2+j3zzg7uSzdCmHHpNX9im7RbtmyJjIxMTEwU
i8XZ2dnklU1LwpRKJXlla7Xa9vZ28lCQR4N2SPGWcKMkDAConz2e7Dk3+z3q
SZ9+7aCji/dgz1rHjhzJunih379C3p/+znukAMDNcUvCKG/7yCNHjtDzzOHt
IxsaGurq6kiWSHJF3/aRERERYWFhDz/8MFsuesPflnBPpBHCjNUbtrJN2oce
esi7OaLtI73fy6DlAQAAAAAImUvVKB49x+/xVNFfV/EeKQAjb8tI74/LvveN
FBYWjho1imGbOWr0aHwxh+ASr+89yHY2EhwcvHfvXt+WkfTHZdoyUqfT6fV6
3DcCALx4i8EIsvIMDg729/f39vaSFYl+CP/xxx+zrX7TZsyKqtFwX70RAox/
bt3ONmlnzZoVERHhLeHOz88nKau3hNvbMtLhcHR3d5PMljws9FcP2uIZJdwA
QKhe/E8gX/8ZwhN4j/Qs1xGdHMgfovHdXbxHCgB8BFISRo80PR4PvSjMbrdb
rVaSEOp0usbGRpVKVVlZKZfLZTKZVCqlJWHR0dEkn9y7d+/kyZPZMtJNH37O
PZ1GCDB+T2eEsLAwWhJG90coCQMAAAAAIIrveMj/2dSoS3pqG3iPFICRtySM
bAN97xuh5yeLFy9m22M+8eo73PfICGHGH667gW3SbtiwISIiwnvfiFQq9b1v
hJaEDblvBCVhADBifEvCaG8UWhLmdDrJK7u9vf2SSy5hW/1e+PRr7ks3QoAR
WdV8zvRz2Sbt9u3bY2JiRCJRWlpaZmZmQUFBcXFxTU1NXV1dU1NTa2ur0Wg0
m83k6ejp6enr66NXhNHeKCgJAwCiT9suGXeZ39Oe/OuX/oIfSU+9igef8fu3
yJi14OeBAd4jBQAOTlASRvm2jyRbJPqh65D2kSRLJLkibR+ZlZWVnp7ubR+5
bt06toz0onmXier13JNqhABj684v2Sbt9ddf73A4yNOB9pEAAAAAAJT+YHQg
3yrWv7KD90gBWBz3x2V6ctLV1WWxWHbv3s22wTxn+rnhFY3cN8gIAcbj299i
m7TnnXdeeHh4bGysWCxOS0ujLSMrKytramoaGxs1Go3BYOjo6Ojs7PS2jPS2
oMLJCQCMAPrpLr0fbHjLyPXr17Otfjf/fRn3pRshzPjbCsbW5IsXLz5uy0iV
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
NhqNS5YsYVv9nnjlbe5LN0KYceWCP7NN2meeeSY2NlYkEv1aCbfJZLJYLLSE
m97qiZaRAOCrq7xGHOS/HqxyzUbeI4UTsctKA6nrq934Gu+RAsCp8ntKwuj2
6ujRo77bK9o0oaOjw2AwkMRSrVaTJLOysrKgoCAvLy81NTU5OZkkolFRUYcP
H37wwQfZstlb7r6HeyqOEGaseOIZtkm7dOlS3y9kcRwKAAAAAGeH5g+/DORw
qXXPD7xHCsDuBPeNVFRUBAcHM2wSg4KCvpLkcd/kIgQYe8S5bCcbo0eP/vrr
r2NiYpKTk1NTU6VSaX5+vlwur6ysPPF9I7gpHQBGxvCSsN7eXvLKdjgcnZ2d
X3zxBdvqd870c8MrGrmv3ggBxuPb32KbtOedd97hw4cTEhKSkpLS09OzsrKK
iopKS0sVCoVSqRxewk2SW+9vFigJA4D//u+VKlv4D79HPSnB89waHe/Bgh91
z70ZyIecg44u3iMFgFOCuSSMou0j6XeyJGPs6+ujh6IWi8VkMv1a+0iSiIpE
ovDw8H379k2YMIEtp33hs2+4J+QIAcb3+RXBY8exTVqZTOZwOHAoCgAAAABn
jQGLLXXKVX5PlnKvuO3Y4CDvwQKwGN4ysr+/n+zp6AdxJpNp+fLlbDvEtS+8
wn2HixBmXHvTX/xP0ONZt25ddHS0SCSSSCQZGRn5+fkFBQXV1dW1tbWNjY0a
jcZoNJKHgjwa5AGh942gZSQAjCS62tBfK4aUcHd0dFx66aVsq98b+w9zX7oR
AoxoRcv0meezTdqXXnopNjZWLBaTVzZtGelbwt3e3k5e2d4S7t7eXvprhbez
CX6tAIDWL74L5Ou/5o++5j1S8M+t0QVy4VvZ8sd4jxQATomTWBJGkkaPx0M2
Wd3d3SSZNJvNer1ep9PV19fX1dWRhLOkpCQ3NzcrKys5OTkxMTEyMjI0NHTT
pk1sOe3cK6/mnpMjhBkb39vJNmlvueUWsskiDwh5THw3WSgJAwAAAIAzVMWD
zwRySGhNz+M9UgBGw+8bcbvdLpeL3jeyd+9etu3hpHOmhsrruW9vEQKMp978
gG3STps27eDBgyKRKCkpKSMjIycnx/e+kZaWFq1WazabrVYrvW8Ed6QDwMjz
vdWTfsDe3d3tdDotFsvmzZvZVr95V/+R+9KNEGb8/cF/sk3aRYsWRUVFxcXF
paSkpKWl5eXlFRQUVFVVkVe2Wq1ubm42GAwdHR20hLu3t5c8KfiAHQB8DXZ1
p5/3J79HPVkXLzza1897sBAQzaf7Ajm+621s4T1SADj5fmdJGMkM6Xc3Q9pH
kn2W3W43Go3t7e20fSRJOMvLy2n7SIlEIhaLY2NjIyMjDx06dMEFF7Bltg9t
eoF7Wo4QYEQrWs674EK2Sbtjxw7aPtL3a1lstQAAAADgTOQorgjkQKnyn8/x
HikAO7pTo5/C0XMP30/hrrrqKra94fYvv+O+t0UIMGLrdDMvms02aTdv3hwV
FZWYmJiSkpKTk5Ofn19WVlZeXq5SqdRqtU6n0+v1Vqu1s7OTPCMul8vj8ZDn
xXvfCErCAOCU+rUSbrvdTl7ZSqVyypQpbKvfjohE7qs3QoDxXV7FmOCxbJP2
k08+8ZZwe1tG1tbWkld2a2sreWWbTCaLxeJbwo33NQD4qn78+UBOezpixLxH
CoEa7OpOnXyl379pyV3/5D1SADj5fn9J2IkbKBiNRo1G09jYqFAoqqqqCgsL
8/Pz09PTJRIJSUqjo6NDQ0NfeeUVtsx28tRp4RWN3JNzhADj5d3fsk3aiy66
yGw2D2mggJIwAAAAADjj/HLsWP6Cu/2eJknGX96n0/MeLAC7E9w3sm3bNraN
4ezL/yCq13Pf2CIEGMsffYJt0i5cuJDeNyIWi9PS0vLz8wsLCysqKqqrq33v
G7Hb7eTpwH0jADDyhpdwu1yunp6ezs5Oq9W6bNkyttXv3sef4r50I4QZty5b
wTZpH3zwwcjIyISEhOTk5KysrJycnJKSErlcXldXV19fr9Vq29vbzWazzWaj
3UxQwg0AQ/Qo6sWjLvF72iO//0neI4XfpiNGHEilX/v3kbxHCgAn2e8sCaN8
D0hJ9tjf308yya6uLrLbIrklSTJbWlqUSqVCoSgtLS0qKiKJaEZGRlJSUnx8
fEREREhIyOLFi9ny21uX38c9OUcIMxYtu5dt0j755JN2u93lcvX29tIDUrLb
wgEpAAAAAJxZWj7bH8hRkmbnPt4jBWA0/CM433vRGxsbp02bxrYrfO9QDPct
LUKAcbCwZuz48WyT9oMPPoiNjU1ISEhLS8vKyiooKCgpKVEoFHV1dc3Nza2t
rR0dHWaz2fdedLSMBICRQd/Xw0u46S8UFoslLy+PbekbEzz2O2k599UbIcB4
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
vLI1Gg15ZZtMJovF4nQ6ySu7r6/P+7sDfV+jJAxA4H4eGMie9xe/Rz1pU6/5
qdPBe7BwqrjqmwI58Stf9RTvkQIAu1NaEkYTS5Jkkt0ZbbjQ1dVFdmdms7mj
o0Or1TY3N9fV1dXU1BQXF8tksszMzNTU1Pj4+JiYmNDQ0Pfee48tGR47btwP
siruyTxCgPF+SBzbpJ06dSrZo5EHhDwm3q91aPtIbM0AAAAAgKNetSZlzFy/
p0OFi+7nPVKA32V4y8ienh6n02kymdatW8e20Vu07F7uu1SEMOPW5fexTdol
S5bQ+0bEYnFaWhq9b6SysvK4LSNdLhd5UnDfCACMpOOWcJNXdmdnp8Viueee
e9hWv7XPb+e+dCOEGdfe9Bf/E/R4SIIaGRmZmJhIXtnDS7jb2toMBgN5KLy3
eqJlJAAMUf/yB4HUAukPx/IeKZxaTe/v9j8TRl3S19rGe6QAwOiUloRR9ECV
7M76+vpo+0ir1Upy0fb2dq1WW19fX1tbK5fLi4uLc3NzMzMzk5OTExISIiIi
QkJCVqxYwZYP377iAe7JPEKYseyfj7NN2pUrVzocDpfL1dvbS54XskE7+j+4
KwwAAAAAOCq58+FAjoZ6alS8Rwrwu9D7RuhHbX19fWRf1tXVZbfbq6urx48f
z7bL25WQyX2LihBgfJNeOGrUKIYZS/5fu3btiomJiY+PT01NzczMlMlkxcXF
5Cmora1tampqbW3t6Ojw3jfidrv7+/tREgYAI8m3hNv7iwN5ZVut1gMHDrC9
rydOOSe0TMV99UYIMJ5660O2STtt2rRDhw6RV3ZycjJ5ZUulUvLKrqioqKmp
UavVtISbvLI7OztJNktLuGlJGN7XAED1txkk4y/3e9qTN/+uX37+mfdg4dT6
qdMhmXCF38kgX/EE75ECAKNTVBJG0cSSfrND20fSkjDaPtJgMLS1tZEEVaVS
VVVVyeXy/Pz8nJwciUSSlJQUFRUVFha2Z8+ecePGsWXFr379A/eUHiHA+Dan
dPSYMQwzNigoqKSkhH6zg/aRAAAAAHA6MISKAvloVLXtfd4jBWD3ay0j6X0j
K1euZDuUeHDjVu77U4Qw4/rb7mCbtI8++mhERMTw+0bq6uoaGhqG3DdCHpP+
/n7yyKBlJACMDPpbw/ASbrIi0Vs9r776arbVb/ueA9yXboQAI7ZON/Oi2WyT
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
GcaNG7d//37f35dlMllZWVlNTU1dXV1TU1Nra6vRaDSbzU6nk36khvtGAGCE
+ZaEeTwesgrREm6r1bpjxw621e/c8y+IVrRwX70RAoyHn3uJbdJecMEFERER
IpEoOTk5PT1dKpWSV7ZcLq+qqqqvryev7Pb2dvLK7uzsJNmsy+UiyS1KuAHA
l+bTfYF8/Uf+M94jhdNOT40qkMlT+c/neI8UAPwY4ZIwasi1zwS9KIy2jzQY
DG1tbY2NjSqVyts+Mjc3l2S89KIwkgMfOHBgypQpbFn0xvd2ct8CIAQYh0vq
JkyazDZpDx8+7Ns+0nsMizYNAAAAAHBSlK9cH8g5jy27gPdIAdh5DyK8Lah8
7xu57bbb2PZrT77xHvf9JkKYcfm117FN2meffXZIy8iysrLq6mrf+0aGt4zE
fSMAMDJ8fzsYHBwkS5Bvy0itVnvRRRexrX7bdu/nvnQjBBjhFY2Tp05jm7Sv
v/66t2UkfWUXFxfTEm7aMpKWcNOWkX19fd7fDuh3EHhrAwjcoKMrffq1fo96
sufc/LPHw3uwcDpSv/GJ3/mTMmaux2DiPVIAOBG+JWHeZg39/f1kW+d0Ou12
e0dHh16v12g0arWaJLcVFRWFhYX5+fmZmZn0orCoqKjQ0ND169ezZdEXzJkb
q2zjvhFACDBe+Owbtkk7f/58h8PR3d3tdrt9v8xFSRgAAAAA/H52WWkg9WDV
j23lPVKA38X7+7K3BVVPT09XV5fNZtu1axfbZm3ajJmRVc3cN5sIAca/Xnqd
bdLOnDkzLCyM/r6cnp6em5tbWFgol8tramrofSO0JIw8F3a7nTwjbrebfs6J
kjAAGBne+8G8JdxkIXK5XGRRslqt69atY1v9/rL0H9yXboQw46/3MLYmX7Jk
SWRkpEgkEovFGRkZeXl5RUVFZWVlCoVCpVK1trbqdDqTyUSeC1rC3d/fT1Jc
lIQBgFfV2s2BnPaYEtJ5jxROUwMmS8rYS/1fFLZmI++RAsCJcCkJo2hS6r38
eXj7SI1Go1QqSX5bWlpaWFgolUpJ3pucnBwXF0cy4cOHDy9YsIAtl75v3TPc
NwIIAUassu3CuZeyTdq33nrL6XT29vb6to/EYSwAAAAA/E6//Pxz3p/+7vd4
RzLhin59B+/BAjCiPy6TDdSRI0eG3Ddit9vb29vnzJnDtlPb+ske7jtNhAAj
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
T7EF7Z/+9CdyZNMS7qSkpLS0tNzcXHJkK5VKcmTTEm6LxUKObKGEm7YIo0c2
zmsARE759g/dqZYxBkbyXikA7LjzyjVu8m2oewTgv8vwKAmj9BsfSW7UNF3c
0tJC7KdOp6uvr6+oqCgrK8vPz8/Ozk5JSUlMTIyIiAgJCfH19fX29ma2qPcv
fYa7VYHEqUdWPMsWtK+88opgP53TxSgJAwAAAAC4ksl86FmXyZPokdd1Vqp4
rxQAdi7eb4T4+kmTJrH5oH/6hXE3cZAIdTStcNToMWxB+9lnn4WEhAj9RjIy
MnJycgaOjKT9Rrq7ux0OB+ZPAQAGB3pe05Kw85ZwJyYmsm19o8eOPSYv5r57
QyLUzi8YR5NPmDDh2LFjtIQ7JiYmJSVFLpcXFBQ4l3AbDAZylRVKuOkzbRzZ
AACCvVYTPep6l9ke+b3LsVeAIU1npcqd0seC5zfxXikAw4phVhImNAoj12mH
w0Gu1sSBWq1Wi8VCrtxarZZcv5VKZWFhYW5ublpaWlJSUmRkZFhYmEQi8fX1
/fLLLz09Pdnu/N9Hp3I3LJAI9V1UioeHB0PEjh49mhjS9vb2zs5O+iIJJWEA
AAAAAFc4DUf93cmcVP/9C94rBeCSGFgS5uzuly9fzmbbn/nzq9wdHCROPfTM
Kragff755/39/UNDQyMiIhITE1NSUrKzs/Pz88vKyiorK+vr6xsaGpqamlpa
Wpzd/enTp9EiDAAwCAjnNaGvr48c2T09PeTIbm1ttdlsZHdauHAh2+637dOv
uG/dkAgVUqmfd9OtbEG7c+dOiUQSHBwcHR0dHx+flpaWkZFRXFxMjuyampq6
urrGxkaTyUQ+DXJkoyQMANCP3Kdfcp3t8ZjbVqjgvVIALhXVvgOuo33EvO76
Bt4rBWD4MPxKwmifasGE2u12cscmN22j0ajX68ndm9zAFQpFUVERuZOTm3lc
XFxUVBS5q5Mbu7e398svv8x257/r/oe4exZInPrT9rfZgnbFihWtra30XRL5
WAQHisIwAAAAAIArkNOdXYmz7nGZNiF/Q/6S92IBYORC/UboCCqz2Zyamsr2
KGbkqNFHUwu42zdIhHrnu5/ZPPvYsWN/+eWXi/Qb0el0jY2NA/uN4MEXAGBw
uEgJd3Nz8759+9h2v6tnzw1U1HPfvSERau1WxtHkc+bM8fX1DQkJGVjCXVFR
UV9fT45sWsJNu3r2K+HGeQ2AyGn0C3Pn9V/Fro95rxSA/wKnWmwx4252GfD5
K1/lvVIAhg/DuySMXK27u7vJHbu1tZVcuY1Go0ajqa2tJVfxkpKSnJwcuVxO
ruixsbGhoaFSqdTHx+fo0aOTJ09mu/m/sfcz7rYFEqF88irGT2IM2hMnTths
NloSdurfIHUMAAAAAHBlUrZ1jztJQlNwDO+VAsDOhfqNtLW1UV//4IMPsnmf
1z/cz927QeLUDbfdyRa027ZtCwwMDA4Ojo2NTUhIcL/fCHw9AGBwcC4J6+3t
dTgctIS7paVFq9XOmjWLbfd774dj3LduSITyya+cMHkKW9B+9NFH5MgOCwuL
jIxMSkoiR3Zubm5hYaFSqayuriafg16vt1gsVqu1o6ODHNnkYxHy8OgPBoDI
Odvbm3Td/S5TPXFT7zhlbeW9WAD+O+i9pO5kOBv9wnivFIBhwnAqCaMIPpS+
ThKsKB0wodPpNBpNv/GRMpmMjo8MCAjw8/PbtGkT281/5px50nItd/MCiVC7
DxxhC9rbb7+9ubl54IAJWl3J+2sGAAAAAAD/l66q2uiR17nMlmQ+9CzvlQJw
SVy838jnn3/OZnymz5wlKVVzN26QCPXiW++yBe2sWbN8fHzoj8symew/6jeC
H5cBAJcb5xJuoauncwn3hg0b2Ha/h55ZxX3rhsSpB59ewRa0S5YsoSXcA0dG
qlQqcmTr9Xqj0UhLuO12O32aTb4aWg+GUxsAkVPx9ifu1MbovYN5rxSA/xrn
+voSr/29y7BP/92TvFcKwDBhWJaEkVu0kEB2OBx0xgS5cjc3Nzc2Nup0utra
2srKSnItz8/Pl8vlKSkpUVFR4eHhQUFBAQEBJ06cWLBgAdv9f8WG17mbF0iE
Cq7QzbnxZrag3bNnD00gd3d3k+8FJWEAAAAAAFcg2YvXuU4SjpjXoajkvVIA
LomL9BvR6/Vz585lcz27vj7M3bVBIpR/kWrytOlsQfvee+8FBgaGh4dHRUWl
pKSkp6e7328E/cEAAJebfiXcQldPm81GjmyyWY0ZM4Zt9/s2Mpn77g2JUAdj
09lGk3t6en777bfBwcFhYWGxsbEymSwjIyMnJ6e0tLS8vFytVpMj22g0NjU1
tba2Chl4lIQBACjdWn3M2JtcF8b8dumv+MEODC/cnJda+8+DvFcKwHBg+JWE
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
uKl3nGqx8V4sAJeEMDKSGJB+IyM1Gs3MmTPZ3M2ewye4WzNIhPLJqxg/aTJb
0O7du1foN+I8MrK6urq2tva8IyPJJ0NtOzw7AOByQ/cZOqZ2YAl3Zmamp6cn
w9Y3wtPzUHwm990bEqG+DmUcTT5q1KgffvjBeWSkcwl3XV1dQ0MDLeGmmfbu
7m6MjAQACJijZO7Ug5VufJv3SgEYJEwhsW7NUf3Jl/dKARiqiLMkrL29nY6f
aGxsJFf0mpqasrKy4uLirKwsuVxOrvGxsbHBwcGBgYHe3t779+9nswYjR40+
mlrA3dpAItRnARFsQTtx4kS1Wt3a2ko+k56eHjq0haZ6kF4GAAAAABhMqt7/
zJ18iO5YAO+VAnCp0JIw6tnpCKqOjo62tjaLxfLyyy+zWZtHlq/m7ssgcer+
J5exBe3SpUtpv5GoqKi4uDg6gqqoqIj2G6mtrdXr9QaDgY6gIp7dbrdjBBUA
YDAZWBJGS7itVis5spcsWcK2+7389gfct25InPrNPQvZgnbTpk0BAQHh4eHk
yJbJZKmpqbm5uQUFBeXl5VVVVRqNRqfTmc3mlpYWOo/DuYSb3nt5f80AAG6c
O3Mm9Y7FLlM9seNvdjSaeC8WgEHi17Nnk2940OV3kXLrInheANgY3iVhFLI/
kGs28arC+EiaXiZ38qamJnI/r6+vr6iooOMjye3deXykn5+fj4/Ps88+y+YO
Hnx6BXdrA4lTy1/ayBa0y5cv72dXaaoHdhUAAAAAYNDoaWiMGXuTy2RI+m+X
/nr2LO/FAsDOxfuN5OXljR49msHUeHh4fBeVwt2UQSIUCTw2Jz5y5Mjvvvtu
4MhIhUKhVCrr6+vpyEiz2UxHRqLfCABgMBGeXRP6/g0dGUlz7E1NTQcPHmTb
/SZNneZXWM1994ZEqI17GEeTT58+3dfXVyqVRkdHx8bGCiXc5MgWRkYaDAZy
lRVGRpJbLvlqUMINACCoPvnWndd/moMneK8UgEGlKTLRnU+jas+/eK8UgCGJ
qErCaJLZ4XDQF0zkWm42m3U6nUajIdd1pVJJS8LINT45OZmWhEkkEj8/v+++
+27s2LFsHuHtb3/kbnAgEepoWuGo0WPYgjY9PZ2WhPX09KAkDAAAAABg8Cl4
9i/uZEJsmfm8VwrAJSGUhJ0+fZqWhHV0dAj9RpYvX87maP60/W3ujgwSp+66
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
/Mx7pQAMGcRWEiYkn+lwCmF8JLmrkxu7wWDQ6XTO4yMzMjLS0tLo+EipVCqR
SA4fPjxx4kQ277D9swPcjQ8kQp3IUowdP54taInbbW9vJ98IxkcCAAAAAFw+
zp05k3bnEy7THbHjb+7RG3kvFoBL4kL9Roglb2pqevzxx9mcy4Z3PuTuvCBx
6pbfLmAL2s2bN7vTb6SlpYU+1EK/EQDAYDKwq6fdbqcl3FarlexRc+fOZdv9
3vrqEPetGxKh/ItUk6fPYAvad9555+Il3OQSS45sjIwEAAykvagsysN1cUvh
mk28VwrAFUTqHYtdfjWyeX84d/o075UCMDQQbUkYfY9MLufEzNIRFcTMmkwm
g8FAS8IUCkVxcTEtCSNX/ZiYGFoS5uXltXPnTjbvMPv6G4MrdNztDyRCbf/s
AFvQ3nPPPeTraG9vp2aWjqhASRgAAAAAwH+X2n8dwgs4IBLO22+EmA6LxfLD
Dz+w2ZbJ02f4FdZwt12QCPXqux+xBe2MGTN8fHzc6TditVo7Ozvtdjv6jQAA
BpOBXT3JXkSObLIptbS0vPHGG2y7372Ln+S+dUPi1GOr/8gWtI8++qivr29o
aGhERERCQkJSUlJ2dnZeXl5ZWVlFRYVGo9HpdE1NTeTIpl09aQk3SsIAAP/z
78M04w8rXKZ6okddb6/V8F4sAFcQLSlZ7qRJlTv+wXulAAwNxFYSRqHjI4mf
JddyckXv7u4md/XW1laLxUJu7w0NDf3GR5J7Prnth4eHh4SEkPu/l5cX8zOo
5za9yd3+QCKUtFw7a951bEG7b98++iq5q6tLGB9JQAoaAAAAAOC/Qq+lJW7y
bS4THck3PXz21CneiwWAnYv0GyGOgzjxG264gc2z7DlykrvngkQoSal62tWz
2IJ2165dUqnUZb8R+uOyc9du/LgMABgcLlTCbTaby8rKxo0bx7b7fRkcy333
hkSoI4lZI5hGk3t4eHz77bfkyKYl3GlpaeTIdi7h1ul0BoOBXGWdR0aiqycA
gKL5/rg7ZS2qT7/jvVIArjgUb7zrepjCxFv7Wtt4rxSAIQBKwuj4SGpp6aAK
vV6v1WqrqqqUSiW53ufm5qakpMhkMnLtDwsL8/f39/X1fe+999hs7/iJk7xy
lNxNECRCffCjF1vQXn311Q0NDXR8JC0JIx8OSsIAAAAAAP5bFK3f6k6S0BKb
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
oat9ZEFBQV5eHm0fGR8fHx0dHRwc7O/vT9tH2traHjhwgE2DDBsx0i4pm7uM
ghmh7Tt5lm3STpgwoaKiQmgfSUPZtFAYRDEAAAAAjJxrbe0hk5/UG6MIuHtO
Z209b2cBYKd7y0iqoxsbG4lSUKvVzBp50vQHXOUl3OUSzAhtxXsfs03a+fPn
Ozo6uri4+Pj4+Pv7R0REREdHJyUlpaamZmdnKxQKlUpVXl5eXV1dW1vb1NRE
VgrqjQAABhJ6Xt+0R0ZVVdWKFSvYdr/lGz7kvnXDjNOeWfoa26RdvXo1ObJp
CndISIjQMpKmcBcVFZWUlJDnWLSMBAB0p8IjwJB8MNmWA7w9BeDOpOSCoyFr
sFzkzdtTAPiDlDBd0FseNJTd3t7e1tZGQ9lEF1dUVCiVysLCQrlcLpPJEhMT
Y2JiiGQICAgg8sHd3d3e3t7a2vr5559nUyILX3uTu4yCGac9tXgZ26TdvHlz
l1A2UsIAAAAAAAhZ+741JEChsnbh7SkAvaJ7vRHaMpLWG8nNzR05ciSb1vjn
ZWfuQglmhHYhKsXSyopt0n777bfOzs7u7u7a9UbS0tIyMjIUCkVRUVF5ebla
rSZLQ7hahXojAICBRDuFu6Ojg8a9GxoaqqqqwsPD2bY+C8tBf0ZIue/eMCM0
5mvOgwcPPnfunEgk8vLyEovF2incWVlZeXl5SqVSpVJpNJqampqmpibyZIuU
MAAA5cbVq2GzFukN9fgNndlRoebtLAB3Jtc7OoLueVTvMoyav4y3pwDwBylh
uui5fWRpaWlxcbFCocjOzk5JSZFIJJGRkWFhYbR9pLOzs4ODw/Hjx83MzBjE
iKmp6e8B0dzFFMwI7WfPYDYFbWVllZGRUV9f39jY2N7eTtYLlcZoHwkAAAAA
Y6a1sFg8aJre6ETkY0v/jUcmcJvTvWUkUdBEHVAFvXr1ajahsfit9dxVEsw4
7YU31rJN2pUrVzo4OLi7u3t5eQUGBoaGhsbFxUkkEiKZs7Ozi4qKiouLactI
qqBpqe3Ozk6ydmhKGO/VDAC4k9FO4aYRb+2WkRUVFV1eFhjOpi+/4751w4zT
ps5+iG3Sbt++nbaM9Pf3Dw4Ojo6Ojo+P75LCfdOWkbSqJ+/VDADgSe6Rnwy5
/ac8bcPbUwDuZFTWLoasxPzjp3l7CgBnkBKmC0EgE6hApneciTqurq4uKysr
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
CwuLjIyUSCQpKSnZ2dnkyC4pKSkrK6Mp3DS+TVO4aR8ZpIQBYMxc0dT4j3hQ
b6gndNqz169c4e0sAMZFZ32D3/BZepdn/OJ3eHsKAB+QEmYIVDXTW1Q00E3k
AL1FVVVVRdtH5uTkyOXy5OTkhISEiIiIkJAQHx8fT09PJycnOzu7n376ydzc
nE2nnPAK4S6yYEZov/lHmZqaMsxYMtXJQmhoaCDLhN6ioo0waKEw3qsZAAAA
AKB/UfuGGJIPlvbhHt6eAtBbeqg3QpTy0qVL2STwivc+5q6GYMZpTy1exjZp
165d20O9kaKiopKSEqHeiKCUUW8EADAwCPlgQhcMIYWbHNmVlZWPPvoo2+63
4+jP3LdumBGaq7xkwtRpbJP273//u0gkcnNzE4vFgYGBkZGRsbGxqamp6enp
eXl5hYWFZWVlZFHU1dWRI1u7ZSRSuAEA0re2GhLtUYtDeXsKgDFS5uRlyAot
uejE21MAOICUMEPQbh+pffeZSAMinMvLy1UqVX5+fm5urkwmk0ql0dHRERER
/v7+Pj4+Li4ujo6Oly9f3rhxI5tOefDxJ7nrLJhx2vrd+9km7dKlS2trawXh
TAPdaB8JAAAAgDueG1evhs9+QW/8wW/ozPbySt7OAtBbtFtGtre303ojRCar
1eqQkBA2KWE5aND5SCl3KQQzQttz4jTbpB0yZMj58+ednZ29vb39/PzCw8Oj
oqJovZGsrKy8vLzi4uLS0tLq6mqhnjatN0IvT0EjAwD6GyGyTat6kiObbERk
OyKbkkaj+eqrr9h2v3smTXHJUHLfvWFGaGu2MLYmnzRpkr29vbu7u5eXV2Bg
YGhoaGxsbGJiokwmk8vlhYWFSqWysrKSrAuawk27PCOFGwBAqEtMNSTbJPnt
T3l7CoCRcuPatZApT+ldpOGzX+DtKQAcQEqYIQh3qQj0LpUQ7q6vr1er1eXl
5UQv5OfnZ2ZmEgURHx8fHR0dHBzs7+9PJIazs7Odnd358+dHjRrFplY2ffkd
d6kFM0KzS8oeNmIk26QlE76urq65uZmGu8nCQftIAAAAANzx5H37iyFBwqJT
F3l7CkCv6LneSEVFxZNPPsmmI7Z89T13HQQzQnPLUk2eOYtt0u7atcvZ2VlX
vZGCgoLS0tIu9UaEa1PQyACAAaB7Vc+mpiayI1VXVxcWFo4bN45t9zt4+jL3
3RtmhGaTkDlk2HC2SXvkyBEnJycvLy9fX9+QkJCIiIiEhITk5GS5XJ6Tk0NT
uKuqqsjTbGNjI3myRQo3AIBCztGo+cv0hnp8Le9vLSzm7SwAxkuFu78hUdnc
Iz/x9hSAgQYpYYbwby3oDWihfSSVz2q1WqVSKZVKoh0yMzMlEklcXFxYWFhQ
UJC3t7eHh4ejo6Otre3WrVvZ1MqYeyeIZIXcBRfMCG3/L+fYJu0DDzxAFDSV
z+3t7WTJXPsvtFYY7zUNAAAAAND3dFSo/YY9oDfyEPbA8zeuXuXtLAC9onu9
EdoyktYbOXr0aC+UbwF3EQQzQlu3cx/bpJ0wYYKDg4Obm5unp2dAQEBISEhM
TExiYmJ6enpWVhatN1JRUUHUMa030traStYLfblMLx7iFTMAoL/RrurZ1tbW
0tJCq3pWVla+9957bLvfwtfe5L51w4zTmLs8L1682MnJydXV1dfXlxzZkZGR
5MiWSqVpaWk5OTn5+fkqlYoc2eRpll5zpiXCyIMuUrgBAAU/nzMkz0Rx7Hfe
ngJg7CT/7RO9SzVwzNxrrW28PQVgQEFKmOHQx36a1iK0j6RFtqurq8vKykpK
ShQKRXZ2dkpKikQiiYqKCg8PF4vFXl5ezs7ODg4Oly9ffvzxx9k0y/INH3IX
XDAjtN7clT5w4ABR0I2NjURBt7e3a7eP5L2aAQAAAAD6HumazYYECTVBkbw9
BaC39FBvhOjiCRMmsCmIfSfP6lUoP7oHbP3q2Jqtu9bt2Lvn5z8uRKVwF02w
2916Ux/74MGDzs7Onp6ePj4+Qr0RqVSamZnZpd4ITQmjL5dRQxsAMDBop3B3
dnaSLailpaW5ubmurk6j0SQmJlpYWDBsfaampr+KI7jv3jAjtJM+oWzntbm5
+alTp1xcXDw8PPz9/YODg6Ojo+Pj42UyGTmy8/PzlUpleXm5Wq2ur69vbGyk
KdzkyCYLBy0jATByOuvqA+6eozfUEzxpwbW2dt7OAmDsNCSnGxKbTX3/M96e
AjCgICXMcAQRLbTGaGtroyK6tra2srKyrKyssLAwLy8vPT09NTU1Li4uKioq
MDBQLBa7ubmJRCJbW9t//vOfbLLFctCgC1HJ3GUXzAjtGxtXtkk7YsQIsiKI
jibLhOhoKqKREgYAAACAO5La6ERDYg4p63fw9hSAPkA7Jay9vZ1IY1pvpKqq
atOmTWzy4anFy3oWJgdPX54044Euf2VqZvbc8td/84/irptgt68tfO1Ntkn7
4osvOjo6urm5eXt7i8Xi8PDwqKgoiUSSkpKSlZWVl5dXUlJSVlZWXV1dW1tL
S4QJuhgpYQCAAYDWBxMuOGuncKvV6mXLGKstrduxl/vWDTNOe3jB0/on6M34
4IMPyJHt4eFBjuygoKCwsLC4uDhyZNMUbqVSqVKpyKIgS0M7hZtecMZ5DYCR
k/reLkOiPRVufrw9BQD8h6z93xnS5rW9rJK3pwAMHEgJu1XorRBaapvoaFoo
jCiFqqqqiooKIh8KCwvlcrlMJktMTIyNjQ0NDQ0MDPTy8nJzc7Ozs7OxsXnt
tdfYlMvzK1dxl10w47Qlb29gm7Rr1qypra3t0j4SoW8AAAAA3GH8+/r1iLmL
9QYcxINntJWU8XYWgF6hq95IfX19dXV1cnLyoEGD2LTDz57BuvSIq7xk6Tsb
e/hbUzOzVZu22UqyuEsn2G1nvwdEm5qaMsxYMzOzkydPuri4eHl5+fv7BwUF
RUVFxcXFadcbKSsrq6ys1K43Ql8uo2UkAGBg0G4ZSePYNIVbrVb/+eefbOf1
0LtG2CbKue/eMCO0LV99zzZpR44caW1t7ezsTI7sLinc2dnZCoXipincNI5N
wHkNgDHTkJrpYzpJb7Qn6c2PeXsKAPg/tJdV+lpMxaVdALRBStitIrSPJGqa
to9sbm4marqmpqaqqqq0tLS4uDgnJyczM1MqlSYkJERERISEhPj6+hLF4eTk
ZG9v/+uvvzIHyf/x+0Xu4gtmhHY2NMGctZJ8fHw8DYDT9pFk4dCsMNQKAwAA
AMAdQ/6/ThtyaZT8b7w9BaC3CPXBhHojLS0tTU1NVBG/+SZjtaU1W3b2oEeW
rX/fkEGGjxy1/bufXeUl3AUU7DayRxe+wDZp169f7+Tk5Obm5uvrGxQUFBoa
Ghsbm5iYmJ6enpWVVVRUVFxcXFFRQdYFrTdCFHFHRwdSwgAAAwlNCaPdLlpb
W2kKNzmyy8vLZ82axbb77TlxmvvWDTNCc04vGjvhPrZJu337dmdnZ3Jki8Xi
wMBAmsKdmppKjuy8vLzCwkKawl1bW1tXV0eWCTmy6XmNqp4AgJinX9dfbsh8
SnNOPm9PAQD/j6LfLxsSp630CuTtKQADBFLCbpWe20dWVFSoVKr8/PycnJy0
tDSpVBoTExMZGenv7+/j4+Pi4uLk5GRra8vcSmP6w/O46y+YcdoHnx9hm7SL
Fi0iS6OhoaGlpUVbUCMlDAAAAAB3Bleqa/1HPKg3zhB6/zPXOzp4OwtAb+lS
b0S7ZaSNjQ2bZBg8dNjluHRdSuTAr+dvabT7Zz/8T2sX7gIKdlvYjqM/s03a
4cOHX7x4kZYICwgI6N4ysri4uLS0lNYbIWuEyGGh3gheLgMABgDtqp40hZte
aiabkkaj2b9/P9vuN2n6A0i9hnGxFe99zDZp58+fT7s8kyM7MDCwSwp3YWGh
UqmsrKwk64KmcNOqnvRSM03h5r2aAQDcMDCrJPfrE7w9BQD8f1xrbQsYPUfv
4o155g3engIwQCAl7FbRTgnrUna7vr5erVaXl5cTHZGfn5+ZmSmTyRISEmJi
YoKCgvz8/Nzd3V1cXBwcHC5evDh27Fg2FbNx3yHuEgxmhOaYohg5ZhzbpD11
6hS9Y9XS0qLdPpL3agYAAAAA6ANS1u8wJEio9gnm7SkAfYB2SlhbWxt5wm9o
aKitra2srJw3bx6bXth57KROGZKaP3r8vQxjLlzxxtnQBO4yCvZXNpfM4vGT
p7JN2n379jk5Obm7u9MSYZGRkTExMVKpVCaT5ebm5ufnq1Sq8vLympoaod4I
EcJk1aDeCABgYKDnNe1zIaRw0y7PCoVi5MiRbLvfPy87c9+9YUZoF6NTLa2s
2Cbtd999R1O4yZEdEhISERGRkJCQnJyclZVFjmyawq3RaGgKNzmyOzo6kMIN
ACBcbWwKHPeI3lBP0PjHrjW38HYWANAVtW+IIdHaolMXeXsKwECAlDA26A0R
qqyJTCCyuqmpqaGhgcgHtVqtUqmUSiWRFenp6RKJJC4uLiwsLCgoyNvb28PD
QyQS2dra7t69m03FjBwz1jFFwV2IwW5r+zNCun73/keeW3Tf9JkTp814/MXF
7+8/TMR1z3+164df2CbtlClTyLqgN63a29vJkhFuWkFWAwAAAOC2pl6S5mOi
P8KQtHozb08B6C03rTdCnvDr6uqIED58+DCbWBg/eapLhlKXBlm9ZQfbsATL
QYPW7dgL+QzTZas2bWObWkTh0nojNB8sPDw8NjY2ISFBJpPJ5fKCggKlUqnd
MhL1RgAAA0/3FG5a1bOysnLNmjVsu98ra9/peV8VyQr2nTz7/MpVU2c/NOH+
6TPnPbZiw0dHHTy5b/iw291efPMttkm7cuVK2uXZx8fHz8+vewp3SUlJeXk5
bRlJj2ykcAMAKLJN+9F4DoDbF3KCh81apHcJh0x9+sa1a7ydBaDfQUoYG0JK
GG0f2dHRQYtv19TUaDSa0tLS4uJiIivkcnlycnJiYiKRGyEhIb6+vl5eXrRQ
mLW1dZcv33BeXv02dyEGu03tUqzs1XUbzczNu88rC8tB63bu6+F1DLHHnn+J
bdLu2rWrvr6erBGkhAEAAKC0FZdW+YeX2roVnvgz5/CPuUd+KvrtUoW7f11i
6o3OTr1/XuEqzvnyX8Sqw+MGwFsAbsq/b9yIeny53vCCr+X9LQVK3s4C0FvI
ozt5gKf1RsgjPXmwpxejiAouKioaM2YMm1I4dM5Wl/o4FyaxHDSIbViBu+8Z
v+fnP7gLMdhfzazjMwYPHcY2qY4cOSISiTw8PMRicXBwcGRkZHx8vEQioS2o
yHIoKSlRq9XV1dXaF6NovRGkhAEABgaawt3Z2XnlypXW1tbm5ub6+npyZMfE
xJiamjJsfWbm5qeD43rYV788Zzdu4qSb/u2D85887izmvvPDblP74ow123lt
aWn5xx9/ODs7e3p6+vn5BQYGRkVFxcXFpaamkiM7Ly+vsLCwrKyssrKyrq6O
HNktLS2o6gkAoDTJc33MJuuN9sQuXM3bUwCATjRBkYYkdsr3/JO3pwD0O0gJ
Y6N7+0ihZQa9b1VaWlpQUECUBdEXKSkpsbGxkZGRAQEBYrHYw8ODKBF7e/uj
R4+amJgwyBmiwc+ExHOXY7Dby5zTizYfPjr0rhE9z67HX3jFKS1f1yDHncUM
M5YwdOhQshzIAmlubhbuW6EENwAAGCHV4XHpWz8PnfZsD0LMb9gDyeu2VfmF
6bqkU+bkJdRlyth+aIA/AgACRb9eMiS2kPftL7w9BaC30HwwXfVG1q9fzyYT
Fq1c3YOEefKVpWzDdueBR+Yfd8HLaNj/swUvv8o2l5YuXSrUG6EtI+Pj45OT
k9PS0nJyclBvBADAnR5SuKuqqhYtWsS2+72//3APm+qmL7/TO8Lit9ZfiErh
vv/DbjubOfdRtkm7ZcsWmsLt5+cXEhISHh4eFxcnkUgyMjKys7OVSqVKpVKr
1RqNhqZwk+dbpHADAChxL7ylP9pjOqkxI4e3pwCAnkj7cI/etex/1+yrDY28
PQWgf0FKGBu6UsIaGxvr6+uJlCgvLyeyIj8/PzMzUyaTxcfHR0dHBwcHBwQE
eHt7u7i42NvbX758edWqVWyKZsHLr3KXY7DbyL665DRx2gwDZ1fPdeBXvr+Z
bdIuW7asrq6uubmZrJT29vYrV65c+y+oFQYAAEZCVWBEzLNvGpI/I1jguEcy
dx6ujU0STop/37hR4Sr2tZgq/D8lF534fi5gtHTW1QeMnqN3Ggff98S1tnbe
zgLQW4SWkd3rjSQmJlpYWDAIBFNT09/8o3TpjqP2Hmy6oweI0sHLaBixnz2D
2aaQubn5b7/9JtQbCQkJiY6OJksA9UYAAH8duqeE0Xh1dXX1r7/+yrb7jRg9
xiE5T9emeuisjYHjWA0Z+sGBwyJZIfeDAHa7GJkwbJN27Nixtra2Li4uXl5e
AQEBYWFhkZGR5MhOTk7OysoiR3ZxcXFpaalGoyFPs2SNkCdbsl6E8xopYQAY
MyUXHA0JWmYfPMbbUwCAHpqy8gxZztI1m3l7CkD/gpSw3iAkhhGVfeXKFaIa
tG9d0faROTk5mZmZUqmUto8k6oNoEKJEnJ2d7ezs/vjjjyFDhrDpmr//hOYX
MP32e0A0Q7fH/af+1DXghagUSysrtklL5j9tH9nW1tbe3k7bR1KVzXs1AwAA
6EeutbWnbtx9S8lg3ZNqkt/ZnrxuW+CYuV3+U6Msi/fnA0aKIRfNiKl9Q3h7
CkBvEWTvTeuNLFmyhE0drN+9X5focMtS3f/gHLZhe8ZqyNCN+78UyQq4KzUY
R3tw/pNs8+eDDz7o3jIyOTk5IyMjKysL9UYAAHzRjlRrp3CTHam2trakpGTq
1Klsu9/B05d17ag2CZl3jbr7lkYbd9/kL85Ycz8LYH99c0zNHzlmHNuk3bNn
j7Ozs/aRHRsbm5KSQlO4CwoKSktLu6Rwk1VDnnWRwg2AkXOttS1owuP6L7GO
mYuyQgDcFuR+fcKQon8tBUrengLQjyAlrDdo1woThHZTUxNR2dXV1WVlZURr
E4mRlZVF5IZEIomKigoPDw8MDPTx8XFzc3N0dLS2tv7000/ZdM2kGQ+4Zam4
SzPYX9bskrJXbdpmZm7OMLvumTSlhyt7n3z9A9ukXbBgARHajY2NVGgjJQwA
AIyB1sLiyHmLdQku8eAZkY++mrxuW87hH/P+eSJ96+cRc3X+zzf580HTbly9
yvsjAmOkMU3uYzpJ7xSNf/lt3p4C0Ad0TwkT6o2cO3eOTRoMGzHSVpKlS3Fs
OXKUbVgDIXqnh7fbsDvbNh9mnF2jRo2ytram9Ub8/f1DQ0NjYmIkEklaWlpW
VlZubi7qjQAA+CLUB6OXl8l53dLSQvaiuro6sjXt3LmTbfeb9tDcHjbVJW9v
YBt27tMLT/qEcj8UYH9lW/wWY2vyZ555xsHBgRzZ3t7etEQYObLj4+NlMllm
ZmZ+fr5SqSwvL1er1fTyMlLCAAACGdsPGRKQLHf24e0pAMAgrlTX+g2ZoXdR
S1Z+wNtTAPoRpIT1HhrWo+FxorVbW1t1tY+Mi4uLjo4ODQ319/f38vJydXV1
dHS8fPnyhAkT2NTN29v3cJdmsL+gucpLdhz9+a67R7PNK8q6HXt1jS+SFY65
dyLbsD/88ANZHV3aR0JoAwDAnUpHhTpk8pO6bt9kbD/UWd/Q/a+ac/LTPz1o
SL5N1BMrBv5DAUCIeeYNvfPT13xKc7aCt6cA9Ar6cpk8rhO1273eSGlp6cyZ
M9l0wb6TZ3XJDbuk7BGjx7ANe0vMfeq5k954GW1c9l8xyxiB2blzZ5d6IwkJ
CampqXK5XKFQoN4IAIAvwpEtxKjJLkRj1BqNhuxUw4YNY9v9jjl569pUf/EJ
MzUzYxv2f/7bQvq1jZus4zO5nw6wv6CdDU00Z2pNbmJicvz4ce2WkTSFWyqV
ZmZm5uTk0BTuqqqqmpoaWtWzo6MDMWoAAKElr9DXYqreaE/0kyuxUQBwG6G6
7GxIqmeZgwdvTwHoL5AS1ntoShhV3EQ+ELlNm2gQWVFRUUEkRlFRUVZWVnp6
emJiYlxcXERERFBQkK+vr7u7u0gksrW1PXDgAJtwHjZiRA8Xq2HGad/aud0/
+2G2GaWN1ZChF6JSdP0rB349zzbsvffeW1ZWRm9Mt7e3kyVDa4WRRYSnaAAA
uMO41twS+eirN1VY4bNfaEyT9/zn9ZK0sJkLe1Zq6Z/8Y2A+CwDaFJ+zNySS
kHPoOG9PAegt2vXButcb2bdvH5somDxzVg8lr1ds+IhtWAZMTU3JP2cdn8Fd
x8EGxpZv+JBtqjzxxBO03ggtESa8X5bJZNnZ2QUFBag3AgDgS5eUMLIFkY2I
bEfkyK6srFy+fDnb7kdOyR421UeeXcQ2rDbDRozY8tX3LpnF3M8I2F/KnlrC
OGnXrFnj6Ojo5ubm4+MTGBgYHh4eGxublJSUkpKSlZWVl5dXUlJSVlZWXV1d
W1vb1NTU2tpKnnKFqp44rwEwZhKWrNcf7TG5ryE5nbenAIBb4PqVK4Y0hI18
ZAlvTwHoL5AS1nu6t48UFHdNTU1paWlxcTFtH5mamiqVSuPi4ogSCQgI8Pb2
dnV1dXBwsLGxeeGFF9g0znPLX+cu0GB/ETsbmrjwtTfZJtJNWbjijR7+uadf
XcE27KZNm2j7yLa2tvb2diFIjqwwAAC4w5BtOXBTeeU3ZEZzTr4hI3RUVUfM
eaUHpVZy3rG/PwUAXbja1Bx0z6N6wwhB4x+71tzC21kAeoX2y2Xy0N6l3khO
Ts6IESPYFME3Nq66VMbvATFsFSF6w9C7Rmw+fNQlQ8ld08H61S5EJVsOGsQ2
SY4ePdq9ZaRQIgz1RgAAfNE+srVTuGmX55CQELatj+yZ5yOlujbVfSfPsg17
UyZNf+Cri47cTwrYX8T2njzDNpEGDx58/vx5V1fX7incQsvIiooKcmTTFO7W
1layXoQLy2jxDIAxU2rnbsjtP/nfv+btKQDglim19zBkgSu+/423pwD0C0gJ
6z3dU8La2trovena2loiMVQqFZEbubm5RHqkpKQkJCRERkYGBweLxWIPDw+R
SGRnZ/evf/3LjKnOtomJya9+kdxlGoyvOaYo1u3cxxzc7oHjLmJd/+gJL8aA
0qBBg4gG795KAylhAABwJ9GQmqmr82PJhVvI47pSU6ez9eT/3Ef+lf77CADc
lP90NTUghlDh5sfbUwB6S/eUsNbWVnr7Sa1Wr1q1ik0OLHl7Qw/S5vEXF7MN
23vumz7zyAUH7uIO1n/2/ErGSbty5UoHBwdXV1dvb2/tFlRpaWm0RFhJSUlp
aalGo6mpqaElwq78F6SEAQAGBu2qnh0dHeTIbm5uJtsR2ZSqqqqefPJJtt1v
y5GjunZUkaxw/OQpbMP2wFOLl/0RGMP9vIDxNbcs1ZQHZrNNoR07dohEInd3
d19f36CgoIiIiPj4+OTk5IyMjKysrKKiouLi4srKSnJk0xTutrY2smToeY2U
MACMmevt7SFTntIb6gkY9fCVmjrezgIAWJC8/qEhN3yvd3Tw9hSAvgcpYX0F
lQyC9BbaRxJ9QVQGbR8pl8vT09OlUmlsbGx4eLjQPtLJycnGxmbdunVsSmfe
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
tohCJ+qDFvEmQphmheXm5nZvHylkhb322mtsmmjhije4CzqYgXbU3oM5tGIg
48aNO3fuXJfuFYcPH2Ybbf6il3v4OK++/R7bsKtWrRL6btB71tqFwngtZAAA
AAyQfTtkylOG5NKETH6SiC8Dh71x9WpnfQOxay2t/eo/AIRKzwBD5rBs8wHe
ngLQW3quNyKVStnukhBOeIXoUg3HXcRsYw4fPlytNvTg0Ib81caNG/v7ZfSK
9z7Gy2ju9qtfpKmpKcMvaGZm9ssvv7i7u9+0ZWR+fn6XeiO0ZSRZNXi5DAAY
ALqncLe1tZGNSEjhPnv2LNv5NWzESFtJlq5NdctX37MNO3v2bLI9an8E8lDR
5WVEn0M+yydf/+CSWcz9MIIZYpsPM7YmHzVqlLW1dQ8p3CqVqrKyUkjhJotF
SOFGi2cAjJykVZsMifZUBd5aawMAwO2I8oytIRtChbs/b08B6BVICes/uqSE
EZ3e2toq3NsikqS0tLSoqCgvLy8zMzM5OTk+Pj4yMjI4ONjX19fd3V0kEtnZ
2Z06dcrKyopNGX3++wXusg7Ws50LkyxauZrt9zUQS0vLPXv2EOXbfYqS2XjP
PfewDfuP3y/q+lBnQxPNLVjeGZmYmMTFxZEFIhQKQ0oYAADcvuQcOm6IniIW
MXfx1cabnFMAcORGZ2fYzIV6Z6/f8Fkdag1vZwHoLdopYbREmHa9kddff51N
MqzZuqsHKfTAI/PZhj158mRvPiyR3s8++yzbP20gw0aM3PLV93gZzdHmPfM8
22+3YcMGJycnDw+PLvVGZDLZTeuNEN1KW0YiJQwAMABop4TRFG6yC5Eju76+
nhzZ5eXlM2fOZNv99p48o2tHtZfmMDc1IBvpTT+FjY3NxIkT2cY0kMkzZ319
ScT9PIL1bCJZ4Zh7J7D9xNu3bydHtpubm4+PT1BQUERERFxcnFQqpSXCioqK
SktLyXMsWRrkmZbePqahZnJkIyUMAGOmNjbJkFhlyrs7eXsKABgIrrW1B46d
p3dPiF7wGm9PAegVSAnrb7q0jyTqg2iQLu0jc3NzMzIykpOTb9o+cvPmzWzK
6P4H53BXdjBd5pia/86u/Zas+X4Gsnz58vz8/B7mp729PdvIE+6f7pKh1PXp
PjrI2PP0ueeeo7e3aFYYLRRGpTqi6wAAcHvRUVnlf9dsA7PC4l76G4qxg78U
uV/9bMjUVf5hzdtTAHrFTVtGatcbuXz5MtuD/ZBhw63jM3TphR1Hf2Ybdvr0
6Z19cV7Y2dndd999bD4YyKQZD3x1yYm78DRC2/bdT2w/2YgRI6ytrV1dXcVi
cZd6I7REWElJSZd6I0KJMLxcBgAMAPTIpkFm7SObBpn37dvHtvtNnjnLLUul
a1Nd8d7HbMOuXr26h8/S2tp68OBB5nvQBvL0qytOB8VyP5hgumzFBsbW5AsW
LKD5YN1bRubm5hYWFgolwmgKN5lv9MhGi2cAjBxyjkbOW6w31CO2mt6qVPF2
FgAwQFT5hxsSBC488SdvTwFgBylh/Y12ShhR60R9ULVOe3CUlZUplUqFQiGX
y1NTUxMSEqKiokJCQsRisYeHh0gksrW1vXTp0rhx49j00YY9B7mLO1h323fy
LPMdKAN56KGHgoOD9c5Pon/nz2e8nr9x3yFdH9AxNX/UWMb6Y7/88ksXtY6U
MAAAuE0p/OWCgSlhxJLXbcM+D/4itJdV+g2ZoXfShj/44o3/vxUOALcdN21B
RUuEEcVaWVk5Z84ctqf6XcdP6RQLKYq77xnPNqyXl1dffXbySQ8dOjR48GA2
TwzkqcXL/giM4a5AjcdcMpTjJ09h+7G2bNni4uLi7u7u5+fX5f1yTk6O9vtl
obS19iUmpIQBAPob7ZQwoUQYvXecm5s7YsQItt3vGxtXXZvq7wEx5hYWDGNa
WFgoFAq9n6ikpGT16v7tnmBuYblm6y57aS73EwrWxS5EJVsOGsT2s37//fci
kYgc2b6+vsHBwZGRkfHx8cnJyRkZGXl5ebREGDmyaYkw4chGShgAIP/4aUNC
lAU/nuHtKQBgQIl4+GW9O0PwpAU3rl7l7SkAjCAlrL/p3j5SW7AL7SOFQmHd
20c6Ojru3buXTR/ddfdoh+Q87hIPJtiPbv6z5y9g+zUNZNSoUSdPnrxm8AvK
uLg4tn9oyPC7Lsel6/qkn/3rN7ZhJ0+eTNYFFezt7e1CGw4hKwyaHQAAbhdu
XLtmyOU7wXK+/BdvlwH4D5I3PjJkxlaHx/H2FIDe0r1lpHCDSaPRHDp0iO2R
fsLUaT20TVy1aRvbsMuXL+/zb0ClUq1du5bNHwP5z8voLTvtpTnc1agx2Jsf
f8r2Mz3yyCMODg60ZWRQUBAtESaRSHS1jMQNJgDAQCKkcJM9Rzu8XF9fT/Yl
sjutWrWKbfdb/Ld3e9hUn3hpCduwX3zxheGfLioq6tFHH2X7hwxk5Jhxu46f
6qEYGmzgbdFKxmzAlStXuri4dGkZSfPBhBTuLi0jkcINACBcqanzH/mQ3lBP
yNSnr3d08HYWADCgVIfFGhIKztx9hLenADCClLD+RjsljEgPItu7dOIoLy9X
KpV5eXmZmZmpqamJiYm0UJifn5+np6ezs7Ojo6O1tfWzzz7LppJeWv037hIP
RuxSTNriv71rYmLC9jsagpmZ2datW2tra291lr7//vts/+LLq9/u4SPPX/Qy
27Dbt28XekcKsh0pYQAAcDtSl5Diaz7F8KywUnsP3i4DY6c6PM6QuZq6cTdv
TwHoA7q0oNK+vlRYWDh69Gi25/nDf9rr0ghnQxMtLFkqQhCxI5fL++l7iImJ
eeyxx9g+rIGMHDN257GTeBndr3Y5Lt1qyFC2H+ibb74RiUSenp4+Pj5hYWHa
9UZoC6rS0lLh/bJ2ibDr168jJQwA0N90SQnr6OhobW1tamqqq6vTaDTR0dGm
pqYMW5+5hcXZ0ARdm+oXZ6zZdtSxY8c2Njbe0gckH+3MmTPkD9n+RQOZMfeR
Y07e3E8rGLGDpxlbk1tZWf3xxx+urq4eHh5isTgkJCQqKiohISE1NZU8KObl
5SmVyrKysqqqqtraWjIPW1paaAo3UsIAAMnvbDck2lPpFcjbUwAAB2SbD+jd
H/yGPdBZW8/bUwBYQErYwCAkhgnKXbt9ZHl5eXFxsUKhyMzMTElJSUxMJFpe
aB9JNI6dnd3x48fZsonMzM1PB8dxF3rGbCJZ4QcHDg8eOoxN6hrIyy+/zPyK
pLS0lK1hiqmp6QmvEF0f/F+ufmyfZciQIeSzCJevuxcK69vlCQAAoF/J/5dB
VdmpiQdNq4tP5u0yMF5uXLsW/tBL+iMAQ2a0l1bwdhaAXtG9ZSS9u0TzwdRq
9bp169ge5l94Y20P4mjBy6+yDbtnz55+/ULIV3H27Nlx48axuWcg0x+e972j
F3eJeqcaczWbpUuXikQiNzc3Pz+/oKCgqKgo7ZaRtEQYbRlZX19PVGqXlpGQ
qACA/kO4HamdD0aObO0OFAsXLmTb/T44cFjXjuqSWTxp+gNsw9rY2LB92MbG
xt27d1swtao0HPKg8meElPuZZeQ2fc48tp/v008/dXZ29vLy6t4yUkjh7t4y
kqZwo2UkAMZMvVTmY6I/LCldu4W3pwAAPjTnFhiySyS9+TFvTwFgASlhA0OX
lDB6/1q4zFVeXl5SUpKfn5+VlZWWliaRSGJiYsLCwvz9/YnA8fDwcHBwsLW1
Xb2asZzyEy8t4S70jNYOnbUZP3kq2w9nINOmTXNzc+vlFD127Bjbv/7wk8/0
8PFf/3AL27CvvvoqvcyFfhwAAHC7Q/ZtycoPDM8KCxr/WEdlFW+vgZGi+P43
Q2Zp4Yk/eXsKQG+5aQsqKlGrq6vj4+PNzc0ZHuNNzcx+D4jWpQ6+tXNjUwej
Ro0ijg3A10K+gb///e/9/TJ60crVf4Yncdeqd5j95B7I9nOQn/vXX391dXX1
9PQMDAwMDQ2NiYmh75czMzOFeiO0RBitN9KlBRUkKgCg/9BOCaMp3B0dHULX
SI1G88svv7DtfiPHjHNMUejaVD84cJht2EcffbSXVZjIxrt06VK2f91ABg0e
/O5nnzul5XM/vIzTNu7/ku2HGzdunJ2dnYuLi4+Pj5+fHy0RlpiYmJqaKhzZ
5eXlVVVV5LlROLJpVBkpYQAYM2ThRz2xQm+ox9diaouiiLezAABuKL47pT8s
bHJfS14hb08BuGWQEjYwCOJd0O9EjwglvoX2kQqFQi6X0/aR0dHRoaGhRN0Q
jUOUjqOj45kzZ4YOZWyC8NmPv3OXe8Zmp3zDH3l2EdvvZSDDhg07evQomU69
n6JkQk6aNInNjb//9IeuL+FidOogpvpjBKLr6RVsslK09TsSwwAA4Lajs74h
ZMpThmeFxS5cfePaNd5eA6OjQ63xGz5L7/wMm7HwRmcnb2cBYEdbnGrXG6El
wqqrqysrK1955RW2Z/j1nx3QJQ1c5SX3z36Ybdhz584N5FdEhPmyZcvYXDUQ
Syur9bv3O6biZXSf2azHnmD7LTZt2iQSiWi9kdDQ0MjIyMTERKlUSkuECfVG
aIkwod4Ibi0BAAaGHlK4NRqNSqWaMmUK2+536KyNrh3VOj5z2IgRbMNGR0f3
yQcPCAiYPXs2mw8GMnbCfftP/cn9/DI2c0xRjBzD2CF07969Qgp3SEgImWzk
yE5JScnMzCQPb8XFxTdtGYnzGgBQ+MsFQ6KRiu9O8fYUAMCTztp6v6Ez9e4V
icve4+0pALcMUsIGhu5RdyElrL6+vrq6uqKioqSkpKCgIDs7WyaTJSUlxcTE
hIaG+vv7+/r6urm5iUQiGxubHTt2sCmm+6bPdJWXcBd9RmI2CZmvbdxkambG
9mMZgomJyXvvvVdZWdmHs9TDw4PNmXETJ4lkBbq+jU/+eZxt2Mcff5xe6UJK
GAAA3AHUJ6X5Wt5veFaYfO83vF0GRkfy3z4xZHJW+Yfz9hSAXnHTlDD6fpnW
Gzlz5gzbA/zwkaPskrJ16YJNX37HNuxDDz10jUeecFBQ0IMPPsjms4GMuXfi
vpNnuQvYO8A2HfqW7Se4++67bW1tnZ2dvb29/fz8wsLCoqKipFKpdr0R+n75
pvVGIE4BAP1N966RZCMi21FtbS05spkDxTPmPtLDprr4rfVsw773Xl++ILt6
9epPP/00cuRINmcM5KEnnvrZI4j7QWY89srad9h+qWeffdbe3t7d3Z0c2eQh
jRzZMTExtESYXC5XKBQlJSUVFRVkXZAjm14xRkoYAOB//feaauCYuXpDPcET
n7jW2sbbWQAAZ0rt3A0JDqtsXHl7CsCtgZSwgaS7ihcKhdH2kUqlMi8vr0uh
MKJxvLy83Nzc7OzsrK2tJ06cyKab3tr2GXfRd8ebS2bx1q+ODRvRv8GKZ555
RiqV9scUXbhwIZtLf9v+d13fiUhWOG4iY/2xY8eOdVfxQuC9P74BAAAA/Ufx
nw6Gp4T5mNynCembC+YAGEJtnNSQmZn8t094ewpAb6GylHbPoSWshf5T1dXV
RJbOmDGD7em9h1IbdknZd909mm3YkJAQXt8VUR8nTpzo75fRDz7+5I/uAdzF
7O1rIlnB6PH3sn35u3btcnFx8fDwCAgIIDMtNjY2MTFRJpP13DISL5cBAAOA
EEYm53X3+8UajYbsVMztJH4Q+eraVE/6hJqamjKMaWVlVVJS0uffA9mBN2/e
zOaSgZiYmLz69nuXYmXcT7Q73s6GJpgztecmv9FPP/3UJYU7ISGBlgjTlcJN
uzwjhRsAIyftg78bEu1Ri0N5ewoA4M+Nq1eDJy3Qu2NEzHmFt6cA3BpICRtI
bpoSJsTeaaGw/Pz87Ozs9PR0qVQaFxcXERERGhpKxI6Hh4ejo6Otre3nn3/O
Jm+H3jXCNlHOXfrdwfb1JdHkmbPYfh0DmThxIpkD/SdgU1NTGcM+Q4ZciErW
9c18/vsFts87fvx4IucbGhq0hbwQfu+nLwEAAED/kbnriOFZYUETHu+sq+fi
55WautroxOJz9pm7jyT/7ZP0rZ/nHP6x5KJTe2kFF39Af0Me0CMffVXvnBRb
TW9Vqng7C0BvEVLCutQboTeV9u7dy/boPmXWg25ZKl2KYPmGD9mGfeutt3h/
Yf95Gb1161azfq4CveTtDZdi0rir2tvRlr37AdvXvmDBAu16I+Hh4fHx8RKJ
JD09HfVGAADcuWlKmHBkV1VVMfc4fm3jph421blPM14X/e677/rv2yA784sv
vsjmmIEMGTb8o4NfO6cXcT/X7mB78pWlbL/OmjVrRCKRm5ubr69vQEBAZGRk
TExMUlKSTCbLzs4uKCigR3Z1dXVDQ0Nzc7N2ywnhyMapDYAR0pie7WM6SW+0
J+5F/qoTAPAXodzZx5A3F3nfnOTtKQC3AFLCBp4erncJWWFZWVlpaWkSiYSo
G6JxAgMDxWIxbR9pbW3NLIGfXfY6d+l3R9rpoNinlixn+1EMxMrK6osvvmhr
6/fStdu2bWPz8LnlPc2uZ5a+xjbsRx99JITfcb0LAABud/59/XrCkvWGZ4Wl
b/18IN273tFRePJ80ITHe3Apct5i1WVn8kEG0jHQ3xSe+NOQCak49jtvTwHo
FV3qg3URpNXV1dnZ2cOHD2d7bv/Wzk2XFvjNP8rM3JxhTEtLy4KCAt5f2/8h
IyPjpZdeYvtyDGTIsOEffH4EL6Nvyf6MkFpYDmL7wn/44Qdab0QsFtN6IxKJ
JDU1lSwE7RJhtbW1tN4I0eMQpACAAYO2eNaVwh0cHMy29VlaWfVwqXPvScbm
0f+bvfOOb7r6/v+jdNECBcooey8B2YIM2UtlqSAoIsPBkqEgSxAQUZYKArIs
3SPdK917jzRNm3Q3adI0adO06W4pw+/vfj7vzy+ffNomeXM7bsd5Pt7/Kbcn
5973vfd13+eeM3z48HY4tGQwGGPGjMGzkCbDxoz74aE18dWtSz7f3rqH1ym9
evV6+PChs7Ozu7s7VTIyOjpaWTKSWrILCwshhBsAgKZELd6i/bRHd1QlL4u0
pQAAdCAStnyhderwGzzzZV0daUsBgC4QEtb+KBOFqRbpQIpeLpdLpVKRSMTn
8zMzM5WJwsLDw5HYYTKZrq6uSPlaWlreuHED74ayjo7Oba8Q4gKwKz02iZkf
fvWNnr4BnqSlyYcfftgWqdebpbi42MTEBM9OzWnn0fDDaNPQ0BC9C9QNLziB
BwAA6AI0KMqDJyyhGxXWY2R5EqcdrEI7M+ETu4AR82gaFjJ1RVksqx0MA9qB
Z/Iy3/7TtHZ64OgFoPSBzo6GkDAq38jmzZvxhMDajz/TIJrmLF2J1+wPP/xA
2meNcXJyGjt2LN7PocnQ0WPPPbQiLnU7y7PkvU14ft60aZNqvpHQ0NCIiAgW
i4XkZ1ZWljLfiEwmUygU6r4vgyAFAKDtoELClAfIVIqw8vJyuVyOlux58+bh
zX5f/XhV3YzqkJJnNnI0XrNoOm0ft6Cp+PLly9gVM2kye8nyOz5hxNe4rvQ4
80QjJ0zC645vvvnGzs7O1dXVw8MjKCgoLCwsLi4uMTERLdnp6ek5OTnKFGFo
yaZShEFIGAAAiPwH1nSO+DLO3yBtKQAAHYuyuGQ6swd73wnSlgIAXSAkrP3R
Wj5SJBLl5eVlZGRQUWFI44SEhAQEBFDlI+3t7a2trXfs2IGnod5csJi4Buwa
D1KyR379o9/AwXgdQZNZs2ZFRES08xC9ffs2nrUT35yloVjM1gNH8ZrduHGj
8l42lSgMvTtUVBiinZ0DAAAAtJyq9GyfPpNpBl8lfvRVW9tTnsQJnvQO3Si1
//94G44rsGqnDx9Am5L82RE6PS518yVtKQC0FNV8I2hTTUlRKh5MJpOFhobi
XeLQ0zd4EBSnTgWcuWeOpwLMzMyQTCbts2ZArrty5Urv3r3xfhdNZi1Zdsc7
lLjs7eDPqbtP8Nzbs2fP+/fvN8o3oiwZmZubC/lGAAAgSKMQbioeTDWE++rV
q3iz38Chwx1S8tRNqtu/OYHX7MKFC9vZRRKJ5NNPP8Xbt9BEV09v456vrOK4
xBe7rvFsP4xZmnz48OH29vZoyfb29vbz86NKRiYlJbHZbB6Pp4wHUw3hVpaM
pE6P23lwAgDQQXhRVe0/ZLbWox5/s1nPKzui6gQAgCxpx36k83WgXlpM2lIA
oAWEhLU/ypAwVV1Ppf4uLS0tKioqKCjIy8vLzMxMS0tjsVjx8fHh4eHBwcFe
Xl7u7u4ODg62trYPHz7s27cvnpI6cPk6cRnY2Z+rdu7jp8/A8z9NBg0a9ODB
AyK6FanmCRMm4Jl98MpNdU6ziEkz7oOZf8zKyqpRojDqKB50PQAAQCelyDPA
U4dW5JWX3ug21VaKxBRmv6mvGw+mfAT3LdvONqAdQAOAzlCM37SXtKUA0Aqo
5hupr69HW2vVfCOLFi3C26vvPXNRnQRgpAqGjR2P16yNjQ1ph2lCKpXu3Lmz
TT9G99DV3fD5l/AxWsMz9o3peL7dv39/03wjSUlJaWlpGRkZfD6/Ub4R9LJA
SBgAAO1G05AwqsYEtWQLBIKhQ4fizX4nbz9SN6M+CWf1NMZJvYWWwsTERCKO
io+Pnz9/Pp4raNKnX//9l645cYXEl7xO/VjF83rjfsg4ffo0g8FASzaTyfT3
9w8PD4+JiUlOTuZwOJmZmWjJFolEaFeGXo1GVZ6VSzaRwQkAAHE4X5+ic6wn
cWGSthQAgI5IrVDspTda6xySvOsoaUsBgBYQEkaKZstHUonCqPKRykRhLBZL
WT7Sx8fHxcWFKh/55Zdf4impwSNGOXL4xMVgJ30ehSYu3fghnudpoq+vf+zY
MSRjCY5PLy8vPOP7DzKzTcpS572j1+7gNTtt2jT0apSXlysThVHlIxFwGg8A
ANBJST91lWbYVfaV221kw7/iwfq+gR0PRkWslQRHtZF5QFuDthAR8zdo72X9
MdVZeaSNBYAWofpxuaGhgVKgaGutzDdy69Yt7P2/XXKOuv3/rhPn8JqdO3du
p9jkJyQkNDpUaXX69Ov/9Y+/MNLyiWvhjvZ89t1ZPJeamZnZ2dk1zTeSkpKS
mZmZm5tbUFDQbMlISoTCvSQAANqaRlk9G10l3rt3L97st2DNuxom1Xc2bMFr
9uuvvyboK7RbePr06bBhw/CMp8noyW9csmAQX/g674Nd5XnFihX29vZUCHdg
YGBoaCgVws3lcjMyMvLy8kQiEYRwAwDQlKr0bDqxHJELN5G2FACAjkve74/p
fB0o9gkmbSkAaAdCwkjRKCRMVd0XFxeLxeL8/Pzs7Oy0tLSUlJTY2NjIyMig
oCA/Pz93d3dnZ2crKysLC4sZMzATVW3a8zVxMdjpHnt2zifHvjc0MsLzOU3W
r1+P+p308PwX77//Pt5P2LR3vzofMtLyh4/DzD92/vz5pjU7ICQMAACg84K2
QZGLNtMRVoGj5v/TBp9fFQnsFsaDUY/fwDchyXwnRXDPgk4XZ/54i7SlANBS
moaEUfWnqHwjIpFo1KhReLv0Y9f/VLf5fxrNwc4SHB0dTdpndEGOtbS0bPOP
0ZOmXHrqSFwUd5zHNinLxHQAnjNPnDihLt9ITk4OVTKyUb4RpECV8WAgPwEA
aGtUs3qqpggrKSlBk5WhoSHe7Pebe6C6SfUawxuvzd69excVFZF22P+hufr0
6dPYnqHJwnXv/xUYQ3wF7HTPHZ+wHj16YDhcV1f3jz/+cHBwcHd39/b2Dg4O
Rkt2QkICegvS09MzMzPz8vIKCgrQCCwtLW2UIky5ZMOqDQDdk+gV27Sf9vQY
WcHmkrYUAICOy4uqat/+07ROJlFLPiBtKQBoB0LCSKEsH4kEvuo17ablI3k8
HlU+MiwsLCgoSLV85Pnz5/E0bE9jY/NINnFJ2Imek388HDh0OJ63aTJlyhQ/
Pz/SA/O/IHGtp6eH8UP0DQw1nJBceGKL5x9TU1OBQKC8pl1XV0dd06YOykDj
AwAAtDMNpYoagQg9zysqsRupK5DQLNooD41pReMRDYpyX9PpjZNBGYwNmbIs
bv1niR9+GTptJZ0bhdST8cP11jUPaAeel1f4DXxTa+cGDJ/3orqGtLEA0FJU
843U19ejvTQVD0ZpzwMHDuBt0ecsXalBQ638cDtes59//jlph702SKGcPXu2
Z8+eeD+ZJm+vfe9+QDRxddwRnhUfbMPz4ZIlS5T5RgICAkJCQpT5RjIzM5Hk
FIlExcXFzeYbgRtJAAC0NU1DuKlLxFQIt1Qq3bQJM9vSh199o2FSnTxrLl6z
v/32G2mf/Rc0h2/evBnvh9BE38Bw64GjGuojwNP0mbloKZ63P/nkEwaD4eLi
4uPj0yiEOzs7m0oRhl4K1SUbvTLUeg0h3ADQnRE9daRzlMc7eYW0pQAAdHQk
rr505hPBfUvSlgKAFiAkjBTKkDDqWB7J/Pr6euqmNlIxMpmssLAQKVkkcDIy
MlJSUpKSkpDwCQkJYTKZnp6eSBDZ2dlZWFisXbsWT1XNXbaKuCTsFM9NF783
5s7HczJN+vXrd+vWLTQMSI/Kxpw4cQLvF81bsUaDS5dvwTy937FjhzJRGISE
AQAAkCVhyxeU5Mm61KKvACILBi1hdc+ilQz/D7wTP6m2HzxxSd7vjxsU5ar/
z6uGhorUjLRvznvqaDHPx3gCJArrdKR8+T2dsSd170AR+wCAjWq+EbSRVqYI
KykpSU1NNTY2xtufX3fyUbfnv+UWgJcRwsjIqKCggLTDMMnPz//ggw/wnEkT
PX2DD78+YpOYSVwpE3zuB0TrYl1f0tHRQdKbyjfi5eUVFBQUFhYWHx/PYrF4
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
fXeQ9tsOHcdz0YgRI2xtbRvlG0lMTGSz2ar5RuRyuUKhqKqqajbfCOmhBABA
V0YZEqbM6kmFcFNVnj/55BO82W/pxg81TKrzV2EuT8ePHyftsNfDx8dn0qRJ
eD+WJmh3dOrPJ8QXyo7zvLViLZ4n0a4JLdkuLi7KEO6YmJiEhITU1NT09HQ+
ny8UCtE+ViaTUVeGISQMAAAKsZ0bnZiNtCMXSFsKAEDnI+OH69pnGN1RNQIR
aUsBoHkgJKwjoFrLo2n5SKlUSpWP5PF4VPnI6Ojo4OBgf39/d3d3Z2dnGxsb
KyurefPmYeqsHbuIi0Tij1Ucd8Pur3TbMpe4jo7Ozp07JRIJ6eGGw8cff4z3
q9d/8rk6nzvzRGOnTMNr9sSJE+jtoKLCVMtHUgdopL0FAADQ9WHvPq6qdxrK
FC1vM3rZVg2SKmzW2pb/CSWKBLbEhYnxD9GGLeKt95u10KfXxFa0EGg7Ug//
QOeQsNDBg7SlANBSlDJTmW+EunyENtJyuTw3N9fMzAxvN37qrtovnk/Ck3oa
G2O02aNHj+TkZNI+a0OYTObkyZPxHE6TQcNGnLz9iLi4blPZ3sukL55zzp49
y2AwXF1dUUcEBARERETExMSgIcfhcLKzs/l8PpLqRUVF6O2g8o1AyUgAANoN
1fW6aQi3TCaLjY3Fq37YQ1f3rm+Eukn1J2tnvBm1f//+paWlpN322iDf3rhx
o29fzHWEJtPmL7zlFkB8xST+3HL1x3Ogvr7+vXv3mi0ZmZmZibavIpFILBaX
lJQ0u2TDeg0A3ZaX9fVBYxdqPeph9n3jWUnnW8IAACBOfZHMu+d4rZNMwpYv
SFsKAM0DIWEdAdWQMKp8JHVWr1AokMApLi5GYkcgECDhw+VyExMTY2NjQ0ND
AwMDPTw8XF1d7e3tra2tL1++jCm1DAwfhSQQl4qkHkZa/v6Lv/bp1x/PezRZ
sGBBfHw86YGGD5/PN8TLJK+nd8cnTJ3zf7ZxxfNnnz59cnJyqJAw9LLU19dT
5TwgJAwAAKB9CJu5RlXsyPzDWt5m3u+PNSVe3nGo5X+iVcg4d61ZC31Np5M2
DdBOVUaOl95orfo9cuEm+JoAdAFUZSaVbwRpzIqKCrlcjjTm7t278bbiC9e9
r0FeLX53I16zBw4cIO2wNgdpllu3brX5x+i33r7l6k9caLfFs2g95uhatWqV
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
7luS/pVqyb3xVyODE7d+TdooQC1FngF0Rh1773ekLQWAlqIu30hFRYVCoUDK
8dtvv8XbYI+dMk1D5qj1n3yO1+y2bdtI+6xTgnrzyJEjbf0xevnmrU/Ck4hr
/HU7duHZP3/+fCrfiJeXl4+PD5VvJCkpSTXfiFgsLikpaTbfCChHAADaGtWQ
sKZVIdasWYM3+234/EsNk+q0+Qvxmr169Spph3Us0tPTsfuIJj2Ne3323VmH
lFziazHNZ94KTIegDaFqCHdISEhMTAydEG7qCjCs1wDQbUnc+jWd0x6txQsA
AABaDp0ZyW/gmy9qaklbCnR3ICSsg0NFhamWj6QO9mUymUQiyc/Pz83N5XK5
HA4nPj4+Ojo6KCjI39/f3d3dxcXFxsbGyspq+fLleLps4br3iYtKrc+fzPC5
y1bh/UCaGBsbX758GTmf9FjoiGAXJ120boOGbl20fiNes3v27JHL5egdqaqq
Ql327NkzKB8JAADQipSERCu1jHfP8VJ3v1cNDdR/elFbJ/XwT/nq+4AR8zCC
wfwGz8y5dv9FVTXZH6iBZ/IyZt83VG0OGPlWg6KctF1A87x6/jx48lKtA8+n
96R6SRFpYwGgpVBBLC/+DZVvpLa2lsovXVpayuPx+vTpg7e7/tnGVd2O/Y5P
GF5GCENDQz6fT9pnnZiMjIx169bhdShNehob7zx+muDH6EchCfoGhnjGX716
1dHR0cnJiclk+vv7h4eHR0VFsdlsDoeTlZWVl5dXUFAgkUjQq1FeXg4hYQAA
tD/UCRV10qsawl1UVOTn54c39RkaGWlILfXtrXt4zY4cObKuro60wzoiHh4e
EyZMwPMqTcxGjj519wnxg3etz/GbmKOrV69ef//9N4PB8PT0pEK40ZIdHx/P
YrHQ3hUt2UKhUCwWy2Qy6vIvelPq6+thvQYAoCyWReeYMWn7QdKWAgDQLShP
4tC6krz7OGlLge4OhIR1cBqV/0BKHImgioqK0tJSpIlEIpFAIMjMzORyuUlJ
SXFxcWFhYSEhIV5eXu7u7g4ODra2tjdu3MC7R6yjo/O7ZxBxaanusYrnbdzz
Fd5nCPoe+OSTTwoLC0mPgo5LSUlJ37598dz7i72Hus697RWCl3/MwMCAxWJR
d8dqa2tV745BSBgAAEDLyfvtkVLIiO3c1P1vlWkZOdfuRy39yEtvtGY1FDh6
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
ulG+EaQQR4wYgbeXPn7znrotunlUinHvPnjNxsbGknZYF8fBwWHUqFF4vUOT
4eMmnH9k00bC3yYx06S/KZ5hp06dajbfCI/Hy8zMFAgEkG8EAACCqGb1REs2
mn+oKs9lZWVyuTwhIcHQEOfMU0dH53fPIHWT6q8OXngzap8+fYqLi0n7rFOC
Fpcff/zRyMgIz/M0mbdizV3fSLJn9be9MEuT6+rq/v7776oh3FFRUWiLyGaz
ORxOTk4OWrIlEklRUZFqCDdk9QQAoJyV6qmjPR4sYfM+0pYCANBNKfIMoBO2
yr9jTtpSoJsCIWGdgkYhYfX19UgQUQVB5HI5EkoFBQVINGVkZCABxWKxIiMj
w8LC/Pz8fHx8nJycHBwcLCwsLly4gKc0DY2M/o5IJiIwnXmiY9f/NDUbgmc5
TaZPnx4cHEy6kzs3mZmZenp6GM7X0ze47x+lbgBcNHfA61NTU9P8/PymBUEQ
pF0FAAAAdBoKrJxVJZv/kNk1efmkjQI0kXP9Ph31nXvjL9KWAkDroBoS1ijf
yIEDB/A20nOXrdIg0FZ8sA2v2d27d5P2VrcADYNLly4ZY5UJow8aJHd9I1pd
/i/fgjm6lixZ0my+ETabnZGRkZ2dLRKJIN8IAAAEUWb1VJ7rorkILdmlpaVo
atqwAbMmwkf7j2g4UJ04YzZes3/88Qdph3Vu0Iqzfft2POfTRE9ff/O+A9YJ
6USO69Hz5tuYhTI//fRTGxsbFxcXd3d3f3//oKCg2NjYhISE1NRULpebm5ub
n58vlUpLSkrQhha9I2i9Ru8LZPUEgG4OWkMjFmzQetTjpT+mKjOXtLEAAHRT
0EwVMmWZ9uK2Y95+9eIFaWOB7giEhHUiVMtHNjrwl0gkQqEwLy8vLS2Nw+Eg
JYX0FFU+0sPDw9XV1dra2tLScu3atXh6bc7Sle2vLq85ek+aOQfPYJoMGDDg
3r17ECbUKpw8eRKvF9roq9PHH3/ctHwkAg78AQAAADqUxSV79xyv1GvMflMr
UjNIGwVo4plMzuz7hlbpHTRuEZT+BLoAqvlGVEtGUvlGkpOTsTNU3HBmqtuZ
33L1x8sIYWxsLBZDar72A3l7x44deAOAJnr6+pv2fN2KH6Pv+UX20NXFsKRH
jx43btxQzTcSGRkZExPDZrNTU1OpkpFSqRTyjQAAQBBlCLfyRJfK6ommpqdP
n+LNw8Z9TCxi0tRNqoeu3MJrdsKECWiGJO2wrkB0dPTcuXPxeoEmfQcMPHjl
phNX2M4n9uiPYhrct6+FhQWDwfDw8PD29qZCuBMTE5Uh3KolI9E7Qp3oogEJ
IdwA0M3h331K5/Zf1qXfSFsKAEC3RuYfRmey4n53mbSlQHcEQsI6EdQBAlJA
z58/b1QWpKioSCQSCQQCJKB4PB4SU3FxcUhYBQUFeXp6urm52dvb29jY3Lp1
y8DAAE+1XXfyaTdp+SSchX1BmCZ6enrffPONQqEg3atdBzQUBw4ciNcdF80d
1A2G+/5Rulj5x3R1ddFbQJUFgZAwAAAA4LWo4Qv9Bs1QrTNYGpVA2ihAC0k7
DtHR3UVegaQtBYBWQJlvBGlDKiQMbXqV+UZWr16Nty3XUNUdPVPnLcBr9tdf
fyXtsO5ITEzMvHnz8LqMJiamAw5cvt4qH6PnLF2JZ8O2bdsa5RtBPzw+Pj41
NZXH4/H5fKFQWFRUBPlGAAAgiLJkJKK2tra6urq8vLysrEwikUydOhVv9jty
7ba6GdU2Kct0sBles56enqS91XVAS8yTJ0/MzDD7gibjpr75s41rux3aO3L4
ZiNH45n61VdfOTg4ODk5+fj4+Pn5hYWFRUZGslislJSUzMzMnJycgoIC9FLI
5XK0ZFdVVdXU1KBdLoSEAUA353lFpeoBnbrHf+icF9U1pI0FAKC7w959XOt8
xTSZ0qAoJ20p0O2AkLBOhGr5SKSGkCZSlo8sKSkRi8UikSg3NzcrK4vD4SQn
J0dERISGhvr6+np7e1PlIy0tLffs2YOn2ibOmN0OutIhJXfnt2d6tnGdi7Vr
16anp5Puzy7I33//jdcjoyZOZqTlqxsVn313Fq/Z5cuXU8f+yvKRCOogDo4R
AAAAAHU0lCmCJy/9b+Z5vdHFPlBguqNTFpfsqaM9Hizxwy9JWwoArUOzJSOp
fCM+Pj54m2ekwswj2er25Mdu3MVrdvTo0fX19aQd1k1Bksfc3HzIkCF4fUeT
sVOm/WTt3JJzgGPX/8T7071790Y/UEO+EZFIJBaL5XK5Mt8IlIwEAKA9aRrC
TZWMRPOSTCY7d+4c3uw3bOx4DcdoW744iNfse++9R9phXRC0+pw8eRL7jjZN
Fr+78WFwfDsc3W/aux/PwpkzZ1pbW7u6uqIlW7VkJIfD4XK5AoFAKBRKJJLi
4mLqLLe2thZCuAEAQLD3naBz+0/q4U/aUgAAgP+r5GXRmbISP/qKtKVAtwNC
wjoR6kLCysvLS0tLkWgSi8V8Pj83Nzc1NZXNZsfExERERAQEBPj6+jo7OzMY
DCsrq8ePH2Onctp75mKbispTfz4ZPGIUnm00mThxItx3azvQ4JwxYwZe1+w9
e0ndwLBJzOw7AHPQPnjwoKysDL0mtbW1z/4N5AoDAAAANPCyvj5q6Uf/1Wg9
RoptXUkbBWjhn1evwues1yq3vQ3HVecKSBsLAK2DMt8I2t9S+UYUCgXa90ql
0lmzZuHtnA9cvq5uQ27PzhkwZChes25ubqS91d1Bauj06dNt/TF60fqNf0ck
Y5wDMNLyh40dj/dHjxw5ojnfSGFhIXopSktLlflGlBmkISQMAIB2oNmsnlTF
h9zcXFNTU7zZ78ITW3WT6l+BMfoGhhht6unpwf3ZtgN194YNG/C6myYGhoYf
H/rWLjmn7Y7uzSPZ2Pe4L1++bG9vj7aFnp6eQUFBoaGhcXFxiYmJPB4PLdn5
+fkikYjK6klVfFAN4aauQpDuQwAACFCZluGpO0rraU/UOx+SthQAAOA/ZP54
S3tUWI+RcEYNtDMQEtbp+Oeff5AIog4TqPKRFRUVCoVCLpcj3SQUCgUCAZLw
XC43ISEhNjYWKazAwECqfKStra21tfXhw4fxtFv/QWZtpCt/9wh6c8FiPKto
YmJicv369YaGBtId2MVB4w2vg3r37WcZm6Y2XPDuE7xmx40bJ5VKlYcJyvtl
cJgAAAAANAVtsOI37VVVZyJLJ9JGAdrh3/6bzg2srJ/+IG0pALQC6kpGlpSU
yGSyy5cv422bzUaOduTw1e3Gtx48htfs8uXLSTsM+A95eXmbN2/G60eamJgO
+MnqtdOFbT1wFO/PjRo1SkO+EapkJBKDxcXFSA+id6SmpgZJQsg3AgBA+6C8
2NsohJs6xUWz0/bt2/Fmv2WbPtIwqb61Yi1es9999x1pn3V9AgMDsUuF0mTA
kKHHb95ro5CweSvW4Fm1fv16KoTb29vb19eXyuqZnJyMluysrKzc3NyCggKx
WExVeVYtGUmt1xDCDQDdlqh3PtR+2qM7qjItg7SlAAAA/+FZSamP8QStc1f8
ht2kLQW6FxAS1ulQzRWGxFFdXR2Vcry0tFQmk4lEovz8/Ozs7IyMjKSkpPj4
+LCwsODgYC8vL3d3dyS+bG1tzc3N33rrLTwFt/bjz1pXS1rEpK7bsatHjx54
9tABNb5v377i4mLSXdddwD7UWrt9l4ahMm7qm3jNfvvtt1RImOonAAgJAwAA
ABqB9lfJu47+V5rpjBA9dSRtFKCdhjKFr+l0rUI7YORbL2rrSBsLAK1A05Aw
qmQkEoN8Pt/MzAxvz3zmnrm6ffijkARDIyOMNpEQS0tLI+0w4H8ICgqaPn06
3iChQ0/jXjecmfQPBCxj04z7mOD9rfPnz9va2lL5RgICAkJCQqiQMC6Xm56e
LhAIRCKRVCpFrwYVEqZ6RQhCwgAAaGuU6zV1fovmH6rWQ1lZWWlpaXR0tJ6e
HsbUp6und9c3Ut2ketnSCW9GNTU1VSgUpH3WLUDj4c6dO/3798frKZpMmfPW
ay3HdJ4bLr54xhgYGKCf7OTk5OLi4uvri5bsiIiImJgYNpudmpqam5uLdrCF
hYUSiQS9GmjJhpAwAAAohI/t6Nz+Sz/zC2lLAQAA/geRuQOd6UtsB0n1gfYD
QsI6KUgNIU30/PlzJI6oW2ZU+UipVIoEFFJSOTk5VPnIqKio8PBwf39/JpPp
7Ozs6OhoZWV15coVHR0dDBGnp2/wICiuVYQkI1Ww7+zlXiZ98eQkTZYsWZKc
nEy6u7oXAoHA0BAnR30PXd3bXiHqBsxVO3e8MdC7d2/0OjQqFELd04QjBQAA
AEBJ2pELqvFgwr/tSVsE0IK951s6KrvIO4i0pQDQUtTlG0FKkCoZ+fnnn+Nt
mBet36hBuKH/itfsoUOHSPsMaAY0fu7du4ddrUwrI8ZP1JBxrvHoWodZRWvV
qlX29vYMBkM134hqyciCgoLCwkKqZCR6TaBkJAAA7Qx1FZE6uVVWeaBKRhYV
Fa1cuRJv9vv02Cl1M6oTVzh68ht4zT569Ii0w7oXaOeGtkm6urp4/UUHHR2d
lR9ux6vp3OwzedZcPEv27t2rDOEODAxUloxUDeEuLi6Wy+VoyW4Uwk3Fg5Hu
LgAACPCiusZ/6BytRz1+g2Y8r6gkbSwAAMD/8PLZM/9hc7XOYGEz15C2FOhG
QEhYJ4UKCaPuhiOhVFNTgxQTkpNFRUVSqRSJqby8vLS0tJSUFCSyoqOjkeDy
8/ND4svZ2dna2trCwmLDBsyj17fXvtdyFXn+sc2I8RPxDKDJqFGjHBwcSHdU
N+XixYt4vTZz8VINw2b9J5gfuTZt2lRaWlpZWVlVVUV9CKAOFuBDAAAAAECR
ce7a/8SDPbYjbRFAi/LkNM8eI7VK7JhV20lbCgCtgGpIGJVvhAoJUygUaK8b
Hx9vYGCAsVXu0aOHhnsZV6xd8Hbgffv2LSkpIe0zQC1lZWWHDx/Gy1GjlUNX
btE5FvjdMwjzqpqe3u+//06VoGIymf7+/uHh4VFRUVS+kezs7Ly8vMLCQqlU
in5meXk5FRJG5RuBkDAAANoH1ZAw5cktmpGKi4vv37+PN7ua9De1ScxQN6l+
8cMVvGanT5+OJkbSDuuOcLncVatW4fUaTYx69d514pxDSl4LT/L3ncUsTT5g
wABLS0u0ZLu7u3t5eQUHB4eFhSUkJLBYrIyMDLRk5+fnFxQUoE0j2s2id6Sq
qgq9LxDCDQBA6qFzdG7/FTK8SFsKAADQDAU2rnQmsexf7pK2FOguQEhYJ6Vp
+cjKykoqURjSUEhJNSofGR4eHhIS4unp6ebm5ujoaGdnd+fOHSOs8h+Ik7cf
YUvIu76Rc5evxvu7NDE2Nr548SLyCele6r5UV1cPGzYMr/u+v/NY3eB5FJpo
gJV/DBEaGkqVC6mtrUVjo6Gh4fnz51A+EgAAAEBkXripGg+W/9CGtEUALdBm
OPLtjVrFtZf+mKqMHNLGAkArQO1dmy0ZKZVK3333Xbx98taDx9Rtv515orFv
YBYZRHqTtMMA7fB4vDVr1uB1sQamzV9I53AA/W947e/atUu1ZGRwcDBVMjIt
LU2Zb6SoqKikpITSgPX/BvKNAADQPjQN4aZKRioUirKysoKCgvHjx+PNfhrO
Y63ieSb9MdM/olmUtM+6NWg5wx4SNBkyarSGEuFaH3t2jqnZELw/feTIEQaD
oSwZqRrCnZOTw+fzJRIJWrKVIdy1tbXUmS2UeAaA7kx1Vp6X/hitpz0RCzbA
xh4AgA5L/IbdWucx/yGzX9bXk7YU6BZASFgnpWlIGBJNVVVVSEDJ5fLCwsKC
ggIkrDIzM5HISkpKioiICA0NZTKZXl5eSIjZ29tbWFh8/fXXeGpu9OQ3nHmi
19WPjLT87d+c0NPXx/ujNNmxY4dYLCbdP8D/oTGG14NDRo3WUGfki3M/4TWL
JjeFQtH0eAEuQgIAAHRzsi799l8h1mOk6KkjaYsAuuQ/sKZz3yrjh+ukLQWA
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
KRQKqjfS2tra1tYGvREAQFdCsw3JPGTLJimopaWlvr6+tra2oqJixYoVbNnv
7W1fCGVUx8ySCc9MZzN7+vRp3qsFROOLLxjHcMxZskzNgfDpOS+xmd2wYYON
jY2Dg4OHh4evr29ISAjZshMSEpKTk2lLWGlpaXl5eXV1Nfk6mpqayJdCb19p
CzduXwHomdSEx2pzEZe4YRdvTwEAQHyqAiO0yYHpuw/z9hR0H9AS1i3pPD5S
9XV5h/GR8fHxpFIj9ZqPj4/q+Mhly5axVYLPzl2g5vpi3JPPsJk9duwY73UF
orF/P+P0kJnzF6m5vlj05jtsZtetW9f5dTm93MPVBAAAPFoEjHvpAbWE1Sel
8/7H9ThyDv2mzX8a6YXrvD0FQBzoyEj6tKftf6B6I5WVlaRwMzY2Zjvr/ubk
K3R+PuHkw6YIYWJiIpPJeC8YEIeWlhZmAboD564KRdc5nzBdPT0Gm3p6eqdO
nbKzs6MjI4OCgkJDQ+nIyKysLDV6I3jaAwDoGkiSoU9xlS3cJBEpR0ZeuXKF
LaOa9Ot/PTpdKKlu//E3NrOTJk26A4WB7sLNmzfZBOj09PXJviwUXdu+P84W
XQMGDDAzM+swMjI2NjYlJSU9PV05MlK1hZt8L3S/Rgs3AD2Wf9+7FzJtscar
Hk/j8a1FpbydBQCAB0LKlr0a06BXn0m3a+p4ewq6CWgJ65aotoTR12q0JYy+
VpPJZGVlZfn5+Tk5OampqUlJSbQljBRunp6ejo6Otra2FhYWp0+fNjIyYqsH
j9l5CtWYP1m7MNeY1dXVvJcWiENDQ8PgwYxTRA9flQhF15/+UfpM+mO6urrR
0dF1dXVoCQMAAAAeEtpKZV69J2isjoOeXPg3tGRBd4G2hNERVORQ2tLSQlvC
KioqXn31VbbD8+qPP1PzpGLqzNlsZvFgpzvxgB7sPDt3AZvZ9evXSyQSe3t7
d3d3Hx8fqjeSmJhI9Uby8/OLi4vLysqgNwIA4IWyJazDdAaSl8iWPXXqVLbs
t/v4WaGMahWfM8CUcVagl5cX7wUDorFq1Sq2MHhz6+dC0WWXWjhkxEg2s9u2
bSNbtouLC9my/fz8goKCoqKi4uLiUlNTMzIypFJpSUmJXC6vrKwkHwj5TNra
2tASBgDI//W8Nq//bv52kbenAADwoGjKuemuozkTxq3dwttT0E1AS1g3hl6E
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
LS0qKsrJycnIyEhISIiJiSGFXkBAgKenp6urq42NjZWVlbm5+ejRo9mqyDe3
fi5UmV6PTu/Tn3GMRXBwMO91BaKxaNEixuj6dJegNkKadNjosWxmv//+e/oz
RGtrq1L2nHaF8V4qAAAA4NEmZctebS4J5a6+vD0FQBw6643Q5zmkFisrKxsz
ZgzbefXAuatCx2DzKFJk9WczGxoaynvBgGgsWLCALQw2fHlAKLokiXkDTIew
mf3qq6+oRJiXl5efn19QUJCq3ohUKi0pKemsN6IsxFCLAQAeKEItYXV1dWTL
TkpKMjY2Zst+vzn5CiXVE04+bLMCTUxMZDIZ7zUD4tDa2sosQLf/3BWh6Drn
E8Y2nkNPT+/3338nW7ajo6Onp6evry85H0ZGRpKvIDU1NTc3t6CggBxi5XJ5
bW0t2bJpCzdUPQHo4dxtafUbMUvjVY/PoKdv19XzdhYAAB4uGtKytbktT3h3
B29PwaMEWsJ6LLQooy1hpFKjL9Orq6tlMllpaWl+fn5OTk5KSkpiYmJERERI
SIiPj4+7u7uDg4ONjY2lpeW3337LVpz2MuljFpkqVJ9u/+EEm9lp06bdw+Tc
7kJ6eroe0zWFoZHRxYAYoej611+WbNFlampaXFzc4VoD4yMBAACAf0hDSqa7
7kiNFW7kgrd5ewqACNBzY+eRkQ0NDaQQq6io2L17N9thdfzT09Tojby2/gM2
s++++y7vNQOiQap4tjAwHTZckpQvFF1L1m9gM/vCCy9IJBJHR0c3NzdfX9/g
4OCwsLC4uLikpKSsrKy8vDxSf5WVlVVXV5Ovo7GxsaWl5db/gJYwAEDXoGwJ
U7ZwK5/TKhSKV199lS37rd70qZote+rM2Wxmjx07xnvBgGgcOHCALQyenbdQ
TXSR/5XN7Pr1621tbZ2cnFxdXcmWHRAQEBERERMTk5KSkpGRUVBQIJVK5XJ5
ZWUlbeGmEmHkoEu+HezXAPRY0ncd0qafoUziwttTAAB4GMn+9pjmLKo3qqWw
mLen4JEBLWE9FlqU0R8j2traWlpaGhoa6urqFAqFTCYj1Vx+fn56ejqp76Kj
o8PDw/38/Ly9vZ2dne3t7SUSibm5ObOU05zFSwWlnNKLRk2czGb2zJkzvBcV
iMauXbsYo2vJMjUXIHNXrGEzu3HjRip+3tzcTL4X5Y8RaAkDAAAAmIl4ea3G
8tZDf3RjZi5vTwEQAfV6I2lpaSYmJmwn1V9s3YVOv6fcA9hmBRobGxcX42ap
m9De3s4sQLfvzGWh6LoYEK1vYMBgU0dH5/jx43Z2di4uLl5eXv7+/trojdAf
l6E3AgDoGmgLN1X1bGtrI1mI3ppWVlZ6enqyZVTj3ibXIlKEkuru42fZzJIM
T/I87wUD4kBOX2wCdOS8R059QtH1xTHG0eR9+/a9evWqvb29q6srifyAgICQ
kJCYmJiEhISMjIycnJyioqLS0lLyXZDTLPlGyMmWjoykExawXwPQM2nOl3oY
jtV42xM6azlSBAAA3Jf2ikrPXhM0JtK4tVt4ewoeGdAS1mOhLWH3HVmiUChK
SkqkUmlWVlZaWlpcXFxUVFRQUJCfn5+7u7uLi4udnZ2lpeXJkycNmG6ACb87
3xCqUo9cs2WzaWpqSvznva5AHGpqagYOHMgWCT9aOglF11nvUDaZdBLqCQkJ
qiNL6OUG+YhQuQAAAAAMFF+RaPNoNOubX3h7CoAIKPXB7v4Pt27dUuqNkHNv
ZWXl8uXL2Y6+yzZsUvMg4pkX5rKZPXr0KO81A6Jx+PBhtjCYOnO2muias3gp
m9k33njDxsbG0dHRw8Pjxo0bwcHBkZGRsbGxqampmZmZhYWFRUVFMplMoVDQ
+qulpYV8L8r6i5ZgqMIAAA+Izi3cVNWTZCSyZcvl8unTp7Nlv+0/nBDKqJKk
fNNhw9nMurq68l4zIBpr1jA+ZV258RM176+HjxnHZnb37t10yrO7u7uPj09I
SEhERERiYmJKSkpOTk5+fn5paSnZsqmqJznZdhgZyXs5AQB8iH59g+bbHp0n
6uKSeXsKAAAPL0WXrLW5OS+39+DtKXg0QEtYj0V5xUFQvlJvbGyk4yPLysqK
i4vz8vKysrKSkpLi4uLCwsKCg4O9vLzc3NwcHR0lEsn169c3bGCcE6H+bvml
pavYzO7Ygcm53YcLFy6whcHYqU87ZBQLRdc7O79iM/vaa6+Rr6OhoYH+JKF8
pQ4JdAAAAOC/5U5j042hz2qsam88PoP8P3k7C4AIqLaEddYb8fPzYzugGhob
Xw6JFzr37j19ic3siBEjyImX95oBcZDJZGwCdDo6OiecfASj64+/2KKLOHPp
0iWqN+Lj4xMYGBgeHq6N3ghUmgEAXYNqSxht4W5ubia5qLa2lqSm77//ni37
DR012i61UCipvr2dcXj0K6+8wnvBgGiEhYWxhUGf/v3No9KFouutzxgHMYwa
NUoikTg4OLi5uXl7e5PzKtmyo6OjU1JS0tPT8/PzpVIpbeEmB1rlfalqCzfv
FQUAcKBM4qJND0P6F4d4ewoAAA8199rbtbk8D525lLen4NEALWE9HNXxkcpX
b7W1tXK5vKysrLCwMC8vLy0tLTk5OTIyMjQ01NfX19PTkwqFWVlZXbp06bHH
HmOrK7ce/lmoVr1wI0LfwJDBpr6+fk5ODu9FBeJw9+7dqVOnskXXp4d/EYou
y7isvgMY9ceuXbtWV1fX1NTU0tJCX73hhwkAAACAgbQd32r10MnOnbenAIiD
siWMVl50ZCTVG5HJZM8//zzb6XTLv34UOvTaphQ8PnI0m1lbW1veCwZE4513
3mELg9ff/VAouhwzS0ZNnMxmdseOHVRvxNPT08/PLyQkJCoqKj4+Pjk5OTs7
m+qNyOVy8mko9UYwMhIA0JXQLfu+UxUKCwsHDx7Mlv0O/mkulFQvBcUZss4K
TE1N5b1gQBxI1M2YMYMtuj478qtQdJlHpfXu05fN7KFDh5RTnsmWHRQURLbs
uLi4tLS0rKwsqVRaUlKiUCjIp6E6VYHelKIlDICeyb32dv8xL2i86vEe8OSt
qhrezgIAwMNO5Y0Qbe7Pb574k7en4BEALWE9nA7jI1tbW+lFR2VlpVwuLyoq
KiwszMzMTE1NjYmJiYiICAgI8PX19fDwcHJysrW1tbCw2LZtG1tdaTpsuG3K
TaGKdd2OL9nMLl2KhtjuA7NgQr/HBlnGZQlF156TjPpjkydPrqqqom/V29ra
8FYdAAAAYKApK89Df7TGejb8pTW8PQVAHFQlwjrrjRw7doztaGo6bISaeur9
3fvZzL744os42XYbYmNjdXR0GMKgl0mfa+HJQtH13hd72aJr+PDhVlZWVG+E
SoRFRETExcVBbwQA8PCg2sJNUhBJRCQdkS27oqJi48aNbNnvpaWrhDIq+Xvp
9ZVsZjEroTtx/vx5tjAYOX6SfXqRUHS9+PoKNrOvvvqqRCJxdHR0d3enU57D
wsLIlp2UlJSVlZWXl1dcXFxWVkZHRtIpz6ojI3FTCkDPJHPvj9p0L5SY2fH2
FAAAHg1Cpi/RmFT9Rsy6d+sWb0/Bww5awno49FpV+fMEobm5uaGhgRR0lZWV
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
2dfXl7Zwx8XFpaSkpKen5+fnky1bJpORLbuurk55L0pbuNESBkCPJfu7E9r0
Kkj/tODtKQAAPJLcrqv37jdFY5qNWvwub0/BwwtawsB//rcljF60dngNV1tb
K5fLy8rKCgsL8/Ly0tLSkpOTY2Njw8LCAgICvL29XV1d7e3traysrly5wizl
9NG+74Rq2EvB8Ua9ejHY1NXVJeUq76UF4kAi89lnn2WMrv2HhKJLkpg3cPDj
bGbPnz9fV1fX1NTU0tJCB5oof7DA1QcAAADQmZhlH2i+JNR5oi42mbenAIiD
qkRYe3s7rbDoCCqZTPbMM8+wnUJ3/Pi7msPtoKHD2My6u7vzXjAgGqtWrWIL
g9WbPhWKLvs06dBRY9jM7tmzh/aDUYmwkJAQ5cjI3NzcwsJC1ZGRjY2NygoL
Py4DALoGZQs33bKVLdxVVVUkTQ0YMIAt+x01sxNKqud9w/WZZgUaGBgQl3gv
GBAHEnJTpkxhi65dx04LRdeV0ERD1lkeP/zwg52dnYuLi7KFOyYmJikpiWzZ
2dnZdGRkRUUF+TTQwg0AoLSVyb1MJmq87QmauuDvu3d5OwsAAI8qZdbOWo3e
MLPj7Sl4SEFLGPjP/7aEUegFSFtbGxUKI/VdZWWlXC4nRV9hYWFmZmZqampC
QkJUVFRISIifn5+np6ezs7Otra2FhcXu3bvZ6s3+g0ytE3KFKtkPvjrIZnb+
/Pm8lxaIRnh4OFsYmPTrbx6VJhRd31wwYzM7evToioqKhoaGpqYm8r3QCxB0
hQEAAAD3pdzeQ5u6NW37Qd6eAiAa9Pdl+uKmvb2dlFfk3FhXV1dVVXXkyBG2
I+iw0WPVSOC++ekuNrOLFi3ivVpANIKDg9nCoE//Adej0wWja+vnbGbHjBlj
ZWVlb2/v6urq7e0dEBAQFhZGf1+mEmFFRUXl5eWktqqtra2vr29ubm5tbUVL
GACgy1Bt4SaZh96I0hZukprWrWMcXrDwjXVCGZX8PffKq2xm9+3bx3vBgGic
OHGCLQzGPfmMY2aJUHTNnL+Izezy5cs7SIRFRkYmJCSkpaVlZ2fn5+eXlJSQ
LZscZWtqatDCDQCgxK78SJvbnqrACN6eAgDAI8zfd+/6j3lBc//tlFdwHgP3
BS1hQIlyfCSVSW9vb29qampoaKDjI0tLS4uKinJzczMzM1NSUuLi4sLDwwMD
A318fNzc3BwcHKytrc3NzWfPns1WdS5++z2hStYmOd902Ag2s8Qr3usKROP9
999njK5176u5iJv4zAw2s7t376Yy6a2traoy6WgJAwAAAFS5194eMPZFjUWr
94Anb1XV8HYWAHHoMDJS+dyGFFYFBQWmpqZs589//WUpdKa9GBBjyDQrUE9P
Lz09nfeCAXEgUTdt2jS26Nr2/XGh6DKLTO1l0ofN7KFDh2xtbe+rN5Kbm6vs
B6usrKR6I8rnNtAbAQB0AR36wUj+UbZwV1dXk5Slq6vLkPr0DQwu+EUKJdXD
VyVsGXXw4MENDQ281wyIAwkwZgG6n6ychaLrmB3jaHIjI6Pz5893aOGOjY1N
Tk7OzMzMy8srLCzs3MJNvhry7dD9Gi1hAPRAKjwDtOkHS/7oS96eAgDAI4/M
yVublJtz5CRvT8HDCFrCgBJlSxhBeQ3S2NhICj1SpZaVlRUXF+fn52dnZ6el
pSUkJERGRgYFBfn6+rq7uzs6OkokkuvXr//00086OjoMhaf625L9566w1bOj
R49ub2/nvbRAHEpKSnqxThE96eov+m2JiYlJbm5uQ0MDvQZBSxgAAABwX7IP
/qpNxVp0CZ38oPvQuSWMHBrr6uoqKys/+OADtsPn3BVr1DxzeOG15Wxmd+3a
xXu1gGicOXOGLQxGTZxsn14kFF1zlixjM7t48WJra2sHBwc3NzcfH5/AwMDw
8PC4uLiUlJSsrKybN2/SkZHku6iurqaFlareCFrCAAAPGtWRkST/tLW1kUTU
1NRUW1tLUtP8+fPZst8HXx0Uyqgk2Y6cMInN7NWrV3kvGBCNzZs3s4XBK6vf
UnMgnPDMdDazxJ8OEmERERHx8fGpqanZ2dkFBQVSqZRs2QqFgj6PRUsYAODv
u3eDnlyo8arHq/eEtlIZb2cBAKA7EP/WVo1Z19f0mbvNLbw9BQ8daAkDHaBF
nOr4SPrjBan4SN1Hqr+bN2+SSjAlJSU2NjY8PLxDV5i5ufmaNWvYas/nF76m
pqR9ctYcNrOHDh3ivahANH744Qe2MHh6zktqomv5ho/ZzK5YsYJ8HU1NTc3N
zfQ9O/lw0BUGAAAAKGktKvU0Hq+xXA2Ztvjf9+7xdhaAfwr9LUxVb0RVIqym
piYqKsrAwIDh2Kmrp3fWO1ToNPujpRPbaXbgwIHEK97LBsSBxBizAN2Ra7ZC
0fW78w02myTUz507Z29v30EijOqN5OfnS6XSsrIyhUIBvREAABdUt2zaD0ay
kLKFm2Qwtuw3wHSwdUKuUFL9+OBRNrPTp09Hl2y3IS0tjU2AztDY+K/AWKHo
2nTgMFt0DR482NzcnEqEdWjhphJhRUVFpaWl5Lsg50aq6kmOuEpVT+zXAPRM
8n48rc3rv4I/rvD2FAAAugn1CalaaTNu2sPbU/DQgZYw0AF69UqfyJHirrW1
lf5+QYo+uVxOCsDCwsKcnBwqFBYVFRUSEuLn5+fp6ens7Gxra2thYXH27FkT
ExO2CvSrU3+quYhm0x/r3bt3WVkZ73UF4kAC8oknnmCLrq9PXRSKriuhiUZM
+mOEwMDAhoaGpqamtrY28sncvn1beR/Ce7UAAAAA/sSt3aJNrVoTHsvbUwBE
QCm8rNQbIcfX5uZmclykeiNLlixhO3O+s/MroaOsQ0bx2KlPs5k9f/487zUD
orFjxw62MHhp6So1z2emzpzNZnbjxo02NjZq9EaKi4tlMllVVRX0RgAAXFBt
CaNXoCQR0Rbu0tLSsWPHsmW//eeuCGVU86j0Pv37s5kNDQ3lvWBANBYsWMAW
Bu/v3i8UXZLEvAGmQ9jM7tmzp4NEWGRkZEJCQlpaWk5ODt2yy8rKqquryYG2
sbGxpaVFVdUT+zUAPZB2RZV3vykar3oCxr/89+3bvJ0FAIDuQ8ZX32vMvR6G
YyHPCDqAljDQgc7jI5U/YSjHR5JKUNkVRirE4OBgUi26ubmRytHGxub69euf
ffYZWwU6cvwkh4xiodp26fsfsZldt24d73UFomFvb88WBkOeGGWbclMourYe
+onN7KxZs8jXQb6RlpaW1tbW9vZ2CIUBAAAAlAp3P63eLn38FW9PARAH5Y/L
dGQknT9FDoo1NTWVlZWXL19mO3D2HTDQMi5L6Bz72ZFf2cxOnTqV+Ml7zYA4
kApdX1+fIQz0DQwv3IgQrJIO/8wWXY899piZmRnVG/H29r6v3gjtB6MSYdAb
AQB0MR0kwmg/mHJk5K5du9iy3/inp6lpsn3tnQ/ZzL7zzju8FwyIhq2tLVsY
mA4bLknKF4yu9YyjyefMmdOhH4xs2bGxsWTLpi3cdMqzQqGg+3VLSws54pIP
h2zZGPEMQI9Fm+Fl5E/hHcTbUwAA6Fa0lck9DMdqTL8J7+7g7Sl4uEBLGOhA
55aw1tbWpqamurq62tpauVxeWloqlUrz8vIyMjKSkpKio6NDQ0P9/f2pUJid
nZ2lpeXVq1dHjBjBVoe+8/nXQrXttYiU3n36spklfvJeWiAaL730ElsYvPfF
XqHosk0pGDJiJJvZ3377rb6+nnwmLS0tVCiMdoXhVwwAAAA9mb9v3w6cNE9j
ierVZ1K7XMHbWQDEQbUlTFlJkYMifVwzadIkttPmnpMXhA6xlnFZ/R4bxGbW
z8+P94IB0Vi6dClbGLy9fbdwiXTTdNhwNrM7d+5UrzdSUlIil8vJp6H8fRl6
IwCArkSp6kmnPNMtu6GhgeSlzMzMPn36sGW/X2zdhZLqH+6Bunp6DDaNjY2L
iop4LxgQB7LZjRkzhi269p6+JBRdFwOi9Q0MGWzq6Oj8+uuvtra2zs7Onp6e
5HAYEhISFRWl3LILCwtLS0vJll1VVUW3bDolgbZwoyUMgJ5JbVSCNv1gCe9s
5+0pAAB0QwrPXNMmCVe449IP/D/QEgbuCy3o6LiTzuMjSSWoHB8ZHx8fGRlJ
x0d6eHg4OTlRobB9+/axlbd9+ve3iMkQqnC3fPsDm9lZs2bhSrnbkJiYyDZF
1Lh37yuhCULRte8Mo27DsGHDyEdBx0dSoTCMjwQAAAByvz+lTX1aePYab08B
EAHawdJZb4TqLSsUir1797IdNUdPnuqYWSJ0gl258RM2s2vWrOG9ZkA0XF1d
2cJggOkQq/gcoeha8eEWNrMzZ85U7QejEmEd9Eboj8t1dXXQGwEAdD33HRlJ
t+yKioqVK1eyZb+l73+kRiJs2ovz2MweOXKE94IB0SD/NdnCYMrM59VE15zF
jJ3ha9eutbGxcXJyIlv2jRs3goODhVq4MTISAEAhO2jIjNc0XvV4Go1rKSzm
7SwAAHRD7ra0+po+ozEPh7+4mren4CECLWHgvtBrWOXz9vb2dtoSRgpAhUJR
VlZGhcIyMzOTk5NjYmLCwsICAgK8vLyUQmHXrl2bN4/xrmPeyrVCFa5dauHw
MePYzF6+fJn3ugLR+OQTxh+/5q98Q80VyuxXX2czu3XrVuXzdrSEAQAAAG3l
ci+TiRqL06Apr/x95w5vZwEQAWVLWAe9kbq6uqqqqqysrP79+7OdM3+wcBQ6
u57zCdM3MGCwaWhomJ+fz3vNgDjcuXOHWYBu94lzQtF1OSTe0MiIzeyPP/6o
UW+koqKCSoQ1NzfTZzXQGwEAdBlUIozkT7plt7S00GvPmpoakrXYUp+hsTHJ
nKI/QhwxYgRxj/eCAXGQyWQmJiYMYaCjo3PC0VsouvaevsQWXb1797548aKd
nZ2Li4uXl5e/v39oaGh0dHRSUlJGRkZeXp5UKi0rK1MoFHTKM92y0RIGQA/n
5m8XtXn9l3/sAm9PAQCg2yJ3u4GH2OC/Ai1h4L6ojo+kNyT0Fw1SANbU1FRU
VCjHR6anpycmJpJqMSQk5MaNG1QozNbW1tLS8vjx43pMiui6urpnPIOF6txv
L15nq3OHDh1KSlfeSwvEgQRh376MU0SP2XkKRdcptwA2/TEjIyPyLTQ0NHTo
CqO/aOCGBAAAQE8jbu0WbSrTqoBw3p4CIA7KfrAOeiPV1dVyufzNN99kO7i+
+ta7ap4zPDtvIZvZAwcO8F4wIBq//vorWxhMeGa6GgG6eSvXspldsWKFjY2N
o6Ojm5ubr69vcHCwaj+Yqt4IlQjDj8sAgK5EeeHZuYWbPoN9/vnn2bLflm9/
EMqotikFQ0eNZjNLMirvNQOi8e6777KFwWvvfCgUXWQrHzVxMpvZ7du3U4kw
ZQt3ZGRkfHz8fVu46ZZNPhmoegLQk7ldU+cz8CmNVz3+o+fca2vj7SwAAHRb
SEUTNHWB5mw85oW/797l7Sx4KEBLGLgv920Ja25uJgVgbW1tZWWlTCYrKirK
z8+nQmGxsbFUKMzb29vV1dXe3t7a2trMzOztt99mq0mnvThPzW8fsxYuYTP7
1Vdf8V5aIBq///47WxhMmj5TzW8fb2zdyWZ2zZo1dXV1DQ0Nykdz5Nuh79zx
uwYAAIAeRXVItDb9YInvf87bUwBEQ6mxrKo3Qg6HpHQKCQnR1dVlOF7qGxhe
DIgWOrV+d9mK7dQ6ZMgQ4hvvBQPiQAKMWYDuFxs30d9hGRsbX7hwgeqN0N+X
Q0NDY2Ji7qs3QkuntrY2tIQBALqMzi1hdMsmSamqqurEiRNs2c902AjblJtC
SXXDlwfYzL7wwgtIid2G2NhYtleovUz6XAtPFoqu93bvY4uu4cOHW1hYkC3b
2dnZy8srICAgLCyMbNnJycmZmZnKLZucNOiW3dTURL4XsmVD1ROAnkzi+59r
c9sjd/Hh7SkAAHRzKv1CtUnImV//wNtT8FCAljCgBtV7EtXxkbQrrLy8vKio
iFSIGRkZSUlJyvGR3t7eLi4udHzkn3/+yXxBvfPnk0LV7hmvED19fQabRkZG
hYWFvNcViMPt27fHjx/PFl2f/3JKKLrMo9J69+3HZlYikZCv477jI3GJBwAA
oIfw9927wU8t0liQevWe0FpSzttZAERA/chImUw2d+5ctrPlh3v/JXRktU+T
jhg3gc2smZkZ7zUDorFp0ya2MFj4xjo1j7DGPzWNzewnn3yiqjcSHBwcGRmp
ZmQk7QeD3ggAoAv49/+iumWrtnCTHDV8+HC27Pf1qYtCGfVqWJJxb8ZZgXFx
cbyXDYgDCbw5c+awRdfH3xwRii6L2Mw+/Qewmf3mm29oP5iHhweVCOswMpJu
2TU1NcrXr+Sroa9fcdUJQM+kPiHVXUdz+0Hc2i28PQUAgB5B0sbdGnOyd78p
t+vqeXsK+IOWMKAGVa0wUvTdunVLeVVSVVUll8tLSkpu3ryZlZWVkpISFxcX
ERERFBTk6+vr5ubm4OAgkUiuX7++a9cutsp06KjRdqmFQjXvms3b2MyuWLGC
97oC0fD09GQLg8eGPG6dkCsUXTt/Pslm9umnnyafhvK1O1rCAAAA9EDyj13Q
5o3SzRN/8vYUAHEQ+n2ZvqM5c+YM28Fy4ODHJYl5QufVj/YfYjM7c+ZMdN10
G0gZziZAZ9Sr16XgeMHo2vcdW3Q9/vjjZmZmtra2zs7OpFLz9/cPDQ3t8Psy
lQhT/r5M39GgJQwA0AUo92s6EOHWrVvKKc8kKVVUVGzdupUt+81auERNk+2C
NYwDFDZv3sx7zYBoXLt2jS0Mho4aY5tSIBRdr6x+i83svHnzrK2t7e3tXV1d
vb29qURYbGwsOVpkZWXl5+cXFRXJZDIqEUaOtWgJAwCQTz5s9kqNVz0eBmOa
cwt4OwsAAD2CxsxcbTp149/+lLengD9oCQNqUN6WEFTHRyof0FGhsM7jI728
vFxcXJTjI8eMGcNWn679ZIfgM6iYjL4DBrKZDQwM5L20QDQWL17MFgZvbN0p
qLqQXjR8LKP+2NGjR1VnoChvSzA+EgAAQE+gXVHl3W+KxlI0YPzL927d4u0s
AP+Uznoj5PhH+8Hq6+urq6tLSkpGjRrFdqr85oKZGlVbk36MUswRERG8lw2I
xvz589nCYMOeb4Siyzoht/8gUzaz+/bts7Ozc3JyUuqNREVFUYmw3NxcKhEm
l8s7S4Thx2UAQBegvoU7MTHRyMiILfv97nxDKKked/BimxXYp08fkjB5rxkQ
BxJpzAJ035y/JhRdZ71D2TrD9fT0Tp48Sac8K/vBVKc8FxUVlZeXK0dG0hZu
5chI7NcA9EwKz17T5vVf7tGTvD0FAIAeRM6h3zQnZ92RzflS3p4CzqAlDKhB
qCWsqampvr5eKRRWUFCQnZ2dmpoaHx8fGRlJhcLc3d0dHR1tbGyuX7/+7bff
spW9xr1NrkWkCFW+23/8jc3s008/TQpY3qsLxCEzM1NPT48hDAwMjS4GRAtF
13eXrdiia9CgQVKplP7GQb4X1TEouDMBAADQ7Ul4d4c2l4QKL/Tng+6AaksY
1RtRtoTRFzTMgskTn5mhRm9kyfoNbGbff/993msGRMPa2potDAYPf8ImOV8o
uhave5/N7AsvvCCRSOzt7V1cXLy8vKhEWOfflxUKRYcXNPT3ZfzEDAB40HTu
4qYSYdXV1RUVFYsWLWLLfms2b1OzZU9+dhab2ePHj/NeMCAa+/btYwuDmfMX
qYmuGXNfYTO7fv16smU7ODi4ubn5+voGBQVFRETExcVRibCbN2+WlJTI5fKq
qipyoG1qaqLXm+SrwX4NQI/lTn2D7+BpGq96bgx/7m5zC29nAQCgB3Grqsar
9wSN+Tl25Ue8PQWcQUsY0IhyfOTdu3dJAaj6jI7UhjKZrLi4mAqFqY6P9PHx
cXV1JdWltbW1ubk5s5TT7FdfF6p8HTKKR0+eymb29OnTvNcViMbu3bvZwmDO
4qVqrlbmrVzLZnbDhg3V1dXKnzk6dIXxXi0AAADgQVEbnaiVWvVbW3l7CoA4
dPhxmY6gUuqNpKWlmZiYsJ0nj9l5Cp1RT7r6sylC9OrVq6SkhPeaAXEgVfno
0aPZomv/uStC0XXBL1LfwIDBpo6OzvHjx0n57+LiQkdG3ldvpPPISLydAQB0
AaojIzv0g5Etm6QmNzc3tozay6SPWWSqUFL94hjj8OixY8fegqBud0EqlbIJ
0Onq6Z32CBKKrl2//sEWXf369bt69aqyhfu+IyOpRFhdXR051ra0tCiHINBn
49i1AeiBJG/+WpvXfxXufrw9BQCAHkfxVRttUnSZjStvTwFP0BIGNKJsCSPQ
XzrozQkdhiKXy0tLSwsLC3NyctLS0hISEqKiokJCQm7cuOHu7u7k5GRjY2Nh
YXHy5ElDQ0O2WvWEk49Q/XvU3J7N5qBBg0hhy3tpgTjU1tY+9thjbJHwg4Wj
UHSd8wnX09dnsKmvrx8bG6t8Sdfe3o6WMAAAAN2ef//9d8izr2ssPz2NxrUU
FPF2FgBx6DyCiv6+XFNTo1Aoli1bxnZAXb7hYzXPFp6e8xKb2e+//573ggHR
OHToEFsYPDlrjproen7ha2xm33zzTWtra2dnZzc3N29v78DAwPDwcNXfl4uL
i5UjqBobG5V6I2gJAwB0Afdt4W5qaqqrq6MTEKZNm8aW/bb/+JtQRpUk5g0a
OozNrLu7O+81A6KxevVqtjBYtWmrUHTZp0mHjR7LZvbLL7+0sbFxdHQkYUYl
wiIjI+mU55ycnIKCAqVEWH19vfJiEy1hAPRkGtKy3fVGabztiZj/Fm9PAQCg
J3Lv1i2/EbM0ZumQ6Ut4ewp4gpYwoCW06Lt79y4diUIvTzqPj1QVClOOj5RI
JNevX//ggw/YatXJz85Sc2s9dzljZb1t2zbeiwpE488//2QLgzFTnnTIKBaK
rnd37WUzu3jx4pqaGuXlCRUKu3fvHm5OAAAAdFcK/riizYukvB+h1Aq6A+r1
RiorK0kpxHaMNOrV60pootDpdO8ff7GZHTlyJDmU8l42IA5lZWW9e/dmCAMd
HZ3fnW8IRddXpxhLKhMTkytXrtjb25Py39vbm+qNqEqESaXSznojtERS1kco
kQAADw5lP5hyyrPqyMgjR46wZb9ho8fap0mFkupbnzEOj160aBHvBQOiERIS
whYGffoPuB6dLhRdb37KGF1jxoyxtrZ2cHBwdXX18fHpPDKyuLhYJpNVVVV1
buHGyEgAeiwRc9/QfNujN6oxI4e3pwAA0EMps3bW5lo+/9fzvD0F3EBLGNCS
Di1hyvuTmpqaiooKKhSWnZ2dmpoaHx+vFArz8PCgQmHXr1+/fPnyoEGD2CrW
T777SagK/tM/ysCQRX9bX1+fVLu81xWIw71795566im26Np6+Geh6LKKz+43
kFF/7OrVq8qfPKhQGFrCAAAAdFdu19T5PPa0xsLTf9Tse21tvJ0FQARUW8JU
66P6+npaHz333HOMR9NDgoWPbcrNIU+MYjNrb2/Pe82AaKxbt44tDJa+t1Eo
uhwyikeOn8RmdseOHba2to6Ojp6enlRvpPPvy6p6I8oRVKoSYSiRAAAPjs4t
YfSVa3V1dUFBgampKVv2+/YvC6Gk+ldgrCHTrEA9Pb309HTeCwbEgZwSmQXo
Pjt6TCi6zCJTe5n0YTN75MgRumW7ubmRLTs4ODgyMjI+Pr6zRJhy9gFawgDo
4RRdstamzSD74K+8PQUAgB5NzIqNGnP1jaHP3mtv5+0p4ANawoCWqI6PvHPn
Tnt7e0tLi6rKOhUKo+MjSS1JKkpSV1KhMCcnJ1JvWllZbd++na1iHTR0mE1y
vlAtvH7HHjazS5ZAJrH7EBAQwBYG/QY+ZhGbKfpj+YkTJyoUCvqrh/IVPMZH
AgAA6JYkf/SlNpeEFZ4BvD0FQBxUf1zuPDLyl19+YTtADhkx0jalQOhc+t4X
jAK2L7/8Mu8FA6IRHR3NFga9+/S9FpEiujzyE088QSp9OjLyxo0bQUFBdGRk
cnJyZmYmHRkpk8mUIyPpexmMjAQAdA2dW7iVIyOpRBjzRIO5y1cLZVTy9+Lr
K9jMfv7557zXDIjG2bNn2cJg5IRJ9ulFQtE1ZwnjaPLFixfTfjDlyMgOLdyd
R0aqXmYSeK8oAKCrudvUfGPYTI1XPb5Dpt9paOTtLAAA9GhqIuO1uZxP3fYN
b08BH9ASBrSkQ0tYh4fwCoWirKyssLAwNzc3PT09MTExOjo6NDTUz8/P09PT
2dnZzs5OIpGYmZnNnDmTrW5dvuFjoVrYOiF34ODH2cwS33gvLRCNN954gzG6
PtgsFF2OmSVjpjzJZvbAgQPKV3UdfvjgvVQAAACAaNQnprnrjtRYckYtfpe3
pwCIxn1HUFG9EalUOnToULbT474zl4UOpVdCE4xZZwWS6oz3ggFxIIE3a9Ys
tuja8u0PQtFlEZPRp39/NrPffvutra0tbQkLCAgICQmheiOpqanZ2dlUb4SO
oOqsN4KWMADAg6ZDSxh939rY2Ejft0ZHRxsYGDCkPl09vTNeIUJJ9UdLJ7aM
OnDgwJqaGt5rBsSBHAuZBeiOXLMViq7fnW+w2SSh/scff9jb25Mt28PD48aN
G2TLjoqKolt2Tk5OYWFhaWlpRUUFCcKGhgZysu3wvhUtYQD0QNK2H9SmwaDc
3oO3pwAAAP6TtuNbjRnbs9eE9opK3p4CDqAlDPxX0ALw3r17pBjs8NuHcnwk
FQpLSEhQHR9J6k1SdVpYWPzwww9spauhkdGloDihinjP7+fZzE6YMOH27du8
1xWIQ0FBgaGhIUMY6Onrn/UOFf02r1+/fnl5eXR8JH77AAAA0C0h21nYnJUa
600PgzFNOTd5OwuACAjpjShfymzZsoXt6Dj71dfV6I3MX/Umm9lPPvmE95oB
0bh8+TJbGAwfM84utVAouuatXMtm9pVXXqF6I15eXqTwDw0Nve/IyOrqaqXe
CF7KAAC6EjUt3BUVFa+99hpb9lu/Y49QRnXIKB479Wk2s+fOneO9YEA0du7c
yRYGL72+Us2BcOpzs9nMfvTRR2TLdnFxoRJhGkdGUlVP8uGQEy+uMQHomTTl
3PTQH63xtif8hVXIDwAA8DDQUlisTd6OWfYBb08BB9ASBv4rVFvCOk9IKS8v
LyoqysvLy8jISEpKiomJCQsL8/f39/LycnV1dXR0tLKysrCwWLaMUeD65WWr
1Eg5TXxmBpvZn3/+mfe6AtE4ePAgWxg8O2+hmiuXxeveZzP71ltvKZ/XYUIK
AACA7kfRRUttHo1mf3eCt6cAiIOQ3khtbW1VVVVCQoKRkRHDoVFHR+eUW4DQ
WfSYnSfbWbRv376kTOO9ZkAcmpqamAXovr14XSi6TnsE6erqMtjU19f//fff
qd6It7e3n59feHh4dHR0Z72R6urq++qNoCACADxolC1h9A6ztbVVKRF29epV
tozad8BAi9hMoaT62dFjbGanTp1K/OS9YEAcyCZIdkmGMNA3MLxwI0Iouj49
zDia/LHHHrt+/bqdnZ2bm5uXlxfZskNDQ8mWnZiYmJ6enpubK5VKy8rKyKGx
pqamvr5edctGSxgAPZaoV9/RfNujO7I+KZ23pwAAAP4v+ccvaHNR35CWzdtT
0NWgJQz8V3R+FE8qROWPIHR8JKkileMjqVAYHR9Jqk46PvLs2bO9evViq2G/
uWAmVBf/auvBZrNfv374oaTb8E9+KDn4p7lQdP0VGGtgyPjrXmhoKBUKI18K
+V46dIXhRgUAAMCjy52GRt/B0zSWmTeGP3e3uYW3swCIA30jI6Q3smrVKraD
6NpPdqh5/DJp+kw2s7/99hvvBQOi8fXXX7OFwayFS9Q8fpn24jw2s++//75S
b4SOjIyJiUlISFDVG1EdGQm9EQBAV6K8wKT9YFTVU9nCXVZWNnHiRLbst+f3
80IZ1TIuq/8gxlmBN27c4L1mQDSWLl3KFgZvb/tCKLpsU26aDhvOZnbnzp2q
Ldx0ZKRyy1Zt4VbtByPfjnLL5r2iAICuptTCUZumgoyvvuftKQAAgP/HnYZG
7wFPaszekQve5u0p6GrQEgb+K1RbwuilirIljD6yk8lkVCgsMzMzOTmZCoUF
BAT4+Ph4eHiQ8lMikZibmzOPUxk79Wk1t9mL3nyHzezGjRt5Ly0QjevXr7OF
wfCx49WMU/lo33dsZufOnVtbW6tsCaOP7NASBgAAoBuQ+ul+bS4JZU7evD0F
QDSULWGd9UasrKzYjou9+/Yzj0oTOoV+/sspNrPjx48nTvJeMCAOhYWFbAJ0
evr6Z7xChKJr588n2aKrf//+ZmZmSr2RwMDA0NDQuLi4pKQkVb2RiooKpWYy
9EYAAF1Jh5Yw5ZiD2traysrK/fv3s2W/0ZOmOGQUCyXVlR9tZTO7Zs0a3gsG
RIPsjGxhMMB0iFV8jmB0bfyEzezMmTPJGdXR0dHV1dXX1zcgICAsLCwmJoZs
2RkZGXl5eUVFRUqJsA5jDtASBkDP5G5rm9/I5zVe9fg89vTt2jrezgIAAPj/
KLdz1+a6vviyhLenoEtBSxhgQOhehY6PJFVk5/GRpN4kVScpip2cnCwtLc3M
zB5//HG2SvbDvf8Sqo6vhCYY9+7NYFNXV5e4yntdgTiQ4HzuuefYomvj3u+E
okuSlP/YEMagPXPmDL1XaWn5P+ydd3SU1fb335CQkAChN6WICFIvgqCCgCJV
QKWpICIqoNKugMhFBCwUC02lg5A6SWbSO6mT3pNJJr1Mkklvk14gqOs97++s
NWvehGdmfuc+5IHk+1n8cV3rrr12ztpzzv6eZ5+9m+/du4d7FQAAAN2ABnmG
u+FYnQIzfNEGoT0FgB+oCFI/jenQb6SkpGTatGlsueKe0+e5UlDb+CzmFNTT
01PoNQO8sXr1arYwePuTz7miyyFZMXLsODazBw4c6DwyMikp6aH9RhobG9Fv
BADQZajf36nvLTu8Zk1PTx8wYADb7veDpYRrU73kE2bUuzeDzd69e+fk5Ai9
bIAf2tvbJ02axBZdX/7yB1d03ZTGGffpw2b2zJkztISbZIa0hDsyMrLzyMjO
r1lRwg1AjyV1/3f6lBMUWTsJ7SkAAICO/PPXXwETXtW5hwdOXED0ktDOgq4D
JWGAAS3d1ysrK0tLSwsLC3NyctLT02UyWUxMTFhYWFBQkJ+fH5Gfzs7OIpHI
ysrqyy+/ZFOy5oOHaHkztfWro2xmFyxYIPS6At6IjIxkCwOz/uZ3IpK5ouvo
NUs2s2PGjCG/C9p9HU/tAAAAdA/CF23QfUloOLZBniG0pwDwQ4eSsA79Rk6c
OMGWKD41foJYXsCVf67fuZfN7NKlS4VeMMAbgYGBbGHQf+Agq+hUruhat3MP
m9lnn322Q7+RiIgIIvyTk5Mf2m+EjoyECAIAdA2aJWHqKc+0JIwc2WRr2rBh
A9vu98b697l2VPJv9qI32MwePnxY6DUDvPHzzz+zhcGE6f9yTFNyRdfCNWvZ
zK5atUokEonFYg8PDx8fn+DgYNoiLCkpKS0tjR7ZpaWlJJWtra1Vl4R1OLJx
agPQo2jOK/AwHq/ztidk9krUEgAAwONJubufPpW9Gd/+IrSnoOtASRhgRvN2
RXNmClGRJSUlRFHm5OQQdUmrwojeJKqTjo+USCR2dnaWlpbz5s1j07NLNmzi
0sj2stzhT49hM2tjYyP0ogLe+PDDD9nCYOnGzVqu+CbNnM1mdt++fSqVSj0z
BbcrAAAAnmiUdxz0kZZph04K7SkAPKD+skzlT+d+I9nZ2UOGDGHLEo/dtOHK
PK8FRPU2ZpoVaGhIhJjQywb4gUiG6dOns0XXrpNnuaLrdrisj1lfNrM//vhj
h34jRPInJiamp6eT34JmvxFaD4Z+IwCAroSe151LuOloA6lU2qtXL4atz6i3
MTmXuTZVcpqz7ajDhw8n6YTQawb4geSEzA3oTotceX+g2qdPnytXrjg5OZEj
W7OEW5+RkTivAeixRK/aqs9tjyoaM3cAAODxJf69L/SZ//ugsUloT0EXgZIw
wEyH2ZGtra1EOdbV1VVXV5eVlSmVyry8vIyMjOTk5NjYWCI5Q0JC7t696+Xl
RaSoWCy2tLQ8c+YM2z2MoZHRZd8wLqV85PJtNqU8ZswY8lcIva6AH4qLi81Y
p4iec/Hjiq5fJF5s0UWcSUtLo2NTWlpa8E0EAADAk8uDpua7T72oU1f6DvtX
e1290M4CwANaSsJov5EPPviALUVcuGatlscILy9dyWb23//+t9BrBnjjt99+
YwuDcc9PkaQWckXXS0tWsJldtmwZ7Tfi7u7u7e0dFBRElH58fLxMJiPyPycn
Jz8/v6SkRLPfSOcWYZA/AIBHh2ZJGG0Rpr6uLC8vX7hwIdvut/Wro1w7qjgl
f/SEiWxm79y5I/SCAd745JNP2MLg9bXvakkIJ0z7F5vZHTt2kCPb2dnZzc3N
z8+PHNmRkZGxsbHkyE5PTydHdmFhIW0RRqdG0utKlIQB0JMpcXDXpx4sZfdR
oT0FAACgjfqkVH3288QP9wntKegiUBIGmOkwPrKtrU39WaTz+Mi4uLioqKjO
4yPXrmVsfP3i60u1iOVpLzH2H/v222+FXlfAGydPnmQLg2lzX9ESXau3bmcz
++abb3Z4dtfe3k6vWf5Gm2UAAABPDvJ/H9dHVBbbOgvtKQD8oP64TCAp3L17
92iHZCp8IiIijIyMGJJDQyOjSz6c71x+sJSw5ZyDBw8mjgm9ZoAfamtrmRvQ
fW8h5oquX5182GwaGxv/8ccfmiMjw8PDo6OjieSXy+W5ublaRkbi4zIA4FGj
HvGsbhFG68HolGeyNTEX2Q4aNkKUkM21qX78H8bh0bNmzcJ1ULeBHIVsD59N
TE1vBMdxRde2w8fZomvEiBE2NjYSiURzZGRCQkJycnJaWlpOTg45stUl3PT5
aocjW+gVBQB0NX/duxfw7HydVz3eA6bcq6wW2lkAAAA6SPv6lM4t3aP3My2F
xUJ7CroClIQBZjqUhNEvI0RC0uEppaWltFFYZmZmSkoKkZwxMTFSqTQgIIBI
UVdXV3t7e1tb28uXL/fr149N2x44d5lLL59z8WOT4aampkVFRUIvLeCH1tbW
sWPHskXXwQtXuaLrz9DEPkz9xwgk/uvq6ujsSNooDCVhAAAAniwaM3OJWtSp
KENfXoPvCKDboKXfSEVFxZIlS9gyw037DnElnJLUwmcmT2Uze/XqVaEXDPDG
F198wRYGr775lpZHLs/PmsNmdtu2bUTF0xFUmv1GiORPT09XKBQd+o2gJAwA
0JVoloS1t7erLyrpka1UKseNG8e2+x25fJtrR7WITOlrzjgrMCwsTOg1A7yx
aNEitjDYsv8/XNFlG581cOgwNrMHDhwQi8XkyPby8rp7925ISEhERAQtCcvI
yMjLyyO/iLKyMvLToBMNOlxU4rwGoAeSfuSMPq//Cm+KhPYUAACAbtpKyz1N
ntW5q8dt/ExoT0FXgJIw8F+irgrrfNlSXl5eVFSkHh9JVGeH8ZEODg6Wlpa7
du1i07ajJ0zUMgjjzS0fs5nduHGj0IsKeMPR0ZEtDIY9NdouKYcrunaeOM1m
dvbs2erLFs3xkQR8HwEAAPBEELl0k+5Lwl5j6hJShPYUAB7o8HH5/v37JIVr
ampStwi7fv06W1poPmiwdWw679nmtGnTiKtCLxvgh/T0dLYGdL2NTa76R3JG
1/FTbNE1ZMgQKyurh46MzMzMzM3NVSqVtEUY+XXQFmHq78t0ZKTQKwoA6ObQ
Em56RUnHGdAWYTU1NWRr2rdvH9vuN3HGC1qKbJe/9yGb2c2bNwu9YIA3RCIR
WxgMHfW0luvHpe8yjiZ/5ZVXOoyMjIqKiouLk8vldMrzQ0u41ec1rigB6IG0
KEs8TZ/TedsTPH3JP9CbAADwhJB/2UKfWt8yFx+hPQWPHJSEgf+SDiVh6pbs
9L6luLg4Pz8/KyuLSE6ZTEbkZ1hYGJGi3t7eLi4uEonE0tLy9u3bo0ePZlO4
7+85yKWa70Qkm/U3ZzMbEREh9LoC3li4cCFjdO39iiu67GV5w0cz9h/7+eef
O9+3oCQMAADAE0GxyEUfISnfd1xoTwHgh84lYSSFI4lcXV0d0TslJSXPPfcc
W06opSetVUya+aDBbGYDAgKEXjPAG8uWLWMLg/d2H+CKLruknCEjR7GZ3bt3
L+034unp6evrK5VKw8PDab+R7OxshUJB5H9paWlVVZX6CQxGUAEAuhLNkrAO
XT1TU1P79u3Ltvv97ODJtalecAtgHlKgVCqFXjDAD+SwY25Ad/iPW1zRdcUv
wqh3bwabBgYGv/76q729vaurq4eHB0kOyZEdExNDjuy0tLSsrCzaIowe2eqp
kZol3LiiBKAHErd+hz63PdUhUUJ7CgAAQF8etLT6Dp+pe9jH3NVCewoeOSgJ
A/8l6vGR9CsJUcHq8ZGajcKI3iSqk46PDAkJCQwMpOMjHRwcbG1tDx8+zCac
+5oPsIySc2nnHccYnz+/+OKLeMLcbUhMTGS7oDMxNb0pjeOKrv9c+pMtukaO
HKlUKjE+EgAAwBPHX62t/mNf0qkifQZPv19TK7SzAPBDh5GRROzQejDaIuzQ
oUNsCeEzk6c6pim58szVW7ezmV23bp3QCwZ4w9nZmS0MBg0bYRufxRVdq7Z8
wmaWaGQbGxs6MvLu3btE0UdERNCRkUTp05GRZWVlVVVVnUdG4v0LAOBRo1nC
TXaeDlMMyO705ptvsu1+b275WEuLsBkvv8pm9vvvvxd6zQBvnDhxgi0Mprz4
kpbomvvGcjazJCF0cHB46MhIWsJdVFRUXl6OkZEAADVlrr761IPJth8S2lMA
AAD/O8o9A/TZ4fMu3hLaU/BoQUkY+C/pUBJGb11oozCVSqVuFEYkZ3p6elJS
UlxcHC0JI7LUzc2NSFSRSHTnzp1Fixax6dwFq97m0s7ilPynxk9gM3v9+nWh
lxbwxmeffcYWBgvXrNVyOfPyMsYbxR07dtTW1jY0NKhf4aEkDAAAwONP2ten
9JGQytv2QnsKAG9o9huhj19oSVh1dXVGRoa5OWNT4pPWTlwZ5h/eIYZMswKN
jY3z8vKEXjDAD/fv32duQLf/7GWu6LoRFGtsYsJg08DA4MyZM3Z2di4uLu7u
7pr9RlJTUzMzM4nkVyqVRP6Tn0aHfiMoCQMAdAEPLQkjRzZ9r3r37l22HdXE
1PRWSDzXpnrotxtsZkePHk3cE3rNAD+UlJSYmZkxhAE5W886+XJF11cXrrFF
V9++fa9evSqRSMiR7e3t7efnFxoaGhkZmZSUlJKSkpubW1BQUFxcTEvC6uvr
O79XxXkNQE/j7/b2wOcX6bzq8eo7sa20XGhnAQAA/K8Jnr5E5ybvN2bu3/fv
C+0peISgJAzwgroqjD6f7/AWT6lU5ufn5+Tk0PGRRIcSNUo0qZeXl5OTk1gs
trKyOnv2rBHTtw+ioC+6B3Ip6GM3bNgU9IgRI8ifIPS6An6orKxk/mB3xt6d
c0CAO+OAABMTk6SkJM1vJffv38f4SAAAAI8zzXkFnibP6tSP0lkr/kGFM+gW
cPUbUalUNTU15eXla9euZUsvl27crOXRwayFi9nMHjlyROg1A7xx5swZtjCY
+K9ZWhrQvfrmW2xm16xZY29v7+joqB4ZGRYWRvuN0PlTxcXFRPiTn0ZdXZ26
RZhmPZjQKwoA6OZodvWkJdx0ZGRVVRXZnebMmcO2++04doprR7WX5Q4fPZbN
rIODg9ALBnjjvffeYwuDFZu2ckWXJLVwzHOT2Mzu3bu3w8jI6Ojo+Ph4WsJd
UFBQVFREu3qqryU7THnGqQ1ATyPzu/P6vP5TXLojtKcAAABYqAoM12efT93/
ndCegkcISsIAL2iWhBEV2draShuF1dTU0EZhhYWFeXl5RH4mJycTKRoeHh4Y
GHj37l0iUR0dHa2trS0tLd999102tTvj5VcfRZ/tAwcOCL2ugDfOnz/PFgYT
Z7yg5avK+p172cy+9dZbKpWKPsdra2u7d+8ens8DAAB4nIlZs023eDQYrYqM
F9pTAPihc0mYuhNydXV1UFCQgYEBQxLY29jkemAMV275zVULttxy5MiReM/S
bSAKmvk9y0/2HlzRdeTKHTabpqamly9f1t5vpLS0lLitFjj0+3J7ezv5+aDf
CACgC9Ds6tna2trc3ExbhFVVVf38889su9+wp0bby3K5NtXNX37NZnb+/PlC
rxbgjaioKLYwMOvX/3a4jDO6/s04mvzpp5+2sbFxcHBwc3Pz8vIKDAwMCQmJ
i4sjR3Z6enp2drZSqSwuLu5wZNMWYeojG6c2AD2KttJyr36TdN72BE5a+Hd7
u9DOAgAAYCTp0690d4PsN+l+Ta3QnoJHBUrCAC+ox0fS6xfN8ZH0EX1RUVFB
QUFWVlZaWlpCQkJMTAwdH+nh4eHq6mpvb29ra3v9+vUBAwawad7dJ89x6ej/
ZvZKbm6u0EsL+OH+/fsTJ05ki649pzijyzJK3tecMWhJzNPxkfQGhnhIb2BQ
GAYAAOBxo9TZR5/HRLKdXwvtKQC80bnfCB0ZWVlZWVZWNn/+fLYMcNvXx7gS
S4dkBfPUe0tLS6EXDPDGRx99xBYGb6x7T8tTqfFTprOZ/eyzz3T2G6EjI4n8
79BvBC3CAACPms4l3Jr1YAqFYuTIkWy739e/3+TaUW+FJPRhnRVI9k+h1wzw
Awm8uXPnskXXp9/8wBVdVtGp/Vivx48cOSIWi52cnLy8vNQl3DKZTC6X5+Tk
5Ofnl5SUkDyWHNkkp1VPLqDnNUq4AeiZxL7zqT63PZV+IUJ7CgAAgJ2mrDz3
XmN07vax63YI7Sl4VKAkDPCCuiSMSMj29vb79++3tbWpL2EqKyuJ5FQqlbm5
uZmZmUSKxsfHE1kaHBzs7e3t7u5O5KpIJLK0tNyxYweb5h0+eqxDsoJLTa/d
vovN7Ntvvy300gLeIMHGFgaDho2wicvkiq59P11kMzt16tSamhqUhAEAAHjM
+evevYAJr+rUjN7mk9sqqoR2FgDe6NxvpL6+nkibioqKixcZ07/Bw0eIEnO4
ssptXx9jMztnzhykjt2GxMREttn0fczMboXEc0XXR4cYo2vkyJGd+43ExsYS
PzX7jajnTz2034jQiwoA6M6oS8LIkU02n7a2NlrCrVKpKisrd+7cybb7zX1j
uZYi29fe3sBmdvv27UIvGOCNW7dusYXBqHHjtVxiL1qzjs3sokWLrK2tHR0d
XV1d7969S47s8PDw6Ojo5OTk1NTUvLy8wsLC0tJS8ruoqamhLcJIiqsu4caR
DUAPpCY0Wp96sIQt+4T2FAAAwH9L1g8X9JkA0piJVjndE5SEAR7RvIdRV4XR
RmFEbxLVWVBQkJubK5fLZTIZHR8ZEBDg6+urOT5y+nTGx8trt+/ifGAVk2Y+
eAibWR8fH6HXFfDG8uWMU0TX7tjNFV1iecHoCYz9x7777jvaqr2xsZE+pacl
YfQTpNCrBQAAAPw/Mo+f1eeSMP+qldCeAsAPXP1GiKih/UZGjx7Nlvt9c9WC
K6W8E5Fs1p9xVmBkZKTQawZ4Y8GCBWxhsPWro1zRZROXySyHDx061LnfCB0Z
qdlvpMP8KXxcBgB0AZrnNX2dqh5YQFuExcfHm5iYMGx9BgYG5139uTbVnx08
2XbU/v37l5eXC71sgB9IpI0aNYotEo5es+SKrt89g9kqww0NDS9evKju6klL
uGNiYtQl3IWFhUVFRZWVlZ1HRqq7euLUBqBHQU7Q4BlLdV71eJo+11JYLLSz
AAAA/lvu19TqMyk4euWHQnsKHgkoCQM88tCSsIaGBiI2q6qqysvLifxUKBRE
iqakpMTGxkZGRgYHB/v7+7u5uTk7O4tEIisrq2+//ZZNUPcxM/szNJFLU+85
dY7N7NSpU8mfI/TSAn7IyMgwYpoiatTb+IpfBFd0nfhTxBZdQ4YMyc/Pr6ur
Iz8TOmBF/fUEJWEAAAAeB1qUJV5mz+lUi8HT3vgb+RLoLnD1G6murq6oqNiz
Zw9b4jdp5mwt/UaWbtzMZnbLli1CLxjgDRsbG7YwGP70GHtZLld0Ldmwic3s
/Pnz9ew3UltbW19fTxQN+o0AALoMrpIw2iKMHNlvv/022+6n5c0p+UcOdDaz
Z8+eFXrNAG8cOnSILQxefH2pluj617yFbGbff/99kUgkFovd3d29vb2Dg4ND
Q0MTEhLIkZ2VlUWObKVSWVJSUlNTQy8hm5ub6dNUza6eOLUB6FHk/HRZn9d/
ueeuC+0pAAAAflBaSvTZ+YusnYT2FPAPSsIA79ALGc3xkfSBXnV1dWlpaVFR
keb4yLCwMKlUSsdHSiQSOzs7CwuLZcuWsenfuYs5+7pLUgvHT57GZvbChQtC
Lyrgjf379zNGl9apAYveWs9mdsuWLSqVqq6uTv1AT90rDLcxAAAABCdmzTZ9
pGK1NEpoTwHgAe39RsrLy5OSkszMzNiyvl8kXlyZ5DkXP7aOEMSZ4mI82e4m
tLa2jhkzhi26/nPpT67ouuwbZsj0KIbE5Pnz5zv3G0lISEhLS8vKyiooKFD3
G6EjI8mf0KHfiNCLCgDoztDHdOqunm1tbWQvIkd2dXU12ZqsrKzYdlSz/uYW
kSlcm+q+nxiHR0+YMIE4KfSaAX5QKBRsDeh6GRr+7hnMFV17z1xgi64BAwbc
unWLlnD7+voGBARolnDn5uaSI7usrIxOeSa/EXU9GM5rAHos9yqrvQdM0XnV
EzB+3l/37gntLAAAAH74u73df+xL+jz9Rn7Y/UBJGOAdslHQO5n29nYiMFta
WuidjEqlIvKzpKSECOfs7GwiSxMSEiIiIkJCQohc9fT0dHJyEovFlpaWFy5c
MDY2ZlPBWj61/GjlyGZz0KBBxHmh1xXwQ21t7ZAhjGNTvr/jwPunFkNDw9jY
WBJg9I0eSsIAAAA8PlQFhOlTD5b40ZdCewoAP2jvN0K0zIoVK9jSyNVbt2t5
XDBt7iu6TTyMkydPCr1mgDeY22VPe2meluh68fWlbGY3bNhgZ2fXod9IfHy8
TCbLzMzMzc3V7DdCJL9ay2j2GxF6UQEA3Rl1SdiDBw/o9SPt6llZWUmO7OnT
p7PtfntOnePaUUUJ2YOHj2Az6+HhIfSCAd5Ys2YNWxi8/fFnXNHlkKwYOXYc
m9kDBw6IRCJnZ2c3Nzd/f39yZEdGRsbGxsrl8oyMDIVCUVhYWFFRUV1d3aFF
GErCAOixxL/3hT63PeUe/kJ7CgAAgE9KHNz12f+zT/4mtKeAZ1ASBh4FDx0f
SYetqMdHpqWlqcdHBgUF3b17l+hWJycnGxsbKyurrVu3sqlg7QNZFqx+h83s
559/LvSiAt64fv06WxiMmzRZLC/giq7N/2ZsGr9kyRL1tQz5vdy7dw/jIwEA
AAjO3+3tQZNf06kQvfpObC0pE9pZAPhBe78RT09PtmRP+4D7gxeuspkdO3Zs
a2ur0GsG+KGoqMjU1JQhDHr16nXOxY8rug6cv8IWXf369bt586azs3OHfiMy
mUwul9N+I5ojI0kokt8L+oMBALoGzRJucl7fu3dPs4S7vLz8xIkTbLvfU+Mn
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
xsbGDKldr169LrgHcGWMZ+zd2TJGc3Nz4pXQCwb4gYQZcwO6YzdsuKLronsg
29MqIyOj3377zd7e3tXV1cPDIygoSCqVRkdHx8fHa+83op4/Bc0CAHikdC4J
a2pqoiXcVVVV165dY9tRzQcNto5N59pUPzvBODx62rRpZHsUes0AP6Snp7M1
oOttbHLVP5IrunaeOM0WXUOGDLl9+7aTk5OLi4uPj4+/v39YWFhUVFRSUlJK
Sgot4S4tLa2oqFCpVOoSbpSEAdCTqUuUu/cao/O2J+atj4X2FAAAwCPnQWOT
Pn0jwxesE9pTwA8k+f/hhx+e/h/I/4AWAPyirgqjn1eI9mxubqbjI8vKykpK
Suj4SLlcLpPJoqOjw8PD/fz8vL29nZ2dHR0dra2tL1++bMo0TuX/aJ3S8rPY
k81m//79y8sxPLeb0NTUNGrUKLZIOHL5Nld03QiKNWbqP2ZgYBASElJTU9PQ
0EB+KRgfCQAAoOvJPXtNnydCOT9dFtpTAPhB8+MyfcnS0tJCssTa2lqSlRHN
snr1arZ0cf3OvVzpomOacuKMF9jMnj9/Xug1A7xx4MABtjCYu3i5licqM15+
lc3s5s2b7ezsxGKxp6enj48P0SZhYWHx8fFErWdmZhLlrlQqiYqvrq4mP5DG
xkZNzUKEv9DLCQDoztDzmquEmw4jmDBhAtvud+D8Fa4d1SomzXzQYDaz/v7+
Qi8b4I3ly5ezhcG7u/dzRZddUs6QkYzXkl9++aWDg4Obm5uHh0dAQECHEu6C
ggLyiyC/C3JkdyjhVldxC72iAICuJmze2zqvejyMxjVm5AjtKQAAgK6g1NFL
n68ABdeshfYUAPC406EkrK2tjShQIkVra2srKytLS0sLCwvz8vKIXE1OTo6J
iYmIiCAy1tfX19XV1dnZ2cbGxsrK6tNPP2VTx89MnuqYpuTS3Us2bGIz++GH
Hwq9roA3rK2t2cJg1LjxDskKruj6+D8n2MzOnz9ffV1Dfi94cQ8AAKAruVdV
4z1wqk4lGDB+3l9tbUI7CwA/dO430tzc3NDQQPuNWFhYsCV1fc0HWEbJuXLF
PafPs5mdOHEicVLoNQP8kJuby9aAztDI6A/vEM7oOnWOLboGDhz4559/Ojo6
0n4jfn5+RJ6r+43k5OTk5+cTCV9eXk77jdDOxpr9RoReUQBAd0azJIyWcKuf
ndbW1pKt6fDhw2y7n/bLwzUf7WAzu3btWqHXDPAGORnZwmDQsBG28Vlc0bXq
Q8Yb79mzZ9MSbnd3dy8vr8DAwJCQkNjY2MTExPT09OzsbKVSWVxcXFlZSY7s
xsbGpqamtrY28qvBlGcAeiz5Vyz1+e6fefys0J4CAADoIoi4Cpy0UPeHgAmv
/vPXX0I7CwB4rFFf19CqsHv37rW2thIpSpu6E2VKJGp+fn5mZmZqamp8fHx0
dLRUKg0ICPDw8KDjI0Ui0c2bN0eOHMmmkbd+dZRLd98KSehj1pfBpoGBAXFV
6KUF/EBCdO7cuYzRdejbR/HQ7+LFi3V1dbRRGMZHAgAA6EoStuzT55Kw3N1P
aE8B4A1NtUIfsNB+I1VVVaWlpVOmTGHL6PaeucCVKNrEZQ4axjgr0MvLS+gF
A7yxatUqtjBYu30XV3Q5JCuGjx7LZvaLL74g6tvFxcXd3d3f3z84OJjI87i4
OLlcnpGRoVAoCgsLab8RqlbIj4X8ZNRqBToFAPBI6VzC3dLS0tjYqFKpampq
0tLSBgwYwLb7/WjtyLWp/uEdYsg0K9DY2Dg3N1foNQP8QOJt4sSJbNH15a+X
uKLrRnAc24gBwqlTp8RisaOjo7e3t6+vb0hISGRkZGJiYnJycnZ2Njmyi4uL
SR5LfhrkyG5qaiI/FoyMBKAn097Q6Dt8ps6rnrsjZz1obBLaWQAAAF1HhXeQ
Pt8C0o+cEdpTAMDjjmZVmPrdfWNjY21tbXV1dUlJiVKpzM3NzczMlMlk8fHx
oaGhwcHBPj4+Xl5eEonE3t7e0tLy4MGDbBrZfNBgm7gMLvX90aFjbGbnz58v
9LoC3oiOjjYwMGAIA7N+/W+Hy7ii68C5y2zRNXr06LKyss6XNugVBgAA4JFS
G5PkbqBbA8a+86nQngLAD51HUHXoN3L8+HHGdG7CRLG8gCtLXLtjN5vZFStW
CL1mgDf8/f3ZwsB88BDr2HTO6Nq+i83sjBkz1P1GvL29iSQnwpzIcz37jUCn
AAAeNeqSMPrglGxB9MFpdXV1RUXFunXr2Ha/JRs2ce2o5N/sRW+wmT1y5IjQ
CwZ446effmILg4kzXtDSgG7BqrfZzK5Zs8bW1tbZ2dnNze3u3bsBAQEREREx
MTHJycmpqal5eXmFhYWlpaXkyCYJLfmNoIQbACDb+bU+X/xLnX2E9hQAAEBX
k/DBXp0HhPfAqe119UJ7CgB43FGPj+zQ2l2lUpWXlxOVmp+fn5OTI5fLZTJZ
VFRUWFiYn5+fj4+Pi4uLo6OjtbW1hYXFK6+8wqaU31j3Hpf6tpfljhgzjs2s
lZWV0OsKeGPr1q2M0bX+fS2Xh7MWLmYzu2/fvpqamoaGBvqpBeMjAQAAPGpI
rhYyZ5VOAehhPL4pJ19oZwHgBy39RqqrqzMzMwcPHsyWy534U8SVH17xizDq
zTIr0MjIKCMjQ+g1A/xAcvupU6eyRdfuk+e4ouvP0MQ+ZmZsZr///nuJROLk
5ERHRoaGhkZERCQlJSUnJ2dlZeXl5RUXF5eVlXXuNwKdAgB41HCVcNOunhUV
FcHBwb169WLY+nobm1wLiObaVI9es2TbUUeMGEHSCaGXDfADCTBzc3O2SDhj
784VXd9cZRxNbmpqev36dQcHBzc3N09Pz6CgIKlUGh0dHR8fn5qaStLXgoKC
oqKiyspKcmTX19eTUCS/F9wrAtCTaUjNdDccq/O2J3zBOqE9BQAAIAD1KRn6
lA0nbN4jtKcAgCcAentDr240B7LQ13yFhYUKhSIjI0Mul8fFxUVFRRFJGxAQ
4O7u7uLiYmdnZ2Njc/r0aUNDQwax3MvQ8JJPGJcGP3LlDpsGHz16dEtLi9Dr
CvihpKSkb1/GKaJnnXy5outXJx+26DI1NU1NTX3oQBaC0KsFAACgG6K4dEcf
9Zf1/XmhPQWAN+hHMapQOvcb2bRpE1sit+it9VqeDLy0ZAWb2f379wu9YIA3
Lly4wBYG4ydPk6QWckXX3DeWs5ldsWIFUdya/UaIJI+NjU1JSdHZb4SOoBJ6
RQEA3RnNEm761LSlpaWpqamurk6lUpWVlc2fP59t9/vo0DGuHVWckv/U+Als
Zi0sLIReM8Ab27ZtYwuDxeve1ZIQjp8ync3sjh077O3tJRKJl5eXr6+vVCql
XT1lMllmZmZubm5RURE5skk2S45sktk2NzeTLJf8atQjI1ESBkBPI+K1jbpv
e3qNqU9OF9pTAAAAwpDxzU+6TwrDsc2KQqE9BQA8GagbvLe2tjY1NdE3+JWV
lcXFxUqlMjs7Oz09PTExMTY2NiQkhI6P9PT0FIvFdnZ2FhYWzH3gZy96Q4sM
n/Hyq2xmjx49KvSKAt44ffo0WxhMefElLdG15qMdbGZXrFhBP7g0NzeT3wvG
RwIAAHh03FfV+gyZrlP6+Y2e86AZ9fCg+0CL7enH5ba2tpaWFvpohciT8PBw
ttcohkZGl305X6N8f8eBLTMcMmQIyQyFXjDAD0QCDxo0iC0SfrR25IquXyRe
bDaNjY2vXLlib2/v6urq4eERGBgolUqJJE9ISMjIyMjKyqL9RioqKqqrq9Fv
BADQ9XQeGdnU1ESO7JqamqqqqosXL7LtfoOHjxAl5nBtqtsOMw6PfvHFF7Er
dhsSExPZGtCZmJrelMZxRddHh46xRdfIkSMtLCwcHR1dXFxoV8+IiIioqCiZ
TCaXy3NycvLz80tLS8vLy0my0flGESXcAPRAlLft9Xn9l374tNCeAgAAEIy2
8kpP0+d0Hhaxa7cL7SkA4MlAc3yk+k1fTU1NWVlZSUmJQqHIzs5OTk5OSEgg
kjY0NJSOj3RycpJIJFZWVleuXOnfvz+bat5/9jKXEr/gFsAm8E1NTQsLURPb
TWhraxs3jnGK6IFznNF1OyypjxlL/zECiX+VStXY2Eh+LOo3ffjsAgAAgHeS
Pv1Kn0vCMre7QnsKAD88dGSkZr+RxYsZx39v/vchzn4j8oJxkyazmb127ZrQ
awZ44/PPP2cLgwWr39HyFGXSzNlsZj/++OMO/UbCwsISExPpyMjc3FylUknU
OvqNAACEQnNkpObcgaqqKrJBjR07lm33O3LlDteOeici2aw/46zAiIgIoRcM
8MaCBQvYwuDDg99wRZdNXOaAIUPZzB46dMjOzs7FxcXd3T0gICA4ODg6Ojou
Lk4ul2dkZCgUisLCwg4l3JpzB3BeA9DTeNDc4vf0HJ1XPb5DZ7TX1QvtLAAA
ACEpuG6jz9eBUomn0J4CAJ4AOo+PJBK1tra2srKytLSU6Na8vLzU1NTk5OSY
mJioqKjAwEA/Pz86PtLW1tba2pr5/vyp8RPE8gIuPb7qw0/ZzK5fv17oRQW8
4eTkxBYGQ0c9bZfE+bb08+9+YjM7a9asDtc46skseNkHAACAL+qTUt17jdGp
+CLfeE9oTwHgDfXHZXW/kebm5oaGBpVKRbKvq1evsiVvA4YMtYnL4MoJdx4/
xWZ2xowZJAMUes0APxC1y9aAztjE5FpANFd0bf/2JFt0DR069M6dO0QHubq6
+vr6+vv7R0REREdH034jRJ536DfS1NTU0tJC+42o68HwiRkA8EjR7OqpWcJN
tqa9e/ey7X6TZs7WUmS79N0P2Mx+8MEHQq8W4A1bW1u2MBj+9Bh7WS5ndG3c
zGZ23rx5dnZ2YrHY3d3dy8srODiYjoxMSkrKyMjIyclRKpXFxcWVlZX0eSn5
pZAUl/xq0NUTgB6LfO8xfb7vF9u5Cu0pAAAAgfmrre3uqNk6j4yQ2SuF9hQA
8ATQodl7a2srkaj19fU1NTVEsRYVFRUUFGRlZaWlpSUkJNDxkUFBQZ6enm5u
bg4ODiKR6NatW2PGjGHTzu/u3s+lxy0i5X3NB7CZDQsLE3pdAW+89tprbGHw
/p6DXNHlkKwYOZax/9iZM2fq6uoaGhpos3f1yz6UhAEAAOAFkpiFzX9Hp9zz
MBrXmJ4ttLMA8EaHkZGa/UaKi4ufffZZtszt0MXrXAmhVXRq/4GMswKJIBJ6
wQBvLFmyhC0MtMgNUWLO4OEj2Mzu37//of1GiCTPzMzMz89X9xuhqgT9RgAA
XclDu3o2NjbSEu6kpCQzMzO23e9nsSfXpnrOxY9tlABxpqioSOg1A/xAzjvm
BnSHL93iiq4rd8MNjYwYbJKY/OWXXyQSiZOTEx0ZGRoaGhkZSX4FycnJ2dnZ
CoWipKSkrKyscwk3RkYC0DNpylZ49H5G521P6NzVSOkBAAAQKnyD9Skkzj2L
QQYAAB1oloTRy5zm5ubGxkY6PpJIV6VSmZubm5mZSfQsUbVhYWFSqdTX19fL
y4vIXnt7e0tLyyNHjrBJcrP+5haRct6f7c+aNQvKutsgk8nYrv6M+/S5ERTL
FV1Hrtxhi67hw4cXFRWRHwi9zNEcHyn0UgEAAOgOFN4U6aP10o+cEdpTAPhE
sySstbWVSBLau7iiouKrr75iS9vGT5numKbkbEq85RM2s2hK3J1gbko8eMRI
UUI2V3S9ueVjNrMvvviira0tUdmurq4eHh6BgYFEfcfGxiYkJGRkZGRnZxcU
FBCFXllZSdS6uncxkSToNwIA6Bo6j4ykD0urq6vJkb1y5Uq23W/Vh59qaRE2
7aV5bGZ//PFHoRcM8MaxY8fYwmDa3Fe0RNecxcvYzG7YsIEc2bSE28/PjxzZ
UVFR5MhOSUlJTU3Ny8srLCwsLS0lRzZKuAEAlKjlH+i+7TEYXRsnE9pTAAAA
jwvSmct0nh1+T8/56949oT0FADwBECn6119/qT/BtLS01NfXq1SqiooKol7z
8/NzcnLkcnlycnJ0dHRERIS/v7+vry+RvY6OjtbW1paWlsytnF598y0uVS5O
yR89YSKb2WvXUBPbfWAeTrpg1dtarn1eWb6Kzez27dtramoaGhpoy/d79+7R
Kx18ggEAAPBf0t7QeHfECzqF3t2Rs8j/U2hnAeAHzX4j6pGRtN8IybhSU1P7
9+/PlrOdsnXhygN/9wzuxTQr0MTERKFQCL1mgB9IvE2YMIEtug6cv8IVXdcD
Y3obmzDYNDAwOH36tFgsVvcbCQkJCQ8PT0pKSklJIZKcxB6R52VlZeSnoX6i
gn4jAICupHMJN+3qWVFRQTYuth21j5nZn6GJXJvqVxeusZkdO3Ys8VDoBQP8
UFRUxNaArlevXudc/Lii6+AFxtHk/fr1u3XrloODg5ubm6enZ1BQEDmy1SXc
WVlZBQUFxGdawk3vD1HCDUAPp9jWWZ/Xf/J/HxfaUwAAAI8R1SFReh0fe48J
7SkA4AmA6FAtr/wKCwsVCgWRtGlpaXFxcdHR0VKpNCAgwN3d3cXFRSQS2djY
/PLLL0ZMfbYNDAwuuAVwafPjt2zZtPnw4cOJ/0KvK+CHqqqqAQMYp4ieFrly
RddvHkGM/ceMjePj4+krv5aWFvKToR9iMD4SAADAf0nK7qP6qLwSB3ehPQWA
N+hHMapEaEkYUSIky6qpqSFJ4Nq1a9mSwGXvbdHyNOCFBYzvWY4ePSr0ggHe
OHWKsSv18y+8qCW65q9Yw2Z2zZo11tbWTk5Orq6uvr6+/v7+ERERRH3LZDK5
XJ6Xl5efn19WVlZeXk5HUGkOskdJGACga9As4W5paWlqaqqrqyObEtmdZs+e
zbb77Tx+imtHtUvKGf70GDazYrFY6NUCvPHuu++yhcHKD7ZxRZcktZD5JfKe
PXvs7e0lEomXlxc5sqVSaVhYGC3hzsrKys3NLSoqKi0t1SzhplMGUBIGQM/k
r9ZW/3Ev67zq8Rk07V61SmhnAQAAPF7Idn6t8wTxMnvuXmW10J4CAB53uMZH
qlSqysrK4uJipVKZk5OTmZkpk8kSEhJCQ0ODg4O9vb3d3d3FYrGdnd2dO3c2
bdrEpqOnvTRPy436S0tWsJn98ssvhV5XwBsXL15kC4MJ0/+lZWDQhs/3sZld
tWoV+XV0uNihJWG42AEAAMBGQ1qWh9E4nRIv/NW1QnsKAJ906DdC+xXX1tYS
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
v/1Gfh2NjY3Nzc308w19XYvPNwAAAAitxWVefSfqFGtBU17HEx7QzaAlYVRT
0BFUVFOUlpZOmTKFLe/a9/NvXOmcTVzmwKHD2Mx6e3sLvVqAN1avXs0WBmt3
7OaKLntZ3vCnx7CZ/eKLL+zs7IhY9vDwIMJZKpWGhobGx8cTNU1LwoqKiojK
piOooCkAAF1P55Kw+vp6cmRXVVWlp6ebm5uz7X6nbJy5NtXfPYMNjYwYbJqY
mCgUCqEXDPADSRGZG9AdOHeZK7quB8b0NjZhsGlgYHDmzBlyZLu6urq7u/v5
+QUFBUVFRcXGxqamppIjOz8/X6lUVlRUkJ8G+Y00NDRolnCjqycAPZDcX6/q
82k+5+crQnsKAACgm5C49d86zx1v88n3VbVCewoAeAL4559/iIx96HVQeXk5
HR+ZlpYml8s7jI8kqlkkEllZWTG/Iuw/cJB1bDqXrt/29TE2s6+88gou0rsN
JOrYpoia9u33Z2giV3QdvHCVLbqefvpp8qOgLwTpkBf6QhDXQQAAAAixa7fr
c0lYFRgutKcA8Ib647J6ZGRjY6O638g333zDlnSNeW6SJLWQK5dbu30Xm9lV
q1YJvWCAN7y8vNjCYMCQoTZxGVzR9c6nX7CZnTlzpq2trXpkZEBAgGa/EfXI
yIqKCjoyUrPfCNQEAOBRo34W2mFkpLqEe926dWy739J3P+DaUcm/Fxa8xmaW
pBBCrxngjdOnT7OFwaSZs7VE1/wVa9jMrlmzxt7enpZw066etIRbPTKSlnBr
joykkwJQwg1Az+Retcp74FTdA7zGvfxXW5vQzgIAAOgmNKZnuxvoMbD43c+F
9hQA8ASgeSlEP+IQqdvQ0EA/4hAJXFBQQORwWlpaXFxcdHS0VCoNDAwkktnN
zc3BwcHW1vb27dvz5s1j0+CL172r5XX2yLHj2MxaWloKva6AN7Zt28YWBm+s
e0/LxdHsRW+wmd21axf9iNPc3Nza2oqPOAAAACjVwZH61IMlbNkntKcA8ImW
fiPZ2dkDBw5ky7i+u23PlcVduRtu1NuYwWbv3r2zsrKEXjDADyTkJk+ezBZd
e06f54quWyEJJqambGZ//PFHOzs7FxeXDv1GUlJSiJqm/UbKysqIyqYPTGi/
EagJAEDX0LmEu7m5ubGxUaVSVVdX+/v7sz3HMzYxuREUy7WpfnPVgm1HHTVq
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
Pp0LPZHfC4aeEARBXnEe5hU6a46X/6Zm6uL/PHvGerIIojBoStgL640QS+bG
jRswQ6jfwMGm0RkvmxJGvt1/Xe7ZG/iKRCAffPBBYmIi64VH/g9xG2EF6DQ0
Ne/6RvKJ0NbDJ2CCMWjQIAMDA5FIZG9v7+rq6u3tHRgYGBERERcXRwQmMzOT
eLu03khVVRXxgrHeCIIgHY9sCndTUxNR2fSpZllZ2a5du2Cn3xvzF8nVzlsO
HoMN/kJUVFT27NlDzlLWy4kIxcjICLbXQ3RHWcRn88nVB5+tgw373nvvmZqa
0i7P7u7ufn5+RGXTFO6UlJSMjAxa1bO8vLyysrKuro6obEwJQ5DuTObZ60Lu
yrMu3mE9UwRBEASBELFqi1w15z5oxtPGh6xniiBIJ0C2QD1tH0l8auJZ0/aR
hYWFeXl5mZmZqampMTExERER/v7+Pj4+bm5uxEO3trY2MzMzMDAYPXo0zN//
fMduvhiCUUQK+FkZmSHrdUXkExgYOH068LF/G6zasl1u5FOUKBk2eixs/NOn
T1dVVdXW1j58+LCpqenJkydcTxnWK4ogCIK0JGLlZiFBwoqAMNYzRRBFwpn3
XL0R2iC+oqKCmPejRo2CWUEHrukB8sHo9yAobuGnX8CaEwlERUXlp59+Il4M
6+Xv1rz//vuw7ftqz298wmMandFXZxBs2H379llYWMiWCAsNDSWObWJiIvFw
c3JycnNzS0pKpFIpbRlJLHzyk6EWPtYHQxCkvWkdkZNN4SaHVY8ePQBHH9G2
F2zc5armM6Z2sKO1Dfr163ft2jXy57BeWkQORNKGDRsG2+VDN/X5hOqaa4Cy
igpgTGLFXbp0ieaDubm5+fj4BAYGEpXdOoW7dctIWtWT9YoiCNKhPJJWuPaZ
LDfU4z323WePHrGeLIIgCIJAqI6IE3KvEb99P+uZIgjSCeACUARaQ4D41PX1
9VVVVZWVlcXFxfn5+WKxOC0tjbjh0dHRwcHB/v7+Hh4eTk5OtFCYsbHxkSNH
YGEEzV5aD4Lj+SIJO47/BRt22rRpGA14lcnNzf3qq69gmysXIZFP8h25Ywwb
X0dHJy8vr3UACi+MEARBXjWkXoFC/Ka4zT+znimCKBKuRBhXb4RYLLTeiFQq
3bdvH8wEmjBtJjgfjPvO27hNmQVsUSSQfv363bhxAy+jmSASiWC7pjN0uFms
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
ExOjo6NDQ0P9/f09PT2dnJxsbGzMzc2NjIzOnDmjrKwMCBGoqqnd9Ajmizzs
v3oPFnnQ1dVtasK7YDjBwcGzZs2CLb5AtAfo7Dhxro13iO39nRM5w2bes2fP
tLQ02j6S3jFhoTAEQZCOIe7bX4X4QSUOHqxniiCKpEU+mGzLSGKrf/PNNzCT
5t0Vq1iZYcK/+4Gx76/+HPYHCkRFRWXPnj3E92G9z68iN27cgK3qqImTRUm5
fNv6zvKPYcMuXrzY1NTUysrK3t7ezc2tdcvIvLy84uLi8vJysqF1dXW0qC/W
G0EQpGNoUdVTNoWbqGypVLpgwQLY6bdh7wGGuvicyHnSzDdhMxfIgAEDbt++
TdaN9R52YrZv3w5b/AUrP2tj98dPmwEbduvWrVwKt4eHh5+fX0hISFRUFE3h
zs7Ozs/PJ3Ys+WnQlpG0qidtGYkp3AjS3Xja0Ogx7E25oR73gdOf1NSyniyC
IAiCdBz+M5fJfx0/fPaz5mbWM0UQ5FVHNiWM60RDnzHSygPFxcV5eXlZWVmp
qanx8fGRkZHBwcE+Pj5coTBTU1MDA4NVq1bBogRzFi1rI/jw+py3YcMeP36c
9dJ2SgoKCjZs2ABbc4Goqqmt3LzdJCqN+SXjig2bYX8CkfbKykpaKEy2fSTe
MSEIgrQfNbFJjsoj5TpBoYu/ZD1TBFEwsilhzc3NsiXCwsLC1NTUAMaMiqrq
NdcA5saYwO9vK5dJb8yGmW0C6d+//82bN/EyWhYiYwMGDICt5wl9S77dvGDj
DhtTXV39+vXr5ubmNjY2Tk5Onp6e/v7+oaGhtERYRkYGVyKM3i/Tir7EUCce
LtYbQRCkA+DywWiJMC6Fu7KyUiqV3rp1C3b69dUZZBqdwVwX/3T2Uv/BQ2B/
gkCmTp3q4+PDehs7JQkJCbCHuuo9etz1jeTb9G8PA1uTDxo0yMDAQCQS2dvb
u7q6ciXC4uLiUlNTxWJxbm4ul8JNfiPEsiUmLqZwI0i3JemnP4S8/is0t2c9
UwRBEATpUCoCwoSoyKTdR1nPFEGQzgF9gUUjV8QNb2pqqqurq6mpqaysLCsr
KywslEgkGRkZSUlJMTExYWFhtFCYs7Ozra2tpaWlsbHx9evXe/UCNnb57cpd
vvjDRVsPJSUlwJg9e/Yk02a9rp0JsumnTp3S1NSEbaJAZi344LpbEPNgJv30
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
3f5hxoiKF9G2PanhK1b85R+54LklZHOg/3jz462GvhdHXvrwnHlkze7evVuX
bwQdAHG+kfT0dMg3AgDAvcBds3piXxbal/Ly8iZNmkS2+x1zZFHXtoyIa1gU
bc3ZL2zbtm3ChAlkH9dEFixYEBUVZWjuoSm3cOFCspa/PfGnoe/lkpg1wnoU
WbMnTpzw8/Pz9/fHIdxCoTA5ORmHcCuVSpVKVVVVhexYnNUT+7KwvoYQbgAY
avzd1RX9yDKjrp6I8U/cqDU1ayIAAAAAAIxTG5tsyu2MYv9vtHsKAMDgQOdG
u337ti4TQmtra1NTU11dXWVlZXl5eWFhYV5enlQqzcjIEAqFsbGxPB4vLCyM
w+H4+Pi4u7vv3r2bzGsxccpUb4nSkD9k0/c/kjW7atWqnr8U/a5jx471d82X
p5566vjx47Q9ZAOKA8uXuquTQPZdsCf7xHPnzq2pqdG50SAkDACA+4/WXGWo
xSyjJ47EF9+DTQ+4/+gl38jZs2fJjIepM2b5SoupGz+MyFVXD9q2Jx1cw6L0
zcjJDz1MNhkYZ9TYcW4p2Ya+1yc/HCBrdsaMGV5eXjjfCDr3xcXFJSQkpKen
Q74RAADuEfR9WWjz6erqQntRc3NzfX092pq2bt1Ktvu99Na71FUtI+KXrbK9
eo228uwv/vrrr7feemv48OFkX9lE3n333cLCwp5zz87OjqzBWY8v8FOUGfpk
L775Nlmza9asYbFYAQEBSGXz+XyBQJCYmJiamiqVSuVyeXFxcVlZmVqtRusC
P2/s6OhAKhtCwgBgaJL702lT7pfLnH1o9xQAAAAAhjpZX+wzqrLDRz92o66B
dk8BABg06HKF3bp1C+dDaG5ubmho0Gq13cpHpqWlJSUlCQQCPp+Py0eyWCwP
Dw/inAnrtnxlyB/iLVFOnPogWbOBgYH6v87Ly+vhh/v34mbGvMd2795N2zFG
B4/oROoOz74KN6d87pNPk33rw4cP19fXt7S0tLe337hx4+bNm/htMlx+AQBw
f5Cy6iPjTsJhM5qzFLR7CgBMop9vBBdV1+UbQXq/uLh46tSpZJbDT7bO1C0f
RsQtIoa21UkHGzt7P9n/BPX5ZBVu3rXfsp8fm5jCl4d/Nfi9UuSjxo4ja/bo
0aNsNpvL5UZERKBzn1AoRGfAzMxMmUyWn5+PzoYVFRXonFhXV9fY2IiWib5V
DJfLAAD0K1hf4xBunb5ua2trbm5GO5JWq0X7lYWFBcHWZ25hYctLoK5tGRFH
tj9t5dnv/Pbbb88++yyZmjMRS0vLAwcOtLS06KYfMgsnTpxI1tpv7n6Gvtc5
bgRxD+3s7HQh3LGxsUhli0QiiUSSk5PTewg3ZPUEgKFGR2lF2Ii5Rr098U+v
Qadi2p0FAAAAgKFOW0FxyLAZRhV3+ofbafcUAIBBQ8+QMF2JnOrq6rKyMpVK
lZubK5PJRCJRSkpKbGysQCAICQkJDAz09vb29PT89ddfzczMCNwXwy2trgnS
DHlF9p6zJfOKzJkz58aNG+inicXiZcuWkTViIqPHjf/m2CmOvNSdH0/bJUYH
O0dnbk45dZ9nX+WUVyDZFx8zZkxBQQFaIGiZoPUC+RAAALifqPQKMOXRqPyH
X2j3FAAYButxbA/jfCNtbW1I19fX1yOT+JtvviEzG15Y9QZ1m4cR8ZOX2F5z
oG110sEzNvWuY3I9Lv2Vt9eTTQxGmD73UU52iaFP9uq7H5A1++qrr6Lznb+/
f1BQUGRkZHR0dHJyclpaGjoMKhSKwsLCkpKSnvlGcO5cCAkDAKC/MRQShk7o
DQ0NGo1m9erVZLvfpu9/pK5tGRF2Rh5tzTlw/PjjjzNmzCD74iYyZcoUZ2dn
rN2IqyQse2NdL5/s8cXPkzW7ZcsWHx8fDocTFhbG4/FwVs+MjAypVJqXl4dU
dnl5eVVVFS4ZqR/CDV4sABiCiNd/ZYq3pz5RRLunAAAAAAD8h/wTF0x5ud+a
d5fkxgAAAIbQT7mPy0c2NjbW1tbi8pFFRUX5+flZWVnp6ekJCQlxcXE8Hi80
NBSXj3Rzc1u3bh2ZB+PFN9/uD8fIgQMHPv/8c7JANRMZZm6+bstXHmkKuClz
CeZRd3sSyOoPPyb79B9++GFDQ0O38pGQKwwAgMHO7Y7OqBkvGD1o8CYtvNnQ
SLuzAMAY/9YDXy53dnYi/a57IoGsXysrKxJbcdiwSyEx1A0eRsTJL4i2vUkH
o28fTnsHzV1ImHv2H3LMkWWoVxeDBWj6EbRpYWFx6dIldL4LDAwMCQkRCATo
3JeWloZWAS4ZqVKpysrKampq6uvrm5ub0ZlRP98IhIQBANDf4GAwfPpGKhvt
P7jKMw7hdnR0JNtRx06c5CnOpa5tGREHli9t5TmgXL58+ZNPPhkzZgzZpzeR
Z5991tXVlSwB3XBLq6vRKYa+17cn/iTr0uTJk1GX9EtGpqSkiEQiXDKyqKio
tLRUP4Qb6euuri5cMhLygwHAUEMTyDMlHkz6zUHaPQUAAAAA4P+4Wd8YPuZx
o+o79c3PaPcUAIDBBPaqYZeaLvF+Q0ODWq2urKxUqVRKpVImk0kkkuTkZKFQ
yOfzIyIiuFwuh8Px8PCwsbGxtrYm82McvupmyDdy1i+crM3+ZtHLr14Oje3W
W8+YZNrOMDrY2NlzpEXUPZ99leuxYrKKP2ZmZmgJoNWBy0dCSBgAAPcHOQd+
N8VJWO7Kpt1TAGAS/Xwj+pYwzjdSXV29atUqMnNxw9ffUbd2GBG2JP+KjQ1t
e5MOXokZRseHm1O+69T58ZOnkM0TMp57bU0vXVq49CWyZjdv3twz3wg6AEql
0vz8fJxvBJ0Na2tru5WMhHwjAAAMDLqQMN2TRhzCXVdXV1VVNW/ePLLdb+85
W+ralhHxiE6krTnpcPbcuXe3fm0xfDjZBOhXPvx2j6Hv5Z1ZOOnBh8ia3bNn
j7e3ty6EOzY2NjU1VSwWy2Sy3NxcHMKN7FiksnGWewgJA4AhCzrlxjz6ilFX
T/iYx7s0WtqdBQAAAADg/6fclW3KfU2lVwDtngIAMGjopXykRqPB5SNzcnJk
MplYLE5NTY2JiYmKigoODg4ICPDy8vL09Pzyyy/J/BiPzH+il9f3q97/iKzZ
fuKhWbN/tnMx1Nvr3hzanjA6oB9O3flJINsOHCObBi+++GJdXV3P8pHYQU17
NQMAAPSZtsKSUMvZRs8XwufW/ht2OeD+Agex4NBufLnc0dHR2tra0NCAdD2X
yyUzFUaPG+eeKqdu6jAi1338aFuadHDiBps+Sqz0/A3ffG8x3JJswvQJi+HD
bXkJhnqy+4+LZM2OHz/eyckJzfnAwEAej4fOeklJSejcl5WVlZ2dXVRUhM6D
VVVV6GyIVkdzc3N7ezuUjAQAYMDQ19c9S0ZWV1f/9NNPZLvf7PlP9p4QcrAI
+hV2js60lScd3CPj0QjYRSY+v/J1smnQT0ycMtUro8DQJ3vn8+1kzS5evLiX
EG6ksnuGcOt7rmivZgAABpT84+dNuU0usXOj3VMAAAAAAP6HOzdvRs9aalSJ
xz25Cl58AABgIrqQMPzWsrOzs7W1tbm5ua6uTqvVlpeXl5SU5OfnKxSKjIwM
kUgkFApjY2NDQkICAwN9fX29vLycnJweeojwddu2A8cMeUichJIR1qPImmWW
kaNGbz1wlC1T9eKC80nNpu0Jo4avSEHdBdpX8ckqnPzQNLL5YGtri0PCOjo6
9N9awnUYAACDkbS1W4w7Cc2mN4qyaPcUABgGXzHjZxE4JExnA2s0mgULFpDZ
CbtOnadu5zAinrEptG1MarAz8vo6XPb8pBdWvUE2Z0znvS92GOqAr7R4yvSZ
ZM3u27cPnelwvpGoqKiYmBicb0Qul+fm5qLDIDoSokUB+UYAAKBCz5AwXDKy
oaGhvr5eoVCMHTuWbPf73dOfurZlRFyCebQ1Jx1srzn4yUt043Dc2XvG3MfI
JgPj7Dlz2dD3+k/ieqLS5GZmZqdOnfLz8/P394+IiODz+UKhMDk5GYdwK5VK
lUpVWVmpVqtxCHdbW1tHRwfO6gkh3AAw1Ois0oSPetSotyd2/oo7t27R7iwA
AAAAAN2p4oSaEtqtPG1Du6cAAAwmcPp9XDSnvb29tbW1sbERZ+AvLy8vLCzM
y8uTSqUSiSQhISEuLo7H44WFhXE4HB8fHzc3t/3795M5ScZOmOgpzjXkJ9my
/zBZs0xhZma26oPNLolZ4IXrhWseXtRdoATys70r2ayYPn26Wq1uamrC7jUo
HwkAwOBF7R9hyslC9u1PtHsKAEyiXzISXy53dnYiA7i5uRkZwFqt9sSJE2RG
woy5j3HkpdSNnH8u3Jxye2dX2jYmHdwiYojH7biLz4x5/XUZPXbipF7OTR9s
303W7Ny5c729vdlsdnBwMDrfxcbGCoVCsVicmZmJDoBKpRLnG6mpqamvr29p
aUEGMFovkG8EAIABw1AIN9qUamtrN27cSLb7rXr/I+ralhHhSIts7OxpK086
eAqSu4+GvPTrIydHjxtHNiuY4tGnF/eSgG7x8pVkza5bt47FYvn7+wcFBfH5
fIFAkJKSIhKJZDKZQqEoKioqLS1Vq9XIlMUhYR0dHZDVEwCGLKL3vjTF21Mb
k0S7pwAAAAAA3B3RO58bVeWRUxbdbu+g3VMAAAYNd+7c6ZaEv7m5GSfhV6vV
KpVKqVTK5XKpVJqampqUlBQVFcXj8QICAvz8/Dw8PFxdXZcuXUrm01iz8RND
fhJfafHUGbPImv3nLHh2yTl/Xh8ccVmFV2xtabvE6IBz9Q86QZ+YbG7s3bsX
rY6Wlpb29nbdi0sICQMAYHDxd1eXYPaLRo8VEeMW3Kipo91ZAGAS/Xwj+g8i
cL6RgoKCCRMmkFkIx118qJs3jIhraBRt65IOtlev+WX3lhnYqPznMvro76PH
jSebQr3w3clzhv7of7MrW5M1++uvv/r6+qIznS7fCDrr6fKNFBcX45KRaGno
HkRAvhEAAAYS/RBuXOUZncTRjlRTUxMXFzds2DCCrc/SysohRkRd2zIi1705
tJUnHdAPNzQmbinytz7ZNszcnEwz/nP+9A011LdTrACyNkeOHHnt2jWksnFW
z5iYmPj4+LS0tPT09NzcXGS+4qyeWq22rq6uubkZWba6EG7I6gkAQ426uBRT
4sEyt/5Au6cAAAAAABikUZRl0nP+HYdo9xQAgEEDDgnD7y47Ozt1Trba2lqN
RlNWVqZSqXJzcxUKhVgsTk1NjYuLi46ODg4ODggI8PLy8vT0PHXqFJkvztzC
wpaXYMhb8pOtM5m35J8w+aFp+87bEfjiPKITaXvF6GDn4MhVlFH3hfZVzvnz
zMzMCGbIyJEj5XI5Lp3T1dV148YNXDoHQsIAABhE5B09a8qZovSaJ+2eAgDD
4MtlXdl0/ZKRNTU1n332GZkB+crb66nbNoyIX7bKxv4qbeuSDiyhmJExdE+V
r/3sCwYvo2cvWOhn2NheuuYtsmZff/11Xb6RyMhIdL5LTk5OS0vLzs7OyclB
B0B0DESHQbQuGhsb0RrBJSNxvhG4XAYAoL/pGcKNHzCik3hDQwPanV566SWy
3W/L/sPUtS0j4itW0Nac1PBJlfU+OBdDBE8te4VshvwTXlu/0VCXuDnlSKGT
NfvVV1/5+PhwOJywsDAejxcXF5eQkCCRSKRSaX5+fmFhYXl5eVVVFbJmkcpG
lq3uASNk9QSAoQY66MY9ucqoqyfcel5nhZp2ZwEAAAAA6I3sXUeN6vQwqzmd
VRraPQUAYHCgc7Xhq7HOzs62tjacLaGmpqaioqKsrEypVObl5WVmZorFYlw+
MiwsLDg4mM1me3t7u7i4rF+/nsyzsXj5yl7cOAPpw7EcMWLzrv3emYVk7jiu
oszuuiNtxxgdnAMMvoK8l2Xdlq/Ipsq6devw1Vh7e7suFT++Yqa9mgEAAIzT
UVoRNnKe0QNF3FNr/g03CMB9R898I7hkJDJ6ExMTzYnCeCyGD7eLTKRu2DAi
jr7+tO1KOti7uDE7kpdCYha99CqZqdmNk55cQ3/lDCeMrE0rKyt7e/te8o2U
lpaiYyBaF5BvBAAAKuiHhOEQbnT6bmlpaWhoQPuSjY0N2e43ceqDxD6fe02u
eXjRVp50cAk2NaX/IVunB2cOXPWBEdbWTsIMQ5354qfjZM0++OCDrq6ufn5+
AQEBPB4vKioqKSkpNTVVKpXK5fKioiKVSqVWq6urq3HJSJzVE0pGAsDQRHna
xpTXf8UXrtPuKQAAAAAARugoqwy1nG1Urae++RntngIAMJjQLx+JC+g0NTXV
19er1eqKiori4mKlUimTyTIzM5OSkoRCIZ/Pj4iI4HK5bDbbw8PD3t5+zJgx
ZP6N/RevGvKZXAwRkOUf6yuvrHvveuw/zQzAik+j7RujhK0tJ2vwuVVdErNG
jhpNNmGioqIaGhrQMtEvoAPlIwEAGBSIN3xtipOwPiGNdk8BgHlwSJh+vpHG
xkZk8VZXV69cuZLMKti8az91q4YR8U3PpW1TUsM7Oas/hvRnO5cHZz5CNq8w
L731bi/tP7boWbJmt23bpp9vJD4+PjExUT/fSGVlJToG1tXVYYsXrRScIgzn
GwGLFwCA/gbvMzibPQ4J02WzLysrmzFjBtnu95OtM3Vty4i48+Npa05K9NH7
5Cst/mzfzyOsR5FNmD7x6d5DhrrBSs8bO3ESWbMHDx709vYOCAgIDg6Ojo6O
i4tLTU0Vi8UKhSI3NxeXjNRoNGhp4Gz2yL7t7OzE2ewhJAwAhhRd2tqIsfON
unoEc1/++8YN2p0FAAAAAMA4ReeumnKP0yTJpt1TAAAGDT3LR+pyJqjValw+
UqFQyGQykUiUkpIiEAj4fH5QUJC/vz+LxfLw8NixYweZf2Pa7Lmc7BJDnpO3
Pv2crFkTmfvk06e8Apnyyzmyh2hqBUdOAHWnKIFs/+UU2bRZvHixLmcClI8E
AGAQUR0mMOUckfX5j7R7CgAM0zPfSFtbW0tLS319fW1t7fXr18lMgvGTH2Cl
51M3aRgRB5YPbYuSDs6BYf03qr7S4q3/OkL2DMHSyuqaIM2gHXv8NNmkfeCB
B1xcXHrPN6LRaLRaLc6LC/lGAAAYePSzenZ2dra3t2MPFdqa9u7dS7b7Pf7M
c9RVLSMylHPUe0QnEoyYc0Lmyvc3kU0bE5ny8AxfaZGhDrzx0RayZpcsWYJD
uIODg8PCwnDJSLFYnJmZmZeXp1Qqy8vLKysra2pqdCHcuqyeEMINAEONjE3f
muLt0YbH0O4pAAAAAAAmcbu1jTdpoVHlnvTK+7R7CgDAoEEXEqYrH9na2trc
3FxfX4/LR5aWlhYUFOTm5mZkZIhEovj4+JiYmJCQkMDAQF9fXy8vLycnp5kz
Z5J5OTbv/pchz4lbinz0uHFkzfbO+MkPfP/7eW5OOYOuOV+xgraHjBqseBF1
12hfhS1TEaduOHv2LH6D2bN8JLjdAAC4N7lz82bMY8uNHiLCRz/Wpa6m3VkA
YBiso/Hzh66uLqS7kaGL841UVlbOmTOHzB7Yd8Geuj3DiHhEJ9K2JSlhY8PO
LOjv4XVOyFz1wWYzM7M+za6Pvt9nqEFviXLilKlkk3bv3r3o7IZLRkZFRaEz
nS7fSF5eHs43otVq8fMHZOuixYKWDH7+ACUjAQDob/RDuHFWT5zHvqGhob6+
XiaTWVtbk+1+Z/3CqWtbZnRKQCht3UkHOwdHrqKMeNzQBHh88fNkk8coB684
Gvq7dpGJ5hYWBG2am5ufPXuWzWZzudyIiAg+ny8UCpOSkrKysrKzs5VKZXFx
cVVVlUajQUsD2bRomaDFAiHcADA0aUjJMCUeLGPTt7R7CgAAAABAH6jihJqi
4kuve9HuKQAAgwOd2+327dv6brfGxsa6ujq1Wl1ZWVlYWJifny+VSiUSSUJC
QlxcHI/HCwsL43A4Pj4+7u7uhw8fJnOeWI8Z65aSbch/8vWRk2TNGsJiuOX6
r3ay0vP6wzvnGhZF209Gh6uuHtRdowRy+Kob2SyaMmVKRUVFU1MTzpwA5SMB
ALj3Uf5+2ZQThOqyM+2eAgDz9Mw3gpR4Q0NDdXX1oUOHyIyBuU8+zezjAlry
n3wjjs60bUk6uPOFAzbO57gR8599wfTZxZapDDX19tavySbt4sWLvb292Wx2
7/lGdCUj8dsHyDcCAMCAcdeSkfi5Ym1t7dtvv022+7316efUtS0jwskqvGJr
S1t50oEVZzBzpumy95ztpAcfIptFhli49KVe/uJzr60ha3bDhg0sFsvf3z8o
KIjP5wsEgpSUFJFIlJ2dnZOTo1KpysrKNBpNTU0NzuoJJSMBYMjy7zt34p95
w6irJ8xqTruqjHZnAQAAAADoA0jLxzz+qvHC0HNeunP7Nu3OAgAwCMBuN5wr
DF+WdXR0tLW1NTc348sytVpdUlJSXFwsl8ulUmlqampiYmJUVBSPx/P39/fz
8/P09HR3d1++fDmZr2P5OxsMurzkpTPmPkbWbE9eWPmGXWRi/zno/GTFNnb2
tF1ldHCLiKHuICWQJavfJJtLO3bsQKujpaUFrRRcPhLn2cOXzrTXNAAAwP/Q
WaUJH/Wo0eND7PwVd27dot1ZAGAe/ZKRunwjdXV1yLIdM2YMmSXAYPFxuuIS
FEHbiqSD7TUHrrx0gEd733k7o5fR02bPvR4rNtTCNUHacEsrghlrZmZ2+vRp
X19fdHYLDw+PjIxMSEhITk7umW8ErY6mpiZdPBg6G0JIGAAAA4N+CDdS2R0d
HbhkZE1NDY/HI1LX/88I61HOCZnUtS0j4sgJoK086eDI9mdqDL0lyo3f7bW0
ItGkPRk2bNiFoGhDf+vAJQeyZkePHu3o6IhUdlBQUGhoaExMTHx8fFpaWnp6
em5ubkFBQWlpaUVFBVoXOKsnsmx1WT1BXwPAUKP4wnVTXv8p/7Cl3VMAAAAA
APqMNiLWFEWfd+QM7Z4CADBowFFh+iV1WlpacEkdrVZbXl5eUlKSl5enUCjE
YnFqampsbGxUVBQuH+nt7c1isc6ePTt8+HACd4eZmVkvXpTjzt5kXhR9Zsx7
DLUzAD46z9hU2t4yOthec/CTl1D3kfZVroTFDTM3J5hRlpaWGRkZaIE0Nzd3
K6kDIWEAANxrpH/wjSlnh5roBNo9BQCGMZRvpK6urqam5oMPPiAzLFd/+DF1
G4YR4UiLbOzsaFuRdPCMSaEy5t6ZhR99v2+E9ai7Tq0V733oliLv5b+/+CZh
kpx33nlHl28kMjIyOjoa5xuRyWTofKefb6SnfQv5RgAA6G96lozEDxUbGxvr
6+vR7rR48WKy3e/rIyepa1tGhBUvoq05qeErVjA7mNcEaS+99S7ZjNLnjc1b
Df0Jjrx0+txHyZr97rvvfHx8OBxOWFgYj8eLj49PTEyUSCRSqTQ/P7+wsLCy
slKtVqOlgRYIzuoJIdwAMDS5Wd/Im/CkUVdP9Mwlf3d20u4sAAAAAAAkZHz8
vVFdHzH+iVtNzbR7CgDA4KBb+ciurq62tjZdFoXKysqysjKlUpmXlyeRSMRi
MS4fGR4eHhISgstHuri4bNq0iczj8eQLy3px17yw8g2yZhGjx437+ujvnIFK
AsDNKR+yxXec/IKou0kJ5P3tu8im1rp163AWBVw+Eq2aW7duQUgYAAD3GnXx
qabEg6HDBe2eAgDz9AwJa25uxk8eYmJizMzMCAwAyxEjekniNLjkujeHtv1I
h+s+fnRH3kOU8+XPJ55f+fq02XOnTJ+JjkIbvv7uUoiRpLvERc+tra2vXbvm
7e0dGBiIzm5RUVGxsbGpqanoTKdQKND5rqSkpLy8XKvVoqWB1khLSwvOgovz
jYB9CwBAf4P3GZx5G+trdMpGexEuGXnmzBmy3W/qjFm+0mLq2pYRuerqQVt5
0sE1NKqfhvR3T//ZCxaSTS3EqLHj3FKyDTX+yd6DZM3OnDnTw8PDz88vICCA
x+MhlZ2cnJyWliaVSuVyeXFxMVLZarW6uroal4zU90dhlQ0hYQAwdMjcsscU
b486gEe7pwAAAAAAENIizwsxM67uJZ/tod1TAAAGEz3LRzY1NTU0NGg0mqqq
quLiYqVSmZ2dnZWVlZSUJBQK+Xx+REQEl8tls9keHh4ODg4TJkwg83vsOnXe
kC/FLjLRou/5x4aZm7/16ee9P7TvD/FKzKDtM6OEjQ1bkk/dU9pX8UhTjB43
nmzSent7o9WBX2XiizP8rhlccAAA3CPcuX07buFqo0eGsJHzOsqraHcWAJjE
UL4RbNmq1eply5aRaf9tB45Rt14YEV+RgrbtSA2fNIN3uPes+CnKHpn/BNmk
3b59u6+vL4fDCQ0NDQ8Pj4uLS0hIyMjI0OUbqaioQGc9nG8EXy5DvhEAAAYS
XUiYLms9DuGuqakpLi6eOnUq2e73k60z9d2bEXGLiKGtOelgY2fPkRb1q27d
+dvZsRMnEcyuL38+YfB7pchHjR1HNmmPHTumC+GOjo5GKrv3EO5uWetBXwPA
0KEpQ2bKBbHovS9p9xQAAAAAgH9E7k+njWr8UItZ7cWltHsKAMCgoWf5SJ0j
TqPRlJWVqVSqnJyc7OxskUiUkpIiEAj4fH5QUJC/vz+LxfLw8Ni9ezeZ3+OB
adN9Dbt6Nu78oU+tPf3icqMP7ftPnLjBtD1ndKCecoFMdp2+QDZp58+fr9Vq
u+VSgPKRAADcOxSdu2rKo9HCM/a0ewoADKPLD6bLN9Le3q7Lf3vp0iUy1T/5
oWk+WYXUTRdG5Jo7i7blSAeXYB71wSeQzw8eI5u006ZNc3d3Z7PZfn5+4eHh
kZGRQqEwKSkpKysLnemUSmVxcXFVVRU66+nnv4WQMAAABhJ8gr7r48Tt27eT
7X4vrHyD+tbNiPjJS2yvOdBWnnTwjE0dgBH2FOe+98WOPj1EfWT+E5zsEkMN
vvouYWnyV155BZeMDAkJ0YVwi8ViiUSSl5eHVHZZWVllZSUyZfUfJ4K+BoAh
CFrsCUveMX47PPyRtoJi2p0FAAAAAOAf0VVdE249z6jeF6//inZPAQAYNOiX
j7xx40ZnZ6d+uv6KiorS0tKCgoLc3NyMjAyRSCQUCmNjY0NDQ4OCgnx9fb28
vJydnefOnUvm/djwzfeGPCqc7JLHFj1rSiMPzpxF/SkoOyOPtueMGp6xKXQH
n0D8FGUzH32cbNKeOHECp+vv6OjAvjgoHwkAwD1Cl7Y2YtwCo4cFwdyX/75x
g3ZnAYBhesk3UlJSMn36dDK9/7O9K3W7hRFxj4ynbTPSwcbWjjMIg/o8xblj
J0wkm7SHDh3y9vZGh7VuJSPlcnlOTg7ON1JdXY3OemiBoGXS7ZkDXC4DANCv
6Gf17BnCLRKJrKysCLa+YcOGXQwRUN+9GREnvyDaypMOdo7O3JzyARtnW17C
c6+tMWV2jbC2vhwaa6gdNPHQ9COYtBYWFhcvXmSz2VwuNyIigs/nJyQkJCcn
GwrhRisF2bf6JSNpr2YAAAaOEjs3U17/5R8/T7unAAAAAAAwQMlVD5OqRftH
0O4pAACDA/2QMP0iO42NjfX19Wq1urKysrCwMD8/XyqVSiSSxMTE+Pj4yMjI
8PBwPz8/X19fd3f3EydOEHg/EFYjRzoJMwz5VTxEOQueW9KrW2bUlv2HfaXF
1F12/kM4sb+9s+tAeu2Ykl9d2WSTdsKECSqVqluRHQgJAwDgXkDy6W5TTgrV
YQLaPQUA5tEPCevs7Gxvb29ubkb6urq6es+ePWRKf8GzS6hbLIwIV1Fq63Cd
ts1IBw9BEvXxJ5A1Gz8hm7TLli3z8vJis9nBwcGhoaExMTHo7JaWlpaenp6T
k4POdKWlpRUVFTU1NXV1dS0tLcighWLoAAAMJPr6GoeEob0Iqeza2lqtVrty
5Uqy3W/9Vzupb92MCFtScMXGhrbypINXgkH3YP/JMUfW9LmP9jK1xoyf8Kdv
aC8tPLX0ZbJJu3nzZhaL5e/vHxQUxOfzBQIBDuHOzs5GKlulUpWVlWk0GqSy
IYQbAIY4t5qaIx942qirhz/tudtt7bQ7CwAAAAAAA/zd1YU0u1HtH7/4Tdo9
BQBgMHHnzp2///4bJ+3v6urq6OjAl2harVaj0ZSUlBQXF8vlcqlUmpqampSU
FBUVxePxAgMDuVyup6enu7v76tWryXwgL6zqLbc/R1765c8nxk9+oNv/shwx
4q1PP3dOyKTur9OJX7bK9uo12i40OriGRlEffwJ59Z33ySbtli1b6uvr4RIN
AIB7ioZUSYiZ8Xgw8fvf0O4pADCMoXwj+IGDRCIZOXIkgbo3MzM75z8oCw72
FOeAUNrWIh3srjtyFWXUx7+vYhMhNLewIJi05ubmf/31F4fDCQgIwCUj4+Pj
ExMTTck3Ag8cAAAYGPRLRnbzPgUGBhJsfYjR48a5pcip796MyHUfP9rKkw5O
3GBaY87JLvnm2KkHpnXPKGsx3HLV+x+5JGb18n/3/ElYmnz8+PEuLi6+vr5B
QUGhoaGxsbFCoVAkEmVkZOTm5hYUFOAQ7tra2m7eJygZCQBDEOk3B015/acJ
5NHuKQAAAAAAjKGNiDXFACi+cJ12TwEAGDTgkDD9d5q41E5tbW11dXVZWZlK
pcrJycnOzhaJRCkpKQKBgM/nBwUF+fv7s1gsDw+PCxcukKX3R/T+4A77Z467
+Gw9cHTD199t3rX/kK2TR5qCuqeup7CEYtpeNDrY2F/1y1ZRH/++in1UssVw
S4IZa25unpqaitZIS0uL/jtNcMoBAECLf9+5E7/4TaMHhDCrOe3FpbQ7CwAM
g/Wvvh3b2tqKdHRdXV1NTc1bb71FZqCu++xL6rYKI8LJUl6xtaVtLdKBFS+i
Pv4Esng5YZKcDz74wMvLC+cbiYyMjIqKSkpKQlarVCqVy+XFxcUlJSVqtRqd
7/TLoOvyjUBIGAAAA4B+SBjO6tnU1NTQ0IB2pyeeeIJs9/v+9/PUt25GxDM2
hbbmpAY7I4/u4HPkpSc9uVsPHH1/+65N3/+474K9e6qROENfafGU6TPJJu0P
P/zg4+PD4XBCQkIiIiLi4uISEhIyMjKysrLy8vKUSmV5eXllZSWyZtHqQJYt
WikQEgYAQ5Pm7LwQ85lGvT1Jr35Iu6cAAAAAADBM/DNvGLUBoh5+/u+uLto9
BQBgcKBfPhJfpbW1tbW0tDQ0NNTV1VVWVpaXlyuVyry8vKysrPT09ISEhLi4
uLCwsODgYA6H4+Pj4+rqumXLFjJPyKNPPUPd88aU2Lu40Xak0cHR15/64BPI
x3sOkE3a1157DV+lQXYFAADuBVRXXEx5M1Lw20XaPQUA5umWbwTpZZxvpKam
Jjw8nEzRjxw1uvekEINIHNn+tO1EOjhyAqgPPoHsv3iVbNKOHTvW0dER5xtB
xzR0WNPlG8ElI0tKStCZDucbQWuktbUVst0CADCQ9Mzqif1OaFNCW9Px48fJ
dr8Zcx/jyEup797/XLg55fbOrrSVJx3cImKojz+BfLCDsDT53LlzccnIwMBA
Ho+nC+HGWT1xCLdGo9Fqtfoh3NjvhJYP+J0AYEiRtPwD494e85kt8jzaPQUA
AAAAgGHqE9JMufSR//AL7Z4CADA46BkS1tHR0dbWhgvuaDSaqqqqwsLC/Px8
qVQqkUgSExPj4+MjIyPDw8P9/PzYbLa7u/v169cfeKB7hUcT+ebYKerOHEbE
OzmLti+NGr7pudTHv6/CSs8fP3kK2aR1cXFBCwQtE7RY0Kq5efMmdm7TXs0A
AAw5btY38iYuNHo0iJ655HZHJ+3OAgDzGMo3gizYZ555hkzLb//lPjFNWfEi
2hYiNXzFOdTHv6/CyS6ZNnsu2aT9/vvvfXx80NEsNDQUl4w0Md8IhIQBADAw
9Mzq2dLS0tzcjPalwsLCiRMnku1+x529qe/ejIhraBRtzUmHQZp23kkoGWFt
TTZpf/31V29v74CAgKCgID6fLxAIUlNTxWJxdnZ2Tk6OSqUqKyurrq6ura1F
Ni1aI/rZ6SEkDACGFGVO3qZcBOf+dJp2TwEAAAAA6BekXx8wagmEW8/r0tbS
7ikAAIMG/fKROCoMl4/UarUajQaXj1QoFDKZTL98ZHBwcGBgoJeXl7u7++7d
u8n8IRMemOqVUUDdpcOIOAeG0fao0cGB5UN98AnkXxevkU3a2bNnq9VqKB8J
AAB1sr7cb4qTsDokinZPAYBhes83cvr0aTIV/+DMR9iywXc1eVe56upO20Kk
g2tYNPXBJxDiBLazZs3y9PTUlYyMjo5OTExE5zVT8o1AnlsAAAaGniHcOKsn
2p2Ic86/su496ls3I+KXrbKxv0pbedKBJRRTH38CWfr6WrJJu3r1ahzCHRIS
grN6JiQkpKen3zWEG5m1yLiFEG4AGJrcbmvnP/SsUVdP5JRFt5pbaHcWAAAA
AIB+oa2oxJQS0uL1X9HuKQAAgwbsoNPPFYbfbNbW1mq12vLy8pKSkvz8/Jyc
HLFYnJqaGhcXJxAIQkJCgoKCfH19WSyWs7Pz4sWLybwi6z77krpLhxFhZxZc
sbGh7VSjg0d0IvXx76twc8rnPbWIbNIeOnSo55tNcNABADCQNEmyQ4bNMHoo
SFnzMe2eAgDzIIWLbNe75htRqVRTphAmAj181Y26fcKIuIULaNuGdLCxt/eT
FVMf/z5/r5Rs6zFjySbtsWPHcL6R4OBgPp8fExOTkpIiEolMyTcCIWEAAAwM
OKDl5s2baP/Rz0ufmJhoYWFBsPVZDB9uF5lIffdmRIZslWd7l0FpdJ3hhJHp
aysrq8uXL7PZbH9///DwcJzVEy0BiUQilUrz8/MLCwurqqo0Gg1aGrq89BAS
BgBDk+xdR015/VflG0y7pwAAAAAA9CMFJy8ZNwnMprco8mn3FACAwYF+poWe
brqqqqqKioqioqKCggKZTJaZmZmQkBAXF8fj8cLCwvz9/dlstoeHx6lTp8zM
zIi8eZZXo1OoO3YYEXe+kLZfjQ52js5cRRn18e+r/OETTObNGz16tFKpbGpq
6lk+Etx0AAAMAGifSVz2rtETQejwR1rzi2h3FgCYB79luGu+kW+++YZMuS9Z
/SZ1y4QR8ZOX2F69Rts2pINnXCr18SeQ5e9sIJu0K1as0OUbiYiIiI+PT0pK
MlQyEvKNAAAw8BgqGYmfH65cuZJs9/vo+33Ut25GxDc9l7bmpIZ3chb18SeQ
xxY9SzZpt27d6uXlFRgYiFR2VFSUrmSkTCZTKBQ4hBtn9cQh3DgeDEK4AWAI
0ppfFDr8EaPensRl74IlDwAAAAD3NzcbmyLGLTCeE2D1Zto9BQBgcGAoJKyp
qamhoUGj0VRVValUqqKiouzs7KysrJSUlISEhKioKB6PFxAQ4Ofn5+np6ebm
tnYtYfr0pa+vpe7YYUS48lLbaw60XWt0cAmKoD7+BLJm06dkk/bDDz9Eq6O1
tbW9vR1frt3+L3C5BgDAAFB63cuUR6N5h/+k3VMA6BdwbtueDxnS0tIsLS0J
1Powc/MrYXHUzRJGxMkviLZVSAd7JxduTjn18e+rnA+MIntWM3z48IsXL+ry
jfD5fKFQmJycnJmZCflGAAC4R+gZEtbc3NzU1FRTU+Pk5ESw9SHGTZrMSs+j
vnszIg4sH9rKkw7OAWHUB59Adhz/g2zSTp482c3NzdfXNygoKCwsLCYmJi4u
Dlmt6enpOTk5SGWXlJSUl5drtdra2lq0RlpaWnReJqSvISQMAIYUKWs+Nu7t
GTajSZJNu6cAAAAAAPQ7FR5cU66B0D+j3VMAAAYNhpx1dXV1uvKRubm5CoUi
PT09LS0Nl48MCwsLCgry8fHx9PS8cuWKtbU1mYfkZzsX6u4dRsQzJoW2d40O
NnZ2HGkR9fHvqzjGp1uNHEkwY83MzGJiYvD7zc7OTni/CQDAgHGruSVyyiKj
BwH+Q8/ebm2j3VkAYBhDJSNxvpG33nqLzBB9f/su6jYJI8KW5A/ZOuZeiRLq
408gT76wjGzSfvzxx/r5RmJjY5OTk3HJSMg3AgAAdXp/eFheXj5nzhyy3W/f
eTvqWzcj4hGdSFtzUsLGhp1ZQH38+yreEuXEKVPJJu3evXtxCHdYWBguGZmQ
kJCZmSmTyQoKCoqKiioqKqqqqvRDuCEXPQAMTSpYAaZc+8r3HqfdUwAAAAAA
BoI7t28LZr9o1DaInb/i3+DoAwDANPRddviKra2traWlpb6+vra2tqKiorS0
tKCgIDc3VyKRiMXi+Pj42NjY8PDw4OBgNpvt5eXl6ur61VdfkXlIZj02328Q
Vh68q1z38aPtYqPDdW8O9cEnkM8PHiObtEuXLm1sbGxubm5vb+/s7IQrNgAA
Bobs7w6b4iRU+4XR7ikAME/PkDBdvhFPT08yhT563HiPNAV1g4QZK9SbQ9se
pIMTN5j64BPIrtMXyCbthAkTXFxc9PONoKNZWlpaRkYG5BsBAOBeQKevEVhf
o1Nza2trQ0NDXV3doUOHyHa/OU88NRgTQvYUrqLMztGZtvKkgztfSH38CeTt
rV+TTdrFixcjG5XL5QYGBvJ4vOjo6MTExJSUlKysrOzs7KKiIpVKhbN6otWB
bFoICQOAIcvtjs7omUuMunp4ExferG+k3VkAAAAAAAYIdQDPlMuggpOXaPcU
AIDBBL4guHXr1s2bNzs7O9vb2/ErzurqarVaXVxcrFQqcfnIpKQkXD4yIiIi
ICCAw+F4enq6uLhMmzaNzE+y9cBR6k4eRsQnLZu2j40aPiI59fHv8/fKKpz8
0MNkk9bW1raxsVG/fCS47AAA6Fda5Hkh5jONHgGSln9Au6cAwDC6xwvdSkZi
S7WysnL+/Plk2nzX6QvUrRFGZMjmqkWwMwZfETFfadED06aTTdr9+/d3yzeC
jmb4chkd1iDfCAAA1Llz5w5W2bdu3UIn5c7OTl0It0KhGDNmDNnud8orkPru
zYi4BEXQ1px0sL3mwJWXUh//vso1QdpwSyuCGWv2/7H33vFtVUn//89xeofQ
AwkBAiwQWsLS64bQd0MnsCywoSZkaYHlIRCeZYFNdhOKu+Mu25Ilucpyt+Xe
JNuSJbnJttxlWbbcLcdOwut3nuf8vvern5xE8uHGg6J5v+a/Jd7x8bln5s6Z
+xkvr++//14oFNIW7pycHBKyKyoqlEoleRDq6uq4Fu7+/n6q6kkrS/STQ4zX
COJR6D/5xpUL345ICbSnCIIgCILMKZXbdzrNEDLO24QjYxAEcR3aEsYV7iYm
JoaHhwcHB81ms8lkMhqNLS0tWq1WrVaXl5eXlJTk5uZmZmYmJSXFx8fHxMRE
RkZ+/PHHbMW9FavPiarQg5d6+KnvJadDV9pgCIyMBl98BvsiMJJt065du7ar
q2tkZGR0dNS+cEceIizcIQhyJii+71nnRULvdcO19dCeIgjP2LeEUb0R2hJG
0tSBgYH9+/ezhfJ1G68Ru+HV5EyT6jv8Q8KhM0EYItLzwNefwba/uYtt027c
uFEgENCWsLS0tKysrMLCwtLSUvKCRl7TDAYDeV9DvREEQWCxbwmjHxvSylJv
b++zzz7Ldvo99MyL4Ec3LyZWN/v4+UMHTxgEuSXg689gdz3yJNumffzxx2Ni
YkjITk5OlsvleXl5BQUFSqWyqqqqvr6+qampra2ts7PTYrGQbHZkZISEbPzY
EEE8k/GWttRFVzit9uTf8giOhUIQBEEQT2NIpXGlb1y9cy+0pwiCuA0zx0eO
jo4ODw/bj49samqqr69XqVSVlZWFhYUKhSI1NTUpKYkbH3nHHXd4eomvxuDj
6wddbIMhMiMffP0Z7Lott7Nt2j179tDxkRMTEzabbWpqanp6mk7kgX6aEQQ5
2+iIlLiS/Os+/ge0pwjCP6fRG2loaFi9ejVbHP/v8DjwJIQXC5dlQueAMPgG
BEpqjeDrP1sLKVAtWrKEbdN+8803VG9EJpNlZ2eTd7GysjLyaqbT6cg7GnlZ
6+jo6O3tJe9uqDeCIMjcM7OFm46MpC3c5NTy8vJiOPoWLl4cnFcJfnrzYh47
5TlYKAFffAZj/oRw6dKlAQEBYrE4ISGBjozkWrhra2sNBkNra2tPTw8J2bSF
mzwpXE0JRzwjiKdR/sRfnFd7vC61llVBe4ogCIIgCADaD/Y7TRVkCzdMdHRD
e4ogiHswsyWMlu+sVmt/f393d3dnZ6fBYGhoaKipqamqqiouLs7Pz8/IyJDJ
ZBKJRCQSRUZGHjhwwNvbm6FgMs/b+2e5WzYUzbSonGLoehsMvkHBUp37qW0c
SshkK00vWbJEq9U6KDAcO3aMPEHQTzOCIGcVx8bGMy/Z7Fwi+Pwbp4eGoZ1F
EP45ld6I2Wx+5ZVXGCI44d4nt4NnILyYRNPi4x8AnQPCEF3glh0Cv//DI2yb
duvWrVRvhI6gonojFRUV5L2srq6O6o10dHT09fWRdzfyjHBKtsf+F2wJQxDk
TEMOGU55nvvMcGRkhBxK5Ghi/n7w1b37wI9uXkxUoYOOnGAIy2vB13+2JtV3
XH7tdWybdufOnSRkx8fHk5CdmZmZm5tbUlJCQrZGo9FqtS0tLUaj0WQykVSW
+8yQPC+c8jy2hCGI59AjSXXl6z/Nu59De4ogCIIgCAy2LpMrgqKql3ZBe4og
iDtBiw/T09NTU1OnGR+p0WjKy8uLi4vtx0dGR0dHRERs376drWZy8z33g9d8
+Ckc6dr9gkOgS24whCbIwNefwZ54dSfbpn3sscf6+/txfCSCIGcU3Ydfu1Ik
7BTEQ3uKIDzjoDdis9nGxsY4vZGCggK2LxHmL1jon+WW04tm2hFRPHT2B4N/
WAT44jPYv0Qytpxz8eLFfn5+pxoZ2dTUdFK9EfrBAl4uIwgyN9AWblpNIkeQ
fTWJnNtsp995F18SW20AP715scDIaOjgCUNYcjr44jPYa599xbZpL7nkkujo
aLFYTFu4FQoFCdlKpbKmpmbmyEj7Fm4cGYkgnsbxo0dzrrjLaaknbeW1k2YL
tLMIgiAIgoDR8sMRV66HzPJcaE8RBHEb6JWB/XeddDSPxWLp7e1tb29vbW2t
q6vT6XQqlaqsrEyhUGRnZycnJyckJMTGxkZFRfn6+q5cuZKtcvLRIT/wsg8v
Fp1fAV11A8LXV1zdBL7+s7XwEs3S5SvYNm1aWhp5RkZGRrAlDEGQM8FoQ7Ns
weVOE/7C25/EYwc5++BawriRkfZjze+77z622P3Snr3guQcvJlLqoTM/MGJL
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
JJA3GvJqk5eXV1paWlFRoVar6+rqDAZDe3u7g0QYzfroexMmfgiCnFEc+sE4
RXfyHtrf319bW7tsGaPq9b9EMvDTmxcLTZJDx04YfIOCpW74ZaV/Vsn8BQsZ
duy8efP+9a9/SSSSxMTE9PR0ErLplGdOIoyb8kwejZlTnn+xA/qxRhDkzNJ8
KMiVG/Om732hPUUQBEGQWUDy2Oz1t7sS47LX/X6yp9fFH3tienpqcIjYsbHx
M+o/wkbdZ985/YvL5q8fazZCe4ogiDsxc3zkyMjI4OCgxWIxmUwdHR0tLS31
9fUajYYKheXl5WVkZMjlcqlUGhcXFxkZ+dlnn7EVJJetXBVRqgUvT/FiYSkZ
0NVBGAIiBOCLz2Cf+YawbdqLLrqos7PTXigM5wchiLugfOZNV16gLLnF0J4i
CM+c9CsAKhFGUr6+vr59+/axhcUN114v0bWDh/Vfb1J9h39IGHRWBUNkhgJ8
/Rnsj2+8w7Zpb7zxRqo3kpKSkpaWRl5tCgoKVCqVvd4IlQizWq0k5bPXG8GU
D0GQOWDmyEiuhZscTdu3b2c7/bY+/zL40c2LiWsMPr5+0METBkFeGfj6M9jv
//AI26Z96qmn7Fu4c3Nzi4uLKysrHVq4LRaLfQs3JxGG8RpBPISj/db0c653
fle+/vbjNhu0swiCIAgyO+q/OODKjQYxxaat08Mj0P4iPDBptsiXXuX0L175
p79Ce4ogiDtBW8LoFSFXbxwaGurv7+/t7e3s7GxtbW1oaKitrVWpVKWlpVQo
LD09PSEhQSwWR0VFhYeH33nnnWwVnge2Pw9enuKnLKlu9vHz0LJkZLpb3iRu
vv8PbJt29+7dg4ODo6OjWG9EEDeiX1HqyqtT1Y7d0J4iCP84zAq3z/cGBgbq
6upWrVrFFhO/EUjBAzov5rG9/b6BQRKtEXz9Z2vBeZULFy1i2LFeXl7//Oc/
yStMfHy8XC7PzMwsKCgoKSmpqqrSaDT19fUtLS0dHR1UIowThsWWMARB5hKH
ljAqEUZLNOTUYovXi5YsCSlQgZ/evJjHTnkOFrpl0vW5Xxjbpl22bFlQUJBQ
KExMTExJScnOzs7LyyMhm5MIoyHbZDKdVCIM4zWCeA7Vf97jSrXHlJgO7SmC
IAiCzJpJkzlt5bUudoWVPPj8iakpaJcRHjD6R7ryF+9JwPQGQRBX4aYIHT9+
3EEorL+/nxMKs+8KUygUOTk5ycnJCQkJIpEoOjr64MGD8+fPZyjyzJs374eU
HPAiFS8myPXQeUO+gUHuOLyAbDyy/Rg27aJFi2pqaoaHh+1Ljjg+EkF+y5w4
dkxx/UNOU2j50qtsnT3QziII/5y0/5/TG3nxxRcZoiHh/j8+Cx7NebH/bez3
h86nYIjKKQZffwbb8uDDbJv20UcfJW8u8fHx5EUmMzMzLy+vrKxMqVSS1xxO
Iqy7u5vqjVCJMOz/RxBkzphZnOFCNjmUSMjesmUL2+n32mdfgR/dvJiwvBY6
coIhLHc/jX2xtm3dxmvYNu1bb70VFxfHtXDn5+cXFRVxEmFcPxgJ2bSFG4sz
COKZDCrVKV7OL0xRRgNBEARxX1p+DHGxJYyY6sX3MBM+Czg+OZl5yWanf+78
Wx6B9hRBELfBadWxq6vLaDQ2NTXpdLrq6ury8vKCgoLc3Fy5XJ6SkiIWi2Nj
Y8PDw5955hm2Os+mO+4Br1PxYlJdu9+RUOgyIQwh8Sng689gT73+Ftum3bZt
26mEI6AfaARBToLhoL8rb0zkP4P2FEHOCA4tYZzeiMViUSgUbA3SCxctCswp
Bw/lvFiwUAqdScEQFBMHvvgM9m1MIlv+tmTJkoCAAHu9EbL/Kyoqqqqq9Hq9
g94IlYRFvREEQeYSrjhDVT0nJyfJ+yY5i8iJREL2Dz/8wHb6XbD2MpG6Gfz0
5sUCIgTQwROGsJQM8MVnsFf3Mo4mX7t2bUREhEQiISE7PT2dhOyioqLS0lJO
Iqy1tbWzs7O3t5dKhI2NjdlsNhKy7SU9oR9oBEHOOORJL7ztCaelHtmCy8ea
WqGdRRAEQRBGyPth/o1bXe8Kq993ENplhAfM8lxX/twtPxyB9hRBEHfCYTbB
6cdHlpSUFBYWZmdnc+MjIyMjAwMDV69ezVbt+eCgD3ipiheLKVRCVwqB8PGN
q24EX//ZWkSpdtlKxlFZKSkpOD4SQdyCSbPFFXXlnCvvPn70KLSzCMIz3MhI
gv3ISNr5T3K8u+++my0OvvzBZ+BxnBcTVeqgsygwhGUa8PWfrUn1HVdct4lt
077++usikUgqldrrjdCRkY2NjQ56I7QfjOR4qDeCIMicQVu4HUZGkpDd39/f
2tp68cUXs51+XwRGgp/evFhkugI6csLg4+cndsOmvqhy3fJVjEXCL774goRs
2sKdk5NDQnZFRcVJR0Y6SIRhCzeCeBStvuGuXJU2fH0Y2lMEQRAE+VVYy6pk
89e73hXWGZ0A7TLCA/m3POL0b521dsvxyUloTxEEcRs4oTDuc1RuolBfX193
dzcVCtPr9VQorKSkJDc3NzMzMzExUSKRCASCyMjI9957j63ac+Fl60XqFvCC
FS92RJwIXS+EIVgkBV98Bnv3HwfZNu3111/f399PhcKwJQxBfstU7djtyouS
WZ4L7SmC8A/XEkb1wRz0RgICAtiC4LkXXhRb1QQexHmxwKgY6BwKhrCkNPDF
Z7CdX3zDtmkvuuii8PBwsVickJDA6Y2UlZXV1NTU1tYaDAYHvRHymDgowWKC
hyDImYa2cNOaDDmCSMgm75s0ZO/evZvt9Lv+93eCH928mFTb5hsYDB08YRDk
lICvP4M99AzjaPI777wzNjaWhOyUlJS0tLS8vLyCggKlUlldXa3T6ZqamoxG
Y1dXl9lsplOeOYkwbAlDEI9iemg447xNrtyTHhufgHYWQRAEQX4tLo5BoZa6
6AprqQraZeTXMlBY7sqfW/vBfmhPEQRxG+zHR3IVSK4rjBMKo+Mjq6qqKioq
6PhImUyWlJQUFxdHx0deccUVbDWf5977ALxgxYuJlHXQ9UIwohXuN0BKrG27
9MqNbJv2u+++ozeG9uMj6ZfdWIFEkN8I5N0nxct52lz59JvQniLIGcFeb4SE
Knu9kba2tnXr1rFFwL0/BYNHcF4sMqsAOnsCwtdXXON+TX3RyvpVa85j3LR7
94pEooSEhOTkZE5vhI6MbGxsNBqNDnojJLvDy2UEQeYM+xbumSMjVSrVokWL
GI6+efPmHU7KBj+9ebGQ+BTo2AmD35EQqa4dfP1naz/J8uZ5ezNs2vnz5//n
P/+xb+EuLCwsLS2lLdwzR0bSFm4aslHVE0E8CvXOva5ckpqSMqA9RRAEQRAe
IFluxZOvud4VlnnRLZMmM7TXyK+l5q+fOP1by5deNWm2QHuKIIh7cNKWsPHx
cTpXqK+vr6enp7293WAw6HS66upqpVJZWFioUCjS09NlMplEIhEKhREREfv2
7WOo+RAWL10WWlgNXrbixcLl2dBVQxj8wyKk+g7w9Z+tfRUSw7Zp16xZ09bW
NvOjVALeGyLIbwES1fJv3ubKVzPjre3QziLIGYFGJRKeSGo3MTFBAhanN/Lx
xx+zhb9rbt4MHrt5Mamu3S/4CHT2BENUViH4+jPYozv+wrZpb7vtNk5vRC6X
5+bmUr2Rmpqa+vp68oLT0dHhoDeCI6gQBJlLTtoSRkI2rcY88sgjbKffE6/u
BD+6ebG46saffXyhgycM0QWV4OvPYDfddR/bpn322WcFAoFEIklMTMzMzCQh
u6SkpKKiQqPR6PV6KhHW3d1NngvydDjItqOqJ4J4DsOauhTvdU6rPSX3Pwft
KYIgCILwxtTgUPb6213vCiu+5+kTx45Be438Ksaaja7MDK3cvhPaUwRB3Amu
Mcy+Dmk/PrKtra2pqUmr1arV6oqKCm58ZFJSklQqpeMjH3jgAbbKz12PPAle
tuLFJLWtPv4B0IVDGMJT3fIbZLL32DbtG2+8cdI6JN4bIshvgdafw1x5OWr8
xw/QniII/8wcGWnfD6bRaJYuXcoW+w6IU8EDNy8WmiiHzptg8As6ItW1ga//
bM0vo2j+ggUMO9bb2/vAgQOn0hsxGAxGo7Gnp+ekeiN4uYwgyJmGK8IQaAs3
/TqPnEXkRCIhOzk5mS1eL12xMrxEA35682LBIil08IThiDgRfPEZ7KNDfmyb
dtWqVWFhYXFxcUlJSTKZjLZwV1ZW0hbupqYmTiJsYGBgeHj4pP1gGLURxBMo
vudp59Ue73UjugZoTxEEQRCETwYra2QLN7jeFab7+B/QLiO/lsZ//OD8b+11
6Yi2HtpTBEHcBnutsOnp6aNHj9IBQ/T2sKenp6Ojo7m5ua6uTqvVKpXKsrIy
hUKRnZ2dnJyckJAgFAoFAsGhQ4fYhhoQDkrk4MUrXixaUQ5dO4TBNyBQUtsK
vv6zNd90xkvG+fPnV1RUUDUJbAlDkN8UR/ut6edc7zRbzl5/+3GbDdpZBOGf
mS1hdGQk1Rv54x//yJaqbXvxVfCozYuJaww+vn7QeRMM7jjpm9iWBx9m27Rk
t59Gb6SlpaWtrc1kMpHn4jT3y9APNIIgZy1cvCaQk4eEbJvNRt4uacju7e29
4YYb2E6/t/d/D35082IeW10hiJR14Os/W4vTtF607nK2Tbt7926hUEhCtkwm
S09PVygUhYWFVVVVJGQ3NDQYDIb29vaenh4qEYYtYQjisbSHxLpyCV739++g
PUUQBEEQ/mkLjnG9JSzF69K+7EJol5FfxdTgUNqq3zn9W5f+4UVoTxEEcRt+
+T84CIVRTQlOKMxgMDQ0NKjVapVKRcdHpqWlpaSkcOMjd+zYwVb/OXtGEek7
/EPDocuHMLjpd6zPvfs3tk27detWTijMZrORpwbHRyLIb4GaNz525bWoV5YN
7SmC8MxMvRFuZCTVGyFpG1vIW7x0WUhBFXjI5sVIugKdMcEQLJKCLz6DfeYb
wrZpV6xYERIS4qA3UlFRUV1dTUdGtre3d3Z2cv1gdBo4l87h5TKCIGeamS3c
9iMjv/vuO7bT75INV4prjeCn96+3/ymthEVAB08YwuVuqcH+wq6P2Dbthg0b
BAKBVColIduhhVun09EWbjoycmYLN8ZrBPEcjo2OZV50i9NST8YFN00Pj0A7
iyAIgiBnBO2er1zvCsu8ZPOUdRDEz+NHjw7X1nfHpTT+9+GqV/aod+5tORxs
zlBMdHRj6j4rOiIlrvytOwXx0J4iCOIenKYlbGhoqL+/32QydXR0tLS0NDU1
aTSa6urq0tLSgoKCzMxMuVweHx8vFosjIyODg4PPO+88tirQu/84CF7C4sVi
i6uhK4hgxKnqwdd/thatrF+1hnHTkj0/ODhI7xCP/i+oFYYgsAypNCnzLnOa
JJc9vAPaUwThH/uWMKo3QlvChoeHaYf/rbfeyhbv3vj8a/B4zYvFFCqhcyUw
RBU68PWfrYm1bZdeuZFt07799tuxsbHkDSUlJSUtLS0vL4+8uSiVSjqCymAw
kFeb7u5u8ppD9UawJQxBkDnGviVscnKSkwgbGBhobm5mrqt8GRwNfnrzYuHy
bOjICYOPf4BE0wK+/rO1sKKaJcuWs23ar7/+WigUJiQkJCcnZ2dnKxSKsrIy
ErK1Wi0J2UajkYTsnp4ei8VCEtrR0VGS3zpMecZ4jSCeQO3ufa5ciXbHpUB7
iiAIgiBnCvICWfbwDte7wjRvfzbHHh4bG2/85sfTaFuR/8lw0P/EsWNz7Jib
cmJ6OueKu5z+ofOuvf+XEyegnUUQxG04jVCYxWKhQmGtra3/L3tnHtZ2lT38
h9LNaqutW13aalv3rep0XEdtXX/jVGe0Ov5cptYZtepo1Rkdq+PSuozWtSwt
ZYcA2VgCgbDvS1hDSNghgRCSEJKwE0qpPu+duc+bNy9pSbj9wpmQ83nOf6Xh
cHPvPeeee+45jY2NDQ0NjvaR2dnZEokkMTGRx+PFxMS8/vrrbFGgNReuja9t
Aw9kcSJhianQcUQYQuL44IPPIHu/CWCbtJs3b+7r63NcI5Ilc/z4cfpS9We0
vwgy7xATVnzb79x6yGlLLhtt7YRWFkG4Z1q9EQK9XLZYLGaz+bvvvmMzdheu
28Cv976ryZPK4agYaF8Jhsi0LPDBZ5Dn3vmAbdKuX78+OjqatozMzMzMzc2l
9Ubq6+tVKlVnZ6ej/xQ55rj2n8KbZQRB5hTnlpGOqp6OLs/kgLl792623e+2
B/8HfOvmREQNmsDDR6CNJwxe2uX57t8ytibftm0bbRlJU7hpy8iamhpislta
Wjo6OmgKNzXZtEi7a4kwNNwIsuAZaW5PW7zBbbSn5I7HcENAEARBFjaTA4N5
m+/2NCts0brBGuX8KHbi2LHOH0Izz7/RE8UKb3xgoFIxP4p5O4YkmSdD2vb5
T9CaIgjiNThSwmhk0lFcwrlQmFarbW1tbWxsrK2traysLCoqysvLS01NTU5O
TkhI4PF4ERERN954I1ssaMeLL4MHsjgRQW3LoYAA6FAiDLG5ZeDjP1sRN+o2
XnsD26T95z//6YhM2u12TAlDEEC6QnieuMfNH34NrSmCzAmuLagcLSM1Gs3a
tWvZLN37gWHglpoTiZLlQ3tJMAQEBQvrO8DHf9bfV7nqzFVns03affv2xcXF
0XojWVlZ+fn55eXlVVVVDQ0NTU1NZDl0d3ebTCayNMgCoV4crTeCKWEIgswD
rincNCWMvsUj+9WSJUsYtj7/xYsDMorAd29OxGe7PAeHR4obdeDjP1s5mChj
s9dLly796aefhEJhYmJieno6MdlFRUVkCdTV1SmVyra2NmKye3t7jUajxWJx
mGxMCUMQH6T8/j96dOtdp4LWFEEQBEHmnJGmtvSVV3mYFVb95MvzoNLUuN0j
Y/3/G+72r4PnQbcFQNXjL7kdz8zzbpgaGYXWFEEQb8I5K2xiYoIGJx1ZYb29
vRqNprW1ValU1tbWlpaWOrePFAgE0dHR+/fv9/PzYwkHLVt2JNcrX0S6SnRm
AXQ0EYbgsAhvjGF+wUtii2GuWrWqra3N+T5xcnKSvvjGyCSCzCfHB4c8eYSS
dfGtU6Nj0MoiCMectN4Izeq32WzEf9uzZw+bmbvlnu3gNpoTEam0gUdCoL0k
GGLzvC9dn8i2PzzFNmnvuusu55aRtN6Ia8tIq9VKFgg55tCsftr+m2b1o/+G
IMicQrcasufQkAvZgmgKN9mXTCbTgw8+yLb7PfHKm+BbNyciqGn22Rd28aV1
4OPPIFffspVt0j777LOOFO7s7GxHy0jnFO6+vj7aMnJaPhiGXBDEd+iJTfTk
Zln99qfQmiIIgiDIPGFKzU718yjzKm3xhglj35wq8+98sO1Pzy4fjIr/eltF
7ZzqtjAYrFF6Mp71f3kPWlMEQbwJR0oYbR9pt9sdXYdMJpPBYNBqte3t7Q0N
DQqFoqKioqSkJCcnRyaTJScni0SimJiYqKiohx56iC0idOu994OHszgRX755
jEjNBB9/Brnv94w3j88884zNZiNrZGRkZGJigl4pYnwSQeYZ5Z4PPHGMDSIp
tKYIwj3OKWHEeXMUeh0YGCD+W2Vl5bJlyxgM3KJFi35IzQU30JxImDgV2j+C
ISg03Btz9cnEI9OPYdIuXrz4u+++4/P5YrFYKpVmZmYWFRWVlpbW1tYqlcrW
1tbOzk69Xm80Gh3O27R6I5gShiDIXOOcEma328kuRLYjWiIsOjqaYesjrFq9
JraqCXz35kRC4gTQxhOGsMRU8MFnkNc/Z2xNfu6550ZFRRGTnZycnJqampeX
R0w28VqJyW5sbCQmu6urq6enx2w20xJhxLMl/i2t6kk8XkeJMOgFjSDI3DI1
bs9et9VtqEd27vWTtgFoZREEQRBk/mh6/0sPM6/mtKUgsdRl9+10/nXpZ15R
vPXRqsdfKrzxAbd9n/M2300+Ye7UWzCo3vrYffrf0svHu/XQmiII4jWctH0k
7WJgsVjMZvPM7SP5fH5cXNyhQ4dWrFjBFhf6PDYRPKjFicTklkLHFGHw0v5E
IXmVS5luzP38/AoLCx2FwrB9JILMP0MNzan+6916xaX3PAmtKYLMCc6Xy9Na
RppMpgceeIDNJVtAHb1bfbbeSFxxNfj4M8gNt9/NNmmfeuopHo+XmJjo2jKS
nFxovRGj0ehoGUnctmn1RqBXM4IgCxnXFG5yfiR7kc1ms1qter3+iiuuYNv9
3vzXj+BbNycSm1sGbTmBCAgQ1LaAj/9sJb6u/byLLmabtG+88YZAIHBuGemc
wu1oGUlWB63qOT4+Tky2cz4Y9IJGEGQ+UL+735PLbl20CFpTBEEQBJlXfp6a
KrnzcU+sZM76X/8yZzeVil1vO35R5nk3dBw87JzidWJioiuEl37mFTOo1/DG
R3Ok20LCrjdKl210+13X/PE1aE0RBPEaTpoSRguFWa1Ws9ms1+t1Ol1bW1tT
U1NdXV1VVRVNCUtPT5dIJAKBID4+PjIy8k9/+hNbXOjyq6/zxmoGJxWffd96
NEEMPvgM8tw7H7BN2jvvvHNgYICsEZoSNjk5SdYOpoQhyLxR+psn3B9//NcP
q5qhNUWQOWFaCyriudGUMOK2JScns5m2M1edHVWuAjfNnMjRBBG0ZwRDmCgF
fPAZZO/BQLZJe84550RERCQkJNAWVLm5uYWFhXK5vKamRq1Wt7S0OFpQWSwW
WiKMtoykyfyYEoYgyFwzLSWMmGyyEdFIS39//8cff8y2+1129bUidTf47n36
Im7UBYdFQBtPGKJlBeDjzyCPv8TYmvyGG26Ijo4WCoXEZGdkZGRnZ5eUlFRU
VNTV1SmVyvb2dq1WazAYiMmmVT1HR0cdJhtTwhDEdxjt0KYtvdxttKfolkfm
7qYbQRAEQeaCSevAmFZH5PjQMPOH2HsMGedc60lWmKWgnEPlHQxUKhz9K8vu
3Xl8cOikPzbari269X9OpVvGqqvRt/eEzu+PevJd92XkQ2uKIIg34do+cmRk
ZHBw0GazubaPLC8vLy4uzs7OzsjISEpKEgqFMTExYWFha9euZYsO7d73GXho
ixNJqFBCRxbB4Fepwcd/thJf137u2ovYJu2RI0esVistFHbsP2D7SASZH3TR
Ik+c4ca/HYDWFEG4x229kWuvvZbNrr362dfgdpkTiS2ogPaJwOBXe18TMX59
54XrNrBN2rfeeksgEIjF4pPWG5nWMtLRf8rRMhIdNgRB5poZUribmprOPvts
tt3vQKxXPshylYjUTGjLCUPgkRCRSgs+/rOVo/lVS5cvZ5ixfn5+X375paNl
pHMKN20ZqdVqdTqdcwo3LRFGTDbmgyGITyH/7Qvuoz1+l9rkddCaIgiCIMjs
qPr9n6kha/3s+9P5HF2U0JObEW1QFEeK/z+IT1689VH6+dVPvnzi2LEZfnjC
YMo4+5pTqTem6eZcvYXH1OhY5gU3uf2uS27fAa0pgiDexLSUsImJibGxsaGh
oYGBAbPZbDAYuru7Ozs71Wq1UqmUy+WlpaW5ubmZmZkpKSlisZjH48XExOzd
u5ctpLlqzbmxVd53h3VSCU9Jh44vwnAkJg588Bnk/YAwtkm7fv363t5eGq4k
6wVTwhBkfpgaGc266Ba3njDxlk/nxQ2C/Ncyc72RAwcOsBm1SzddIVR1gRvl
05d/1xsJj4T2iWCISs8FH38G2fka4/Fh06ZN5PRBjiEe1hsZHx93VHbF+2UE
QeYHmhJGth367M4RYyFb0zPPPMO2+92z4wnwrZsTESk7A4KDoY0nDF7a5Xnr
tofYJu1DDz0UHx8vEAgkEkl6enpeXl5RUVFVVRUx2U1NTW1tbTqdTq/Xm81m
YrKJZ+vI4kaTjSA+hUEk9eSOu+G1fdCaIgiCIMisybnsdq4MmfyR592aS9Xe
TzhR2xlHNlrJnY//PDXl9ue7jsadSj1jsoxz9RYkhsQMjzIAD8dAa4ogiDcx
rX0kjViOjIwMDAz09/dPax9ZWVlJ20dKpVLn9pFbt25ljBH98QXwABcnIlS0
HQoMhA4xwhCdXQQ+/gxy9S2Mk/bdd9+l7SNpxNK5fSQmhiHIHEGOM564wT28
JGhNEWROmKHeSGtr65o1a9gs2sdhXpnX7SqR0hxobwiGgODDogYN+PjPVsKL
65avOJNt0h44cIAcQFJSUjysN0KONmTJ4OUygiDzgyOFm5hsWlOanBkdKdxk
11q0aBHD1rdk6bIjuXLw3ZsTOZoghjaeMByOjAEffAb5Io6xNfkZZ5wRFBTk
2jJSoVA0NDQ4UrhNJhNN4R4bG6Mp3PTNHZpsBPERTkxM5G68022oJ+Psa46Z
LdDKIgiCIMjsOD445LBl1U++fJqfNqbpdttnWf7bFzjR3Jmsi28lnyxbfd24
rteTnydufN4Vd59UvZZPT6tUmu/wy88/F1y33a2DlHPZ7T9PTkIriyCI1+Cc
EuYoFEbbR1qtVoPB0NPT097e3tzcXF9fX1NTU1xcXFBQIJPJ0tLShEJhfHx8
VFTUV199xRbb9F+8OFBWDB7m4kRisouho4wwBB0NFau7wcd/tnJQnOHn58cW
22xsbCQLxLkVEaaEIcjcMdLcnrbkMk+K5eICRBYqM9QbefHFFxlsGeHOh38H
bos5EVGDJiD4MLQ3BAOvsBJ8/Bnkzkd2sE3abdu2JSQkkANIamqqh/VGyHpx
1HTF+2UEQeaaaSlhExMTNIXbYrEQk33XXXex7X7/u/c98K2bE+FXqaEtJxgJ
FUrw8Z+tiBt1G6+9gW3S7t69m8fjicXilJSUzMzM3NzcsrKyyspKpVKpVqs7
Ozu7u7sNBgMx2fTBHU3hxpQwBPE1mvf9y5PXf11H46A1RRAEQZBZYymqcNiy
0rv/cPofqHrr45ktZt5V95z+b5mGOae48W8HzNlFnv+XmmdeP6l69X/+O+fq
LVTIgHviIzX940toTREE8TIccUuaFWa320/VPrKysrKsrIy2j5RIJImJibGx
sTExMb/73e/YIkW33ns/eKSLm3CZuivoaCh0oBGG8OR08PFnkIefeYFt0j72
2GP9/f2u7SPplT30akaQhUb5A8+4d4AXrRusbYDWFEG4x7XeyNjY2PDwMK03
UlRUtHjxYgZDtnjJkkBZCbgh5kRChUnQfhAMwRFR4kYd+PjPVr4RpbN5X8uW
LQsICBCLxcnJyTKZLDs7u7i4uLy8fOZ6I8ePH8fLZQRB5gFqr51TuMfHx2mJ
sIGBAbI1HT58mG33W3Ph2vjaNvDdmxM5EhMPbTxhCE/xyoDJnz9kbE2+du1a
Ho9HW0ZKpVKawl1ZWTkthZu4smR1jIyMEJNN4ypY1RNBfIrxbr30jM1uoz0F
NzxAzsPQyiIIgiDIrOn8McxhznIvv+P0P3DCYEpdtG6mslEbbjv933L6tH1x
6KTqtX0VCK2aN1H77F/dukkZq66etA5Aa4ogiDfhuG10tI+kr1n7+/tNJlN3
d7dGo2lublapVFVVVeXl5fn5+dnZ2RKJJCkpKT4+nsfjHTp0aOXKlWzxovcO
hYIHuzgRXoEcOtYIQ0BgkFDRDj7+s5WIEsUZZ57FNmmzsrLIAiHLhL5mxZQw
BJkjevkSTx5ENLzxEbSmCDInuNYbGRkZGRoaovVGtm/fzmbFdu55C9wKcyL8
6iZoJwiM+LI68PFnkKu23Mo2aZ9//vm4uDhy9CAHEOKG5ebmlpaWyuXymeuN
YEoYgiDzg3NK2OTkJDHZNCWMnBltNhvZoDZs2MC2+/39xxDwrZsTic4ugrac
QAQGChXel9THq24++9zz2Cbtu+++S6t6pqWlyWSygoKC4uLimpqa+vr65ubm
9vb2np4eYrKtVitZIDQljFZfx5QwBPEpqv7wF0+iPdZiObSmCIIgCMKCYtfb
zhZt0sZB6k7ZvTtnMJqFWx46/V9x+nQdjTupen2yAmjVvImRpraZMwCp1Dzz
OrSmCIJ4GTSA6bhwdAQwrVZrb2+vTqfr6OhoaWlRKpW1tbXO7SNFIhGfz4+J
iXnllVfY4kWXbNwsbNCCh7w4kaN8MXTAEYZQYTL44DPIS/v2s03am2++mSwN
+qaVLBZH9JKA7SMRhCumxu0563/t1u+VrbkeX0MgCw+39UYiIiLYTNjZ557H
q24GN8GcSAiPD+0BwRCelAY++AyyZ/83bJP2/PPPj42NdbSMJMcQD+uN0Hww
9M0QBJlrqL12bRlJH9m98847bLvflTfdAr51cyJidbfP1lSPyS4GH38GeeTZ
XWyTduvWrTweLzk5WSKReN4y0pHCjfYaQXwEU2q2J/lgit3vQmuKIAiCIIwU
3vSgs1EzZxWe/md2/hD6358d1Pb5TydVb8JkhlbNy/Coxbb/+tHWTmhNEQTx
JhwpYfRNq91uHxsbGxoastlsRqOxt7dXo9G0tbXRlLCysrKioqKsrKz09PTE
xESRSBQTExMREbF+/Xq2qNGze98HD3lxIvxKNXTEEYy44mrw8Z/191XfuXY9
43vtH374gayO4eFhx5tWTAlDEG5p+seXngQJu8MToDVFEO6Zud5IT0/Ppk2b
2OzX3m8CwO0vJxKTWwrt+wARECCobQUf/9lKfG3bmgvXsk3aN998k9YbIUeP
zMzMwsJCD+uNYEoYgiDzg3NKGH1hR1PCzGazUqk888wz2Xa/r4VS8N2bEwlP
Toe2nTAEhYSK1V3g4z9bCcosWbxkCcOM9ff3P3jwIDHZNCUsOzs7Pz+/vLy8
qqpKpVIRk63RaLq7u00mU39/v6PuOk3hxpQwBPEdfj5+PO+qe9yGetLPunLC
YIJWFkEQBEFY+HlyMm3JZc52rfXAj6f/scaUzBlMZ+v+H07/V5w+lY/tdtUt
e91WaL28j2P9VuIOuXWZ5I/+CVpTBEG8DOf2kRMTE560j8zKypJIJMnJybR9
5Pvvv88W6lyxclVUeQN44IsTiUzLgo47wnA4KgZ88BnkgyDGKisXXnhhV1cX
DWPSShT0ZSu2j0QQThjr7JIu2+jW4y265ZFfcMUhCxHH5TKBpoSNjY0Ri2Ox
WMxm8759+9iM18ZrbxA36sCN7+nLv+uNhIZD+z4wRGcWgI8/gzz2ImM94S1b
tpBThnPLSHIMkcvl9fX15FTS0dFB/LFT1RvB5lMIgsw1jhbPBEdVz5GREbIj
0ed1jz/+ONvu99DTz4Nv3ZyIUNEeEBgEbTxh4BXIwcefQbZue4ht0j722GN8
Pl8kEqWnpztaRtbW1iqVypaWFmKydTpdb28vTeEeHR0li4XGUrBfJIL4FK37
f/Dk9Z8mIAJaUwRBEARhZKi+cZpdK9v21Ol/rLVYPoPpNOcUn/6vOE2ODw6l
Lb3cVTddlBBaNa+kK4TniddkEEmhNUUQxJtwpITRZgd2u31kZGRoaMhisfT1
9el0Oq1W29ra2tjYWFNTI5fLCwsLc3NzU1NTU1JSBAJBfHx8RETEXXfdxRY7
uu/xneCBL24CnvUdAUHB0KFHGKJk+eDjzyC33vcA26R97bXXaEoYjWRiShiC
cIj80T+5d3f9LrVV1EJriiBzwgwtqIgntmrVKjbL9QUvCdzsciIRqZnQXg8M
gUdCRCrv67d+JFe+dNkyhhnr5+f31VdfkVNGcnIyOXSQo0dBQUFFRUVVVVVD
Q0NTU9NJ641gShiCIPOGc0qYcwq3zWazWCwZGRls9nr5ihVhRbXguzcnEipM
hjaeMBzli8EHn0H+ERjONmlXrlx55MgRkUiUmJgok8mysrKKiorKyspoSlhb
Wxsx2b29vUajkayOoaEhslJoiTBacR1NNoL4CBMGkyf1LvKuuufn48ehlUUQ
BEEQRnSRAteLjDFN9+l+bLToVKYze93W/4aH8yftGlly+w509dk4cewY+Wbd
Ok6FNz6AI4wgyKygLYqc37eOjo7S9pEmk6m3t7ezs9O1faRMJhOLxQKBICYm
5rvvvlvCVGF+0aJF36fkgIe/OJHYvDLo6CMMXnpN+WNq3iJ/f4ZJu2zZsrq6
OmwfiSCcY0yWefL8of4v70FriiDcc9J6I46WkcQfe/rppxlsFuG+3z8FbnM5
EV9OvydOJvj4M8it997PNmkfeeQR2jJSKpU66o0Q76u+vt5Rb0Sv1/f39w8M
DNCWkbTeCO0/Bb2aEQRZ+NAUblprfVoKNzHZt9xyC9vu9+I/PgHfujmRuOJq
aMsJBr9SDT7+sxWhqmvdpivZJu2ePXtoy0iawp2fn19RUVFdXe3cMrKvr89i
sWAKN4L4MlW//7Mn0Z7/hjonCIIgCMKM6q2PXa1b84dfz8XHUmn5+FtOND8d
/t32Zfmm6botWjdY2wCtmhfTl1ngie/U8e0RaE0RBPEmpqWE2e328fHxoaGh
gYEBs9lsMBi0Wm17e7tKpaqvr6+oqCgpKcnOzpbJZMnJyWKxOCYmJioq6okn
nmCLIF1/253gETBORNyo89lmRmHiVPDxZ5DHdr/KNmkffPBBq9VK1sjIyMjE
xASmhCHI6XPi2LHcjXe69XIzzr5moq8fWlkE4R7XlDBHvRFicXJzc/38/BgM
1tJly0LyKsENLidyNEEE7e/AcDReCD74DHIgVszmZa1YsSI4OJjWG8nIyHDU
G1EoFI56I3q9npxQaL0R2oLKud4I9GpGEGTh45wSRs6DZBeiKWFms/mHH35g
2/0uuHQ9v74TfPfmRA5HxUIbTxgiU7PAB59Bnn+XsTX5pZdeyuPxBAKBRCKR
SqX5+fmFhYWVlZW1tbWNjY2tra1arVan05F14Yif0BJhtE8BpoQhiI9gKarw
5E6z9tm/QmuKIAiCIKdF6T1Puhq4rLU3T42MntbH/uaJk1+UnHMt+EXJ5MBg
4Y0PuOrW9MFXsIotAIp+9Vu37tO/Z9e4HVpTBEG8CcdFJA1pOtpHWq1Ws9nc
09PT1dXl3D6yqKiooKAgLS0tJSVFKBQmJCQcPnz4nHPOYYsjvfX1IfAgGCfi
u49hAwIEta3g4z9bia5QnXU246RNTk7G9pEIwiEtn3znSZBQGxQFrSmCzAmO
y+VpLSNpI+/bb7+dzVo99/Y/wK0tJ8KvVEP7OmAkVDSAj/9sRaTuvvzq69gm
7Z///Oe4uLikpCSJRJKdnZ2Xl0dbRqpUKnISofVGjEYjtoxEEASEmVtGtre3
r127lm33ez8gDHz35kSiZPnQlhOGgKBgYX0H+PjPVv4TFTmbbdLu27dPKBTS
lpHEZBcXF09rGWkwGEwmk3MKN1k1xGRjCjeC+A7EZBZcf7/bUI/0jM3j3Xpo
ZREEQRCEHXJOzDj7mpM3Pfnz35k/dqihOW3p5Sf92O6weA71Z+D44FDJ7Ttc
FWt87wtYxRYG1rJqT+7LVH/9J7SmCIJ4E47AJr2ItNvto6OjIyMjAwMDFoul
t7dXp9O1tbU1NTXV1dVVVVXRlLCMjIy0tDSaEhYVFfXXv/6VLY50wSXr+F4Y
OjuphIqSoSORMBxNEIEPPoO8duAg26S95ppr6EPXsbExsl5oYBNTwhCEjXFd
r/SMzW7924Lr7/95agpaWQSZE6gFOf4fptUbCQ4OZjNV5669KL6uHdzUciJH
YuKgPR0YIlIywAefQXbv+4xt0l500UUxMTF8Pp+2oMrPzyeHjsrKypqaGnIM
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
FO7RzVpaDrSmCIJ4Gc4pYXa7nVaxsNlsfX19RqOxq6tLo9GoVKr6+nq5XF5W
VpaTk5OZmZmSkpKYmBgbGxsVFfWnP/2JLeK04aprRF7YefCkEhIvgA5ZwnA0
wSvz+p5/dx/bpL399tutVitZIyMjI5gShiAnxSavS/Vz77VWPrYbWlMEmRNc
642MjY0Rq0GcK4vFIhKJ2AzQWWefE12hAjegnAhxHqD9FxjCRCngg88gb319
iG3Srl69OiwsTCAQiMViR70Rcpqg9Uba2to6OzsNBoPJZCKrY3BwkKwUrDeC
IMg8Q1PCaDzEuaqn2Wz+6KOP2Ha/y6+53hsLQrqKWN0dFBoObTxhiM4sAB9/
Bnls96tsk/bGG2+Mi4vj8/kpKSlpaWk0hbuqqqq2trapqam1tbW7u1uv19MU
bhoPcU7hxngIgvgIylf/4ckdpSExA1pTBEEQBEEYaf86eGZD3/5NMLSOC5mp
cXvW2pvdulvFWx+F1hRBEC/jl19+oa9ip7WPtFgsZrNZr9d3d3fT9pE1NTWV
lZVFRUX5+flSqVQikQgEgvj4+NDQ0Isuuogt7vTiPz4BD5pxIgkVDdAxSzD4
lWrw8Z/196VoP++iS9gmbXBw8ODgIFkjtH2k41UsXlwiCIFYlKJb/8ety5q2
9PLRDi20sggyJ9BLMed6I8PDw9SzMhqNV199NZv1ee3AQXDryYnE5ldAey5A
BAQIaryviRi/vuOCS9axTdq9e/fyeLykpCRyasjKysrNzS0vLyenCaVSqVar
NRoNOWWYTKb+/n7qWdn/A/WsMCUMQZC55lQp3FarlZhssk2tWrWKbff7gpcE
vntzIhGpmdC2E4bAIyEilRZ8/GcrIXmVS5lak/v5+X3xxReep3Bjy0gE8U2G
1S2p/uvdRntK7/4DtKYIgiAIgpwWNc+8PoOtz770V9AKLnCMKZmeJOFrAiOh
NUUQxJtwBEKnpqbow9jR0dGRkZGBgQGr1drb29vT09PW1tbc3FxfX19bW1tc
XFxQUJCRkZGamioUChMSEqKiov72t7+xBUtXrV4TU9kIHjrjJl6akgEduYTh
SEwc+OAzyD8Cw9km7SWXXGI0GmktC7vdTgOhmBKGIBRtUJQn/mrLJ99Ba4og
c8VJ640Qt6qvr+/AgQNspmfd5iuFqi5w03n6Im7UBYdHQnsuMERl5IGPP4Ps
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
H4n4LN3hCZ48Gm36Bx4WkIWMc8tIWm+EVlsNDQ1lMzTnnHc+r7oF3FByIiG8
BGg/BYbwpDTwwWeQVz/7mm3Snn/++ZGRkc4tI4uLi8mpgdYbaWtrI6cJg8Fg
MplsNtvg4KBztVVMCUMQZK45VctIGvcgW9O7777LtvtddfOvwLduTkSs7vLZ
yucxOcXg488gDz/D2Jp869at8fHxAoFAIpFIpdL8/PyioqLKysqampqmpqbW
1tbu7m69Xk9cWeLQDg8P05aRtKonzQfDlDAE8QUqHvxf99Eev0sHa5TQmiII
giAIwjHZ67ae1PRrfgqHVs0nmLQOZKy62q0nVvHwc9CaIgjiZdDoKH0tS1//
0deyFovFbDbrdDqtVtvS0tLY2FhdXS2XywsKCnJzc1NTU5OTkxMSEng8Xnh4
+Pr169niUf+79z3wYBonwq9SQ8cyweAVVYGP/2xFoNRctOFytkn77bffDg4O
kjVit9vJenFuHwm9mhFk/jg+NJx14Ra3rmnW2punRkahlUWQOWGGeiM9PT2X
X85oZfYeDAS3kpxITG4ptIcCRECgoK4VfPxnK3E1rWsuuJBx0u7dGx8fT1tG
zlxvxNmDokn16EEhCDLXuLaMHB8fd1RHVygUK1asYNv9Doq9suGgq4QnS6Ft
JwxBR0PF6m7w8Z+tBMqK/RcvZpix/v7+33zzDZ/PF4lE6enpmZmZhYWFJSUl
dXV1SqWytbW1o6ODtowkS8O1Ojqx15jCjSC+gD4hxZPXf6o3P4bWFEEQBEEQ
7jlVX5i+9Dxo1XwFD0sxEJ8NWlMEQbyPEydOTE1NOde4sNlsFoult7e3p6en
ra2tublZoVDU1NQUFxcXFBTIZDKpVCoUChMSEqKjo/ft28cWRF1x1srIMiV4
SI0TiUzLgo5ownA4MgZ88Blk3+Eotkl7wQUX6HQ6R40LbHuE+CYNb3zkiV/a
y5dAa4ogc4VzvRHiPjnXWWX2izZdf6O4UQduIk9fxOruoNBwaA8FhujMQvDx
Z5Df7WKs+rtly5a4uDhabyQ9PT0vL6+wsLCqqqq2tpa2jKT1RsxmMzlZONdZ
pfVG0HdCEGSucU3hJhsR2Y7oI7gdO3aw7X4P/fEF8K2bExEq2g4FBkIbTxh4
hXLw8WeQW++9n23SPv7448RkO1f1LCsrk8vlSqVSrVZ3dnZqtVqj0UhcWeLQ
EreWOLeOR3DYMhJBfIQTdnvOhtvchnpkq687ZrFBK4sgCIIgCPfUPPXqSa3/
aJsGWjVf4efJSU/8sYLrtv+CZzQEQWbJtPaRY2Njg4ODNpvNZDIZDAaNRtPR
0dHQ0KBQKMrLy4uLi2n7yMTERJFIRNtH3nXXXWxRqXt2PAEeUuNERMrOgOBg
6KAmDFGyfPDxZ5Ct2x5im7SvvfYaWR0jIyNkpdBrTUwJQ3yKYXVL2uINbp3S
0rv/AK0pgswJM9cbUalUK1euZLMvX8angBtHTiRCIoP2TWAIPHJUrOoCH//Z
ypHciiVLlzHMWD8/v6+++kogEJBDQXp6elZWlmu9Eb1eT04TrvVGaFIl+k4I
gsw101K47Xb70NDQ4OCg2WzOyMhgs9fLV5wZXlwHvntzIqHCJGjjCUMoPxF8
8Bnk/YAwtklLvNPQ0FA+n0+reubm5hYUFMjl8urq6sbGxpaWFlrVk6ZwkzUy
PDxMYx2Oqp5orxHEF2h87wtPXv/pIvjQmiIIgiAIMicoX3n/JNbffz05VEOr
5kP0CtM8ccna/xUErSmCIF4GTQlztI90hEn7+/tNJhNtH9nU1KRSqaqqqioq
KnJzc7OysiQSSVJSUkJCQmxs7DfffLN06VKGwJSfn993ydnggTVOJDa/HDqu
CUPgkRCRSgs+/rOVQ9KCRf7+DJOWTPXq6mrXMCleayI+Qtl9O917pP7rh5RN
0JoiyJxAL5en/gOtNzI6OkosgtVqJY7Tzp07GSwLYdsfngK3jJyIsL4jICgI
2jeBgbiC4OPPILfcs51t0v72t7+Ni4sjxwFyKCBHg7y8PFpvpL6+npwaXOuN
0AqrtN7IL05Ar2kEQRYmrinczs/fDAbDzTffzLb77d73GfjWzYnwiqqgLScY
/Co1+PjPVoQN2ks2bmabtK+++iqfzxeLxVKpVCaTFRQUFBcX19TUKBQKWtWz
p6ent7eXpnC7Pn+DXs0IgswHY5pu6bKNbqM9hVsewpIUCIIgCLJQqXr8JVfr
n7vpLmi9fA75b19w65VlXnDT1OgYtKYIgngTzsFS18tNvV7f3d1N20fW1tZW
VVUVFRXl5+dLpVKJRCIUCuPj4yMjI5nvQK/91W3gsTVORNyoCw6LgA5twhAm
loCPP4M8/tIetkl7//33u15u0iQB6NWMIHNLDy/JkxcKqr2fQGuKIHPFDPVG
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
k9bf3//gwYN8Pp94/lKpNDMzs7CwsLS0lKwCpVLZ0tLS3t7e09PT29tLHKSB
gQFsQYUgyPzjHNOgJcIcKdxJSUkMWx/hrLPPjq5Qge/enMjRBBG08YQhTJQC
PvgMsvebALZJu3r16oiICIFAQFO4actIuVxeXV3d2NhITLZWq9XpdGaz2WKx
DA8PO1K4aVVPtNcI4iNU/m6XJ9EeS0E5tKYIgiAIgswh9h5Dqv/6aQ5Ax8HD
0Hr5Or18iSeuWndYPLSmCIJ4Ga4vaoeHh4eGhvr7+00mE20f2dTUpFKpqqqq
KioqCgoKcnJyUlNTk5OTExISYmNjv//+e7aLUcJX/FTwgBsnwiushI53whAQ
fFik7AQf/9lKcHbZ4iVLGWasv79/WVkZWSBkmWD4FFmonLDbcy673a3bKVt9
3TGLDVpZBJkTZmgZaTabH330UTa355Fnd4FbQE5EWNd2KDAQ2geBgbh84OPP
IDfffR/bpH388cd5PF5iYmJKSgqtN1JaWkrrjTQ2Np6qZSTWG0EQZH5wfubm
nMJNW0b29vZee+21bLvfnv3fgG/dnEhsQQW05QRDUNMMPv6zFX59xwWXrmeb
tG+++aZrCndtbW19fb1zCjfxZm02m3Plc0zhRhDfoT+v1JNLxro/7YXWFEEQ
BEGQuaXlk++mOQBl9+385cQJaL18HfIV5F99r1tvLXfjnT8fPw6tLIIg3oRz
+0h66Tk2NjYyMkLbR+r1+u7u7ra2tubm5tra2qqqqpKSksLCwvT0dIlEIhQK
4+PjIyMjn3vuObaY1eYbbvLGzoOuQv6K4Igo6JAnDKGCJPDxZ5CnX3+HbdLe
e++99NKTrBS73Y6XnsjCo/nDrz0JEnaF8KA1RZC5wjUlzJEwL5VK2czHirNW
RpTWg5s/TiRUkAjtfcBA/nDwwWeQv/90lG3Srlq1KiQkhHj7tAVVTk5OQUFB
RUVFTU2NWq0mpwONRkNOCiaTiSwN14R59I4QBJlrXKMZo6OjZC+yWq1kX9q/
fz/b7rdu85VCVRf47n368u8wRXgktPGEISojF3z8GWTnnrfYJu3mzZtjY2PF
YnFycrJMJiMmu6SkRC6X19fXq1Sqjo4OYrINBgMx2TabbXBw0DWagSlhCLLg
Iefb/GvucxvqST/zCrveCK0sgiAIgiBuODExMaxuGdPqfpl98I14BVkX3+rs
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
K2acf93JkVHqxQIwJwj5zA/ojfj4+PC5/bPOu0Be00wettxigRFR1FkDDaGJ
GvLN57A/vfUO36G94IILJBIJGxmp0Whc1BuB9ikA4LTxwy3ce/fu5fN+1/5q
N7nrdosp68y+AYHUwZMGSU4x+f5z2K9+yzmafOfOnayF+wdGRnZ3dwvfBWvh
ZlUIIdcVvh20cAOwQGiXxLry+s/w6vvUKwUAAAAAAP8tzV8cdiX369XkUq8U
AOBJiMVYgampqcnJybGxMTZiaWBgoLu7u6Ojo7m5+ejRo7W1tVVVVYWFhXl5
eWlpacnJySqVKiYmJioqKjQ09LLLLuOrgN2/90Xy8p1bLKbCeMjHh7qASoMn
lm2VBstFV/yM79B++OGHx44dGxkZET4W8X0uirGAltrn3nYlUexSpVCvFIC5
YlpLmKPeiNlsPu+88/h8/n6/UPKY5RaLSMujzhdo8PHzU3hgU19kqWH12nV8
h/btt9+WyWSxsbFqtTo9Pd1FvRG0hAEAThtiFUII2Y5a5YJfKi8vX7p0KYfr
81q8+FByLrn3douFqBKpgycN/iGhqnor+f7P1r6Iz+AbTS4c9a+//loul8fF
xSUmJqalpWVlZRUVFZWVldXV1TU0NAgZrNVq7enp6evrm6ZVjpYwABYIJ0fH
Mi64zmmpR7N+29TgMerFAgAAAACA/5aTI6NpZ1/jfGL4jfdQrxQA4HmwUhJ7
pTsxMTE2NsZKsjabrbu722KxTBsfmZ2dnZ6enpCQEBsby4TC3nvvPc4i2PLl
QTnl5EU8t9iCHe7gHxLmiZXbf0aqOE6swLp165qamsSSLLtCZSVZXKECEoZq
G5IWb3KaJRb96kHqlQIwV4j9YKfUG3nppZf4HP6V199IHq3cYip9m+/hIOp8
gYbIrELy/eew2x5+lO/Q3njjjY4jI3NycgoLC5neiF6vb25uht4IAICc72vh
7unp2b17N5/3u/fJ58hdt1sspuLogn1rFl1QSb7/HCaki3yH9uGHH2b9YGq1
OjU1NS8vr6CgwLGF22q1dnZ2ii3cIyMjbMozRkYCsHAwvPq+K6//2iNV1CsF
AAAAAADuoUuV4koG2BYooV4pAMDDcGwJm5ycnJiYYC1hfX19PT097e3tbW1t
RqPRYDBUVFSUlJTk5uZmZmYmJSXFx8crFAomFHbLLbfw1cF27L6DvIjnFlvI
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
aYjO15HvP4dd/b87+Q7t/fffL5PJlEqlWq3WaDRCUi0kFWVlZTU1NdMkwtig
6rGxMXFQNZINAMCc4qh7LIZs1sLNnox1dXVt3bqVz/u98OEX5K7bLSbJKaaO
nET4+MRUHCXf/9marNq04dzz+Q7tK6+8IpVK4+LiRIkwNuVZCNlGo7G5udli
sQgfBWvhFqc8O4ZstIQBML8ZqjMmLd7ktNpTuOt31CsFAAAAAAAeQ9Xjf3Wa
Yaas3jpps1OvFADgYYhV32mznAYGBtj4yLa2NpPJVF9fz4TC8vPzs7KyUlNT
ExISVCpVVFRUZGTko48+yldn2/LTbZ44efCUFhAWSV2opSFYHku++Rz2+31v
8B3am2++WRwMIV7U4pYWnBKzX7grXf1H3/uSeqUAzBU/rDcSHx/P54pXrVkb
XlxHHkrcYkFyFXUkpyFY4ZHvAl77KoDv0K5bty44OJjpjWg0mszMzIKCgpKS
Eke9EVEi7JR6I0gzAABzh9gPJoZsxxZum832/vvv83m/zZf/VOmBgpAzTVVv
9Q8JpQ6eNISnZpPvP4c9sJdzNPnWrVulUqlCoUhKSkpNTRVCtlarZVOeDQZD
U1OT2WxmEmHTRkayfjABFAcAmPcU7nzAebVn8abjeiP1SgEAAAAAgMcw0tji
yruDioefp14pAMAjEcdHOo5zstvt3d3d7e3tra2tjY2NdXV1FRUVxcXFTChM
rVYnJCTI5fLo6Ojg4OCNGzfyVdueOfAReanQLSYtrqGu1JIhLzeQ7/+s/78q
m9ZvPJfv0IaEhIjyHdPualH7BSJT/YOaM7c5Td4yN91wcmycerEAzBWnFCMV
9UauvPJKPj+89515kjxE5ZVRx3Ay5LoG8v2frclrWjZu2sx3aF966SWZTBYf
H5+UlJSZmSmk0yUlJTqdrqampqGhwWQyMb2Rvr4+IccQUnF0ngMATidiP5ij
qifTD7fb7Uajce3atXze74MIJbn3douFqTOoIycNvgGByjoz+f7P1oJydUuX
L+c4sYsWLfrnP/+pUChiY2NTUlIyMjKEkF1UVCSE7NraWuFbaGlpsVqt3d3d
Qsieph+OkZEALBCsYTGY6QMAAAAAAOYC44HPnaeaXhcONzRRrxQA4HmIN7aO
z4GZgkdXV5fFYmlubm5oaKipqSkvLy8oKMjKytJoNGq1WqlUymSyiIiIV199
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
JGw2W1dXl8ViaWlpaWxsrK2traysLCgoyMvL02g0arVaqVTKZLLw8HB/f/91
69bx1eVe/cKPvKjoFovO11HXdInw8Y2pbCTf/9laeLF+Ne9Qs6SkJEehMAGM
j1w4jDS2qJdc5DQly7/hbhwGML9hrbAnTpwQkoexsTGmN8L6yX/xi1/wedff
73uDPDq4xeRlBurYTIaspJZ8/2drqnrrlp9u4zu0TzzxhFQqVSgUQm6Qmpqa
m5ubn5+v0+mqq6uNRqPJZLJarZ2dnXa7XUith4aGWD85WsIAAKeNmS1hQshm
T8Da2trOPfdcPu+33y+U3Hu7xSLS8qgjJw0+fv4KD2zqiygRfsVzlp72798f
HR0dFxeXmJiYnp6ek5NTXFxcXl5eV1fX0NDQ2toqSoSJT8CYRBhLetESBsC8
x3jgc1cu4MwBkdQrBQAAAAAA85Pvvvkm54pfOs1Isy6+6dsTJ6gXCwDwMMTG
sGlCYf39/UwojHWFGQyGurq68vLyoqKi7Ozs9PT0xMTE2NhYiUQSERHx3HPP
8dXl/vO+uIW8tOgWC1bEUVd2aQiSq8g3n8OeffdjvkP7s5/9rK+vT3w4LHwy
4sNhjI+c95Tc9gfnRUKvCzHOG8xjvm9kpJA2CL7x8OHDfK51/cZzpZVN5KHB
LRYYGU0dmWk4Ep9Cvvkc9syBj/gO7bnnnhsWFvZ9IyOZ3ggbGcn6wYQvBXoj
AIDThhivp7Vwi++/9u3bx+f9tu24idx1u8WUerNvYBB18KQhMquQfP85bPdD
f+Q7tDfeeKPYwp2SksJUPae1cDOJsIGBAdbCzfrB0MINwAJhzNqZvOJSp9We
3Ctv+fbkSerFAgAAAACAeUuvJteVdwpH3zlIvVIAgIfhqBV24sSJycnJsbGx
4eHhwcHBvr6+rq4uq9VqNpuNRqNer9fpdCUlJbm5uZmZmUlJSfHx8TKZTCKR
hISEXHzxxXzVuYdfeJW8tOgWk+saqCu7ZETllZHv/2xNoW+78JKtfIf2008/
PXbsmPCZMLkPtIQtELqUya4kY3V/+Rv1SgGYQ2a2hLGRkXa7XUgYNm3axOdX
X/8qkDwuuMUiM/KpYzINPr5+imrPa+qTlDesXb+B79C+8cYbjnoj2dnZRUVF
0/RGenp6hHRa+ECm6Y2wnAGXywCAuWNavBZ/5gseqb+/v6KiYtmyZRyuz8vL
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
h9gSdvLkyampqfHxcSYUNjg42NfX193d3dbW1tzcbDAYamtrS0tLCwsLMzMz
NRpNfHy8UqmUSCQREREvvPACX73uzHM2SiubyEuObrEQVSJ1xZeGw9Fy8s3n
sH2ffM13aC+55JKenh72oHhiYmJyclKcCYUC8vzgm8nJ7Etvdpp3pa65YqLH
Rr1YAOaKH9Yb+fprThe6cdNmeY3nXU2e0gLCI6kjMA2hSWnkm89hj7/xD75D
u2nTJiHXValULuqNMB1RtIQBAE4nji1hTNWT/aLv7e195pln+Lzf9bfcTu66
3WLKulbfgEDq4EmDJKeEfP85bNfd9/Md2l27dkml0piYmMTExOTk5OzsbK1W
W1ZWVlVV1dDQ0NTUZLFY2tvbbTabELKFn/NiFzdawgBYIPQXlLnSD1bxyF+o
VwoAAAAAABYiPepMV/LV1n8foV4pAMDzmDk+cnh4+Pjx4z88PlKtVickJLDx
kaGhodu2beOr2v32qefJS45usZjKo4d8fKiLvjRIsovI93+2pqq3XnLl1XyH
9t133xXfFGN85Pyj8YOvXEq6DoVSrxSAOeQH9EZaWlrOOeccPv/598AIcv/v
FotIy6WOvTT4+PkraprJ93+2Fl6sX7VmLd+hPXDgABsZ6aLeCOsHO/kfWMc4
9dcMAJjPzFT1ZFOehd/ydru9oKBgyZIlHK7Pe8kSX00+ufd2i4UoE6iDJw3+
R8KE37zk+z9b+1yVumjRIo5Du3Tp0q+//nrayMiioiKm6slauLu6unp6eqa1
cKMfDIAFghAsc6/a7bTUk7zi0rG2durFAgAAAACABYr253c4TVnTz7v2m/Fx
6pUCADyMaS1h7FkxGw5lt9u7urra29tNJpPRaKyurtbpdPn5+bm5uRqNRq1W
K5VKmUwWFhb2wQcf8BXulixdFpjlkW9XZ1q4Joe67kuDf0ioymAh3//Z2kfR
8RwnVmDNmjXCFyEOh5r6f+ydd3jb1dX4H9vZISFJkwAJM0AZZZQRVimrrJeX
VaAlQCmU0ZaGDaFlU0pIaWgAz9jxkmRtb9mWZVmyZFuW5SVZkmV5SZaHbHlv
Z/L87st9Hv302CGSL7JPFJ/Pc/70H0fX955zvueee86hQzSNTIA+zchPZaqj
O2/VRX4jLvUv7jp25Ai0sggyj8woCSO2jpaEeTyeV199lc14XnXzr8Etf1BE
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
BJlvZpdwT0xMEFtES7iTk5MZTB/h9J9t5FXZwK13UGQ/TwjtPGE4IM0BX3wG
2fnF12ybdtOmTUlJSRKJJD09nZZwl5aWVlRU0BLulpaWtra27u7unp4e+q2N
IyMRZLHR+Ol/A3n91xaVDK0pgiAIgiAIgswLEw5X7tLz/YbEhkdegNYUQZDQ
w5umPnLkyKFDhw4ePDgxMeEdH9nV1dXR0dHc3NzY2GgymWpra7VarVqtLigo
kMlkYrFYIBCkpqZGRUWtXr2aLTf4WYoYPLEZFEnTVkHnlWGIjI4RG1vA13+u
Eq+uWr5yJcOODQsLI0dgaGgIS8IWHv39f/CfJAw7e6iyDlpTBJlfTtBvhLlI
+8HnXga3zEERUXXjd5GR0L4RhrTSavD1Z5Bf3HAz26Z9/PHH+Xw+CUdzcnJI
XEr7jVRVVf1YvxEc+owgyAJD7Qwt4aYlYaOjo8Rl07dXF154IZv1e/XLfeCm
OyjCLS6H9pxAREaJauzg6z9X4dc0bTjjTLZN+/bbb/N4vIyMjOzs7MLCQqVS
qdPpKisrTSaTxWJxOBwul8vtdns8nuHhYXJGpn4AS8IQZJEw1enOW32x32yP
6rI7jh05Aq0sgiAIgiAIgswXTf/6NpA70JE6C7SmCIKEJN5eYbTfCMHbb8Tt
djudTu/4yMrKSp1OR8dHZmVlpaen83g8Dofz7LPPsuUGz7vkMkkITh48rsSm
cKGTyzDEC6Xgi88gT7/xHtumvemmm2i/kfHxcbxcXjC6MwoCeTRqfHkXtKYI
Mo+cuN+ISCRiM2unnb4utcIMbpaDIvF8MbRXhCFBnAm++Azy5t5otk27YcOG
xMREqVSamZk5e2Rkc3Nza2vrjH4j3stlWlQJfZoRBDmVof6aWhv68GpyctL7
8IqYpo8//pjN+m27/MpQbAg5W6SW9uiERGjnCUNKQUj2ZX30RcbR5Jdddpl3
ZKRMJlOpVBqNxmAw1NTUnLiEm3azx66eCHLKY3jkhUCyPX3FZdCaIgiCIAiC
IMg8cnhktGDDFX4D4/Lbn4DWFEGQkGR2SRh9v9zX19fb2+tyuRwOh81mM5vN
BoOhoqJCpVIVFRXl5ORkZmampaVxudz4+PgtW7awZQhfeP+f4OnNoIigoh46
uwyGoDL0agkEdc2btpzNtmn3799P3y/7jqDCkrD54+j0tPKCm/0GQvnrLj/Y
NwCtLILMIyfoN9Ld3X3ppZey2bS/fLoH3CYHRXhqPbQ/BCIyUlQdekPEhMaW
zVvPYdu0r732GglBSSBKwlGFQqFUKsvLy/V6Pe030tbW1t7ePqPfCDkvWBKG
IMjC8GMlYUNDQwMDA8RMrV27ls36fcHLALfeQZHknEJo3wlDVNx+idkBvv5z
lTilftny5Qw7NiwsbPfu3UKhUCwWy2SygoIC2tWztraWuOzGxsbm5ubOzk4S
x9ISbt9e3CTixYdXCHLK06/WBVIPVvPMa9CaIgiCIAiCIMi808FNDyQ8dqVK
oDVFECRUoeMj6RWzb8qajo9saWmx2+1Go7GmpmbG+EihUMjhcN599122tPaa
des5egt4kjMokpiZB51jhiGOkwa++Ayy67sEtk27devWzs7OGeMjsVfY/NH4
8d5AoiBHTCq0pggyX3zvg3dkJLE/IyMjw8PDHo9n9+7dbAbt3IsvEZud4Ab5
p4vU6opJTIb2hzCk5CnB159Bfve3N9k27cUXX8zj8Uj8mZWVRWLR4uJiEpfq
9fqqqqqGhgYSr9IRVH19fSSO9e3q6e03giVhCILMK9TO+Hb1JIaImKP+/n7i
snfs2MFm/W578LfgpjsoIja2REbHQDtPGNK0VeDrzyDb72IcTX7ffffx+fzM
zMzjjoycXcLt++QK+4MhyCnPsSNHVJff6TfVk7fqoqmObmhlEQRBEARBEGTe
IRFy8c9/7TdCLr74VhyqjiAIGzRrTV8xT01NTUxM0PGRbre7q6urra2tpaWl
vr6+rq6uvLxco9EUFhbm5+enp6dLpVIul5uSknLdddcx5gl3PAue5AxOcruu
OTIqGjrNDANHoQVffwa5/Pob2Tbtrl27BgcH6UUzloTNK5PODtmKC/2GQCVX
3f390aPQyiLIfHHifiONjY3r169ns2afJgnBTXFQJFlWBO0JYYiKjZPUt4Gv
/1wloaRq+cqVDDs2LCzss88+EwqFJP6UyWRyubykpESr1dbU1BiNRtpvpKOj
g8Su5Ghg8TaCICBQf+3b1ZOWcPf19alUqvDwcAbrt2zFiniVAdx6B0XihVJo
5wlDbAoXfPEZ5HOulGHHElatWhUTE0NLuHNycpRKpVqtrqioMBgMFovFZrPR
Eu7e3l5yNMgZIR/XWBKGIIuK5j3Rgbz+a9kbB60pgiAIgiAIgiwQPblFgQTJ
9n/ug9YUQZCQxHd8pO84qr6+vp6eHjo+sqGhwTs+sri4WKFQZGdnZ2ZmCgQC
Lpe7Z8+eJUuWMKQKI5Ys+S6vBDzVGRThKLTQmWYYovcnSEOwz8zXGYVhYWEM
m3blypUmk+m4b5mx90hwqXzo+UDin4HSSmhNEWQeoUUsvv1GJiYmxsbGBgYG
iJt+/vnnGewY4aZ7HwC3w0ERiak1MiYW2hPCwFPrwdefQX71Pw+xbdo777yT
xJxSqTQrK0sulyuVyrKyMhKX1tXV1dfXt7S0tLW1dXd3k9h1aGiI+OjJyUkc
GYkgyILh669nl3C73e6bb76Zzfo99fq74KY7KCKoNEN7TjAEFfXg6z9XkVja
L7j0F2yb9rnnnvOWcM8YGWm324nLnl3CTb+s6QmCPs0Igswv0z2e/LWX+m+A
cNGt5AMYWlkEQRAEQRAEWTgMj77oN04u2HDF4eERaE0RBAk9vCVh3vGRvuMt
Ojo6nE6n3W5vaGiorq6urKzUaDQqlSonJycrK0skEqWlpSUnJz/0EOMF3zW3
3gGe7QyKSC3t0fEHoJPNMCRm5oGvP4Pc++SzbJv2kUcewevm+cZTWBJIPVjt
H9+A1hRB5hd6xXzcsm2tVhsREcFgxJYsXRajKAc3wkGRBHEmtA+EITYpVWp1
ga//XGWPMJfN865YsSIqKkogEGRmZpIQtKioyNtvxGw2kxiV9hvp6ek5br8R
7A+GIMh8M7skjH5TDw4Oks/q2NhYNuu38awt/NpmcOsdFInjpEE7TxhC9GP5
pY++YNu0W7ZsSUlJkUqlxGXn5+cXFhZqNJry8nLfEu6uri63202/qScmJqam
pmhXT/ymRpDFQPWTrwSS7enNV0FriiAIgiAIgiALyojRmhPmP1Sue+EdaE0R
BAlVaPr68OHDhw4doi+ah4eHBwcHe3p6uru7W1pa7HY7HR9ZVlbmHR+ZkZEh
Fos5HE5sbOzatWvZcobvRR4AT3gGRXglldD5ZiCiosS1TeDrP1dJKjOuOm0N
26Ylm5+cjrGxsYmJCd8XzXjpHBSOHToUyNTsvDWXTLt7oZVFkPnCd2Qk9c50
uLPXO99+++1sFuzxv7wGboGDIkKDFdr/gcHX1YGv/1xFanVdfOUv2TbtU089
xefzScyZk5NDXDDtN1JVVVVbW2uz2ZqamlwuV2dnZ19f38DAwGzvDH2aEQQ5
9TnByEin03n22WezWb939sWBW++gyKJtqR0ZFS2uC72iPq6hYe2Gn7Ft2vfe
e8+3hLu4uBhLuBEE8TJQXhVIPVjVE3+G1hRBEARBEARBADC/8YnfaDl36fkT
be3QmiIIEpLMuHSenJwcGRkZGhryeDxut9vhcLS2tprNZqPRWFFRUVZWplAo
5HJ5VlZWeno6j8dLSUl58cUX2XKGW87fJjK1gac9gyLxQil01hmGBFEG+OIz
yJ/e/4xt01599dX9/f3kjIyNjWFJWNBp+uK7QJKErfsSoDVFkHlkdr8ROjKS
9htJTk5mM1/rNm7mVTWCm9+gyH6eANr7wZCYngu++Azyyr/2sm3azZs3kw0v
FoszMjLy8/NJCKrVanU6HQlK6+vrm5qaSIxK+42Q0zE8PIz9RhAEWXh8v6bJ
14H3a7q3t3fXrl1s1u/Sa7eDm+6giNTsjI5PgHaeMKQqNODrzyD/88zzbJv2
uuuuS0tLE4lEWVlZMplMrVZrNJrKysrq6uqGhga73e50Ojs6OjweD4lmR0dH
x8fH6dc07VqPX9MIcmrz/bFjJb+812+qR7biQrzhQhAEQRAEQRYn0909spUX
+X9D8dhL0JoiCBKS+L5rnp6enpqa8o6m6unpcblcDoejoaHBYrEYDIaKigq1
Wq1UKnNzczMzMwUCAZfLTUhIOO+889gyh8+89Q/wtGdQZDF3LEnTVoGv/1xF
ZGrbcv42tk27b9++4eFhckbwXXNwmep0562+2G/Ao7r09mOHD0MriyDziHes
84yRkf39/V1dXRdccAGb7Xrt39+C296gCEdZBu33gIiKEtXawdd/rpJWbV+/
6Qy2Tfvmm2/y+fyMjIzs7GyFQqFSqXQ6HQlH6+vrSVza1tbmdDrdbrfH46Ej
qEgQi2OdEQRZMGaXcNOe28QiDQwM1NbWrly5ksH0hYWF/UeaD269gyKJWXnQ
vhOG6PgDUks7+PrPVaIKtBFLljBs2oiIiK+++kooFEqlUplMJpfLS0pKtFpt
TU2N0WhsbGxsbm7u7Ozs7u4mR4McEHJMyGGhJdzY1RNBFgOt+xICef3X9MV3
0JoiCIIgCIIgCBgBhs29ecXQmiIIEnr4prLp1bNvN5LOzs729vampiabzVZT
U2MwGLRabUlJSX5+fk5Ojlgs5vP5ycnJ77//PkPmkLDqtDVJZUbw5GdQJClH
Dp17hiE2mQO++AzyQVwq26bdtGkTORTebiR49Rwsqp74cyDRTp+yFFpTBJlf
iDHxDnSe0W/ko48+YjNcF115tdTqAje8P12klvbohERovwdDqlwNvv4M8vCf
/sK2aa+++mrffiMqlYr2GyHhKPYbQRDkZGD2dzQxRMQcDQwM9PX1Pfroo2zW
7+7fPQ1uuoMi4tqm76KioJ0nDLySSvD1Z5Brb7uLbdM++OCDXC5XKpUSly2X
y5VKZVlZWUVFhdFoNJvNLS0tbW1tbrebhLK0hBu/oxFkUXGwf7Bg/S/8pnqK
zrvx6NQUtLIIgiAIgiAIAsaRyanCs671Gzlrrn8AWlMEQUIV34EX9HXz8PDw
4OCg2+3u6upqaWmx2+0mk6m2trasrEyr1SoUivz8/IyMDLFYzOVyU1JSbrrp
Jrb84R2P/g48+RkUkZhaI2NiodPPMKQUqMDXn0Guu/03bJt2586d5HSMjY1N
TEz4vm7GC2hm+tW6QOrBqn//V2hNEWTeoSVhs/uNmM3mNWvWsFmtLwXZ4CY3
KLJoq6+j9sdLzU7w9Z+rxBbpli5bzrBjw8PDv/zyS99+IxqNpry8nASiJBwl
Qam330h/fz96ZARBQKB2xrer58jICPmI9ng8eXl5bP565erTkkrrwK13UGR/
mgjaecIQL5CCLz6D/CM6iW3Trl27NiEhQSAQZGZm5ubmKpXKkpISvV5vMBgs
FovNZnM4HC6Xq7e3t6+vj5yR0dFR2tWTdtvGkjAEOeWp/eMbgWR73JkF0Joi
CIIgCIIgCDDdGQWBBM+OmFRoTREECUlmj4/0JrTdbnd7e3tbW5vFYjGZTJWV
lTqdTqVSKRSK7OzsjIwMPp/P4XC++uqrpUuXMqQQw8LC9qbLwVOgQRFucTl0
BhqGqLj9knoH+PrPVb7LK2EbjbFs2bKqqiqa0MbxkT8dYnrUv7jLb5CTt+qi
SVcXtLIIMo94+40QezK738iTTz7JYK8IdzzyBLi9DYqIjS2R0dHQHg8GrkoH
vv4Mcv2d97Bt2vvuu292vxG9Xk8CUavV2traSuLS7u7unp4e7DeCIAgUvo+q
iAkihsj7qOqaa65hs37PvfcxuOkOivB1RmjPCYbQYAFf/7mKuN6xddtFbJv2
pZdeEggEEokkJycnPz+/pKSktLSUfCzX1tbabLampqaOjo6uri7fEm76BY0l
3AiyGBiuNuWE+b/SqnzwOWhNEQRBEARBEAQe8oFccvU9fuNnxTnbj05PQyuL
IEjo4S0JO+41dEdHh9PptNvtDQ0N1dXVdHykWq2WyWRZWVkikSgtLS05Ofmx
xx5jyyJefv2N4FnQoIjU6oo5kASdhIbhQHoO+PozyEPPv8y2ae+9994fu4bG
tPZcafl6fyB17817oqE1RZD5hfYHo+XZUz9Ay7OJIy4qKgoLC2MwVstXroxX
V4Eb26BIvEAC7etg2J8mAl98BvksRczmYVevXh0XFycQCEiQmZubSzY/iTkr
KipICEr7jZCg1OVy9fT0ePuNYHk2giALie/ISNrVk3wRjI2NDQ4O9vf379u3
j836nXnu+UJjK7j1DorEJnOgnScMSTkh+djt2Xc+YNu05513XmpqqlgszsjI
yM/PVygUWq1Wp9MZjcb6+vqmpqbW1tauri63201OB4lpx8fHJycnsYQbQRYJ
xFdqb3jQb6ond+n54/ZWaGURBEEQBEEQ5KQgwJlKDe/thtYUQZDQY3Za23dY
VXd3d2dnZ3Nzc2Njo9ForK2tLS8v12g0crlcJpNJpVKhUMjhcOLj4zds2MCW
S3zjq0jwRGhQJK20GjoPDURkpKi6EXz95yocvWXtesZNm5GRQQ4ITWvjsCpm
pnv78tde6je8UV74q6MHD0IriyDzCy0J8w5x9vYb6enpueGGG9gs1dNvvAdu
aYMiAr0Z2s+BIdDXg6//XEViaT/v55eybdrnn3+ez+eLxeIZ/Ubq6upsNhsJ
R10uF4lLsd8IgiBQECPj7bBNn1ONjo6OjIwQu+RwODZv3sxm/T6ISwW33kGR
1AI1tOeEITImRmxsAV//uUqKrn7VmrVsm/bDDz8kLpt8F2dnZysUCpVKpdPp
DAaD2Wy2Wq1tbW3t7e1ut9vj8ZCYlpwRHBmJIIsKRywnkMusxo/3QmuKIAiC
IAiCICcRtX94zf9YpdN+ftDTD60pgiAhie/wi+np6cnJyZGRkaGhod7eXrfb
3dbW1tLSUl9fbzQa9Xp9WVmZUqmUy+VZWVnp6elpaWmpqamvvPIKWy5x41lb
BXXN4OnQoEiCOBM6Gw1DPF8MvvgM8td/fsW2aS+99FJyNEZHR8fGxuhl9JEj
R/Ayeq7UPOM/tiHSm1cMrSmCzDvekZFTU1Pj4+PefiMxMTFsZmrTlrNPGd8a
l8qD9nIwJGXlgy8+g7zw/j/ZNu3WrVtJPCkSiUhsSfuNlJaWVlRUkODTbDY3
Nzc7HA7ffiO0VycWZiMIsjBQC+Nbwk1HRnq/mnfu3Mlm/a6+5TZw0x0UkdQ7
ouL2QztPGLjKcvD1Z5C7HmMcTX7LLbekpaURl52VlSWTydRqtVarNRgMtbW1
DQ0Ndrvd6XR2dHT09fUNDAyQr2YS3Hq/mrEkDEFOeQ4Pj8g3XeU31VO45boj
4xPQyiIIgiAIgiDIScS4vTUn4ly/sXT1k69Aa4ogSEhCU9yz3zv39fX19va6
XC6Hw2Gz2SwWS3V1tV6vLykpUSqVdHykQCDgcrkHDhy4+OKL2TKKT/z1dfB0
aFBEVG37LjISOiENA0+tB1//ucr/dTK55DK2Tbt79+7Z752PHj2Kye0AGdRV
54T5rwczPPICtKYIMr/49hshxoSYFG+/kfb29q1bt7LZqF3fJYDb2KBIqkID
7d9giIyOFodgUR9Hb1mzbj3bpn3vvfeO22+kvr6+oaGBBKJ0ZCT2G0EQBARv
b21ic2b31iYfyMuWLWMwfeEREd/mqsCtd1DkQHoOtPOEIeZAktTqAl//ucp/
s4rCw8MZNu3SpUv37dsnFAqlUqlMJpPL5RqNpry8vLa21mQy2e325ubmzs7O
7u5ucjSwtzaCLEKML+8K5PVfd0YBtKYIgiAIgiAIctJh+/Ar/+F0+DmjVju0
pgiChB6zx0dOTEx4u5R0dna2t7c3NTXZbLa6urqqqqrS0tKSkpKCgoLc3FyJ
RCIQCJKTkz/55JOwsDCGpOLylSvj1VXgSdGgSEqeEjonDUNMYnIoZsL/mSph
2LGEdevWtbW1DQ8P0xQ3OTWHDx/GkrAA+f7YsZJr7vMb1ciWb5todUIriyDz
ywn6jbz99ttsBury628Et65BEanZGbU/Htq/wcBRaMHXn0Huf+qPbJt2+/bt
tN9IdnZ2Xl6eSqXSaDSVlZU1NTVWq9Vut5NAlISjfX19JC7FLp0Igiw81F/T
Hkf0CRX5CiDmaGBggJime++9l836PfjHl8BNd1BEVN24aN9GpZVWg68/g/zi
hpvZNu3jjz/O4/GkUmlWVpZcLlcqleXl5cRlm0wmOjLS4XB0d3f39PSQgJaE
tbSrJ/1epiXc6LUR5BRmxNQQSFuD8tufgNYUQRAEQRAEQU5GDg0M5a+91G9E
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
Kgo6UQ0DR1kGvv5zFanVdfFV17Bt2o8++oi+g6bjI+k7aOwVNpv2BH4gAUzD
P76E1hRB5hfiZIl98O03MjY2Rv1sa2vrpk2b2GzRB3Gp4LY0KJJSoIL2YzBE
xsRKTK3g6z9XSSozrjptDbMDTUtLS09PJzGkXC5XKpVlZWUktjSZTCTObGtr
IzFnd3d3b28v8bMkHCV+lhwZHEGFIMhCQkvCaA/tiYkJWsI9MDCg1WojIiIY
TN+SpctiCkPvc+m4kiDOhHaeMMQkpZDvR/D1n6vsEeay+esVK1ZERkaKRCLi
sn1LuGtra4nLttvtJILt7OykIyNpD23isr09tLEkDEFOeXS/edJ/tif8nOFa
M7SmCIIgCIIgCBIymP7yd79htmz5tqmObmhNEQQJPXzHR9KSMJr6HhwcHBgY
cLvdHR0dzc3NjY2NRqOxurq6rKyspKSkoKAgNzdXIpEIBILk5OR//etf4eHh
izxDnipXQ+eqYYhOSJRa2sHXf8Ey5Keddho5DsPDwzT1Ta+qsSRsBoeHR+Sb
rvIbvRRuuQ7bnCKnPDP6jdBunMTJ9vb2vvLKK2yG6LrbfwNuRYMikvq2qNg4
aD8GA7dYB77+DHLnb3/HtmlvvfVWHo8nFAqzsrJkMhkdGUn7jdCRkU6nk8Sc
/f395HSQM0Kc7MEfwMtlBEEWhtldPWkJN/ko7uvru/3229ms32N/fg3cdAdF
hFVWaM8JBr+8Dnz95yo/5Q3UU089NaOEu7y8vLKy0reE2+12e0dGYgk3giwq
OtMyAnn9Z379Y2hNEQRBEARBECSUmGzvlC3f5jfS1v/vH6E1RRAk9JhdEjY5
OTk+Pj40NDQ4ONjT09PV1dXa2mq3200mU21tbXl5uUajKSwszMvLS09PF4lE
qampSUlJ99xzD1u+8ZS515aanVH746HT1TAk5cjB159B7niU8V57x44d5ICM
jY1NTEzQ19C0URj0aT6JqP/bB4EkCbtEOdCaIsi841sSRj3s8PDwwMBARUXF
smXLGExQxJIl3+WVgJvQoMgBaTa0B4Mh5kByKPYb2ZsuDwsLY9i0ZKt/++23
AoFAIpHk5uYWFBSUlJSUlZVVV1cbjcbGxsbm5maXy9Xd3U2OBok/iYel/Uaw
JAxBkAVjdlfP0dFR4rL7+/s5HA6D6SOs27iZV9UIbr2DIvt5AmjnCcOB9Bzw
xWeQV/7FOJp806ZNSUlJfD4/IyMjOztboVCoVCoStVZVVZnNZpvN5nA4iMvu
7e0lR4OWhNGRkbR7NpaEIcipzZHJKcU52/2mego2XHFocAhaWQRBEARBEAQJ
MZq+jArkanWoygitKYIgIQlN3HkT4LSHyfDwsMfj6enpcblcDoejoaGhvr6+
srKyvLxcpVIpFIqcnJzMzMy0tLTU1NRvv/129erVbFnHT5OE4CnToAhXpYPO
WMMQGR0trmsGX/+5ygFN9YpVqxh2bFhYmFKppGOtpqamyJHxJsDxwpowUm/L
iTjXb9BSdtvj0JoiyPxygn4jxL3efffdbE7z1Jm5XG37LjIS2oPBkFZaA77+
DHL59Teybdrf/e53AoHA22+kqKiotLRUr9cbjUaLxTKj34h3ZOThH8DLZQRB
FobZJdy0q2d7e/sFF1zAZv1e2/MNuOkOinCV5dCeE4ioKFGtHXz95ypp1fb1
m85g27Svv/46LeHOycnJz88/cQk3cdnkpNCSMCzhRpDFgPXdfwVyReVKFkFr
iiAIgiAIgiChx5GxcfnGK/3frv7qUWhNEQQJSeh1m/faenp6enR0dGRkpL+/
3+PxdHR0OJ1Ou91utVqrq6v1en1JSUlxcbFMJsvKyhIKhTweLzEx8dlnn2XL
Op578SVisxM8cRoU2Z8mgk5bwxAvkIAvPoM889Y/2Dbt9u3bh4aGyBnBkrDZ
lP36Mf9JwohzR802aE0RZH45Qb8RiUTCZnzWrt/A0VvAjWdQJJ4vhvZdMByQ
ZIEvPoO88VUk26b92c9+RqJEEi7SfiOFhYUkhtTpdAaD4bj9RsgxoZfLR34A
S8IQBFkY6LfwoUOHiP2ZmJgYGxsj0X5fX98HH3zAZv0uvOKqUGwIOVuklvbo
hERo5wlDaoEafP0Z5JEX/sq2aa+66ioOhyMSidLT0/Py8ojL1mg05eXltbW1
JpPJbre3trZ2dXX19PQMDg4Slz0+Pk6ruLEkDEEWA+MtjkAG2Wiuvf97jN4R
BEEQBEEQhIlOfmZArzCShNCaIggSeviOj6RpcO9wq8HBQbfb3dHR0dra2tTU
VF9fX1dXV1ZWVlJSIpfLZTIZHR/J4XASExO3bt3Klnv80z8+BU+cBkUE+nro
vDUYAr0ZfP3nKkJjy+at57Bt2v3795MDMnt85CJPg3dw0wMJVyxvfQatKYLM
Oz/Wb4S41EsuuYTN8vz1n1+BW86gCFddAe21gIiMFFXbwNd/riKoa954FmOM
9/rrr9N6sAD7jXi9Kl4uIwiyMPxYCXdfX5/FYlmzZg2b9dvND8kC4NmSlCOH
9p0wRO2Pl4bgy7XYIt3SZcsZdmx4ePju3bvT0tIyMzOJy6YjI2kJd319fUND
Ay3h7unpmd3VE0u4EWQxoH/gWf/ZnrCzB/W10JoiCIIgCIIgSKjy/dGjqsvu
8Bt4K7fdcuzwYWhlEQQJMX6sJGxkZGRoaKinp6erq8vhcLS2tlosFqPRqNfr
S0tLi4qKCgoKMjIyJBIJl8tNSUl555132BLmp52+LrUi9AqKjp8zz8qHzl7D
EJfKA198Bnkv8gDbpt2yZQs5F2NjY+SkTE1N+fYzWbSX10fGxgu3XOc3VpFv
vvrwyCi0sggy7xy330h/f//nn3/OZnbOu+QyiaUd3Gz+dJFaXTEHkqG9Fgwp
eUrw9WeQJ155g23T/vznP+fxeGKxOCsrK/B+I1gShiDIQjK7JIx+BXs8nh07
drBZv9sffhzcdAdFxMaWyOgYaOcJA1elA19/Brn+znvYNu19991HXLZQKCQu
WyaTFRcXl5SU6PX66upqq9VKXLbT6ezo6CDngkSz5IyQyNbb1ZP4aywJQ5BT
m+70/EBe/5n+8ndoTREEQRAEQRAktOktUAcSezd+8jW0pgiChCT00o0mw73j
I4eHhwcGBrzjI202m8Vi8Y6PVCqVdHykQCDgcrnJycnbt29ny0De++Sz4OnT
4KTN65ojo6OhE9gwpCo04OvPIL+44Wa2Tfv222/T8ZGTk5NTU1P0fTTNh0Of
Zhgsb30WSKDSwZFCa4og88sJ+o00NjaefvrpbDbnn6khOaJ3tiTLiqD9FQxR
sXGSegf4+s9V4tVVy1euZNixYWFhn3/+uUgkyszMzMvLo/1GysvLKysrT9xv
BC+XEQRZGLwPo2aUcNNPYGK1iB1jsH7EZhLLCW69g+MCBFJo5wnD/jQR+OIz
CIkVGXYsYfXq1fv376cjI2UymVwup1096+rqiMtuampqbW3t6Ohwu92+JdyH
fgBLuBHklOfowYPKbbf4TfXkn37ZQU8/tLIIgiAIgiAIEvJUPfFn/+H3ussP
DQ5Ba4ogSOjh2yvs4A9MTEyMjo4ODg729/d3dna2t7c3NTU1NDTU1tYaDAaN
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
kuqNHD58mG1rb9y6TeyDT5PTTVprD4mKgY4MMESnZoPPP4P9cf+/2Bbt1q1b
ExISRCJRSkoKpzdSUVGh0WjIsa2xsZEc4ahEWF9fH9kjtJgZW0YiCDJncCVh
VJKa3jRpl2cSsvfu3cvm/e74zS5w1+0VE9c0BYaEQAdPGOILKsDnn8HI2mNb
tDt37uTxeFKpVCaTZWZmKpXK4uLi8vLympoaTiKMdnmeErJpCTeWhCHIPOZk
Z3f6T650m+rJ3bbj+/Fx6MEiCIIgCIIgCDIrnOzoSl9+udt7gfqxv0CPFEEQ
X4UrCaNCYWNjY8PDwwMDAw6Ho6urq7W1tbm5uaGhQa/XV1dXl5WVFRUVZWdn
KxSKpKQksVgcFxcXHR193XXXsWVHf/fci+CpXe+k9LWmwKBg6OQ6DHE5ReDz
z2Dbb7yFbdG+++67tP0W7eUxPj4+2yVh3Rn5ntSDaf+0fzZ+O4KcO0zXG6Hi
lk6ns6+vz2w2r127lm1ffxCRAO6UvGIxilzomABDUGiYRN8MPv8ztQiVZtny
FWyL9sMPP3TVGykoKCAnNKo30tjYaLFYyBGOSoRN0RvBx2UEQeYG1xJuqupJ
JcLINZO4LH9/fwbXt2Tp0jBlGbj39oodFyVBB08YQqPjwCefwT5LYGxNft55
54WEhAgEguTkZLlcrlQqyfovLy+vqqoyGo0NDQ0kZNvt9s7OTrI1uJA9pcsz
Rm0Ema9UPfmKJ9me7ox86JEiCIIgCIIgCDKLWI6Ee3Q1UORBjxRBEJ+E6x3p
KhRGP9/u6enp6Oiw2Wxms7murk6v11dWVpaWlubl5WVnZ6ekpCQlJfH5/Li4
uE8//XTRokUMCdKAxYuDMgrBE7xesdjMAuj8OgzB4RFSYwv4/M/UDksVfn5+
DIt2+fLlRqORfr5N9supU6dmtQPX9+Pjudt2uD0GpP/kypOd3V7/7QhyTuHa
MpLqjQwPD5PN6HA4SMB66aWXGHY04ZZ7HwD3SF4xib45KDQMOibAwMvzyQqB
X+1+nG3R3n333TweTyKRJCcnu+qN6HQ6EqGamppaWlpoPRjVG5neMhJ6NyMI
Mp9xLeGemJggzmd0dJSKUROn1N3dvWPHDjbv98Sr+8Fdt1dMWGmEjpxg8Etr
wOd/piattW+9+hdsi/aZZ57h8/lisVgulysUClrCXVVVVVNT09DQQEM2lQhz
Op1TQjaWcCPI/KavuNKTRx/1E/ugR4ogCIIgCIIgyOwyOTqWddGNbm8Hqpt/
Cz1SBEF8Epqxp4/sVCiM68PV19fX1dXV1tZmtVpNJlNdXZ1Wq62oqFCpVLm5
uWlpaSkpKSKRiM/nR0VFPfjgg2w50pt+tRM8x+udRLGhJTj8OHSKHYaolAzw
+Wew+x57im3R7tmzp7+/f2hoiGyWsbExsnFoxp7g9R1q+uyoJ0lCyzcRXv/V
CHKuMUVvhGxAsg0HBgZ6enpKSkoCAgIYtvP/ViYXgbsjr1iERAYdDWAIiYqR
1trB53+m9qUknS0GLV26NDAw8Cx6I+TYZrfbaT3YmfRGoHczgiDzmemqnidO
nCC+iHZ5JjdHNu93wfoNfI0J3Ht7xcJ4fOjgCUNkUir45DPYyx8fYlu0GzZs
IAteLBYnJSUpFIrs7OyioqKysrLq6mq9Xm82m0nIpl2eHQ4HVaImt0sM2Qiy
ECBhsuC6X7tN9aQt23rCaoceLIIgCIIgCIIgs05HosKT52BraBz0SBEE8VVc
q8I4obD+/n5OKMxisZhMJp1Op9FoiouLCwoKMjMz09LSpFKpUCiMjY0NDg5e
uXIlW6b03bBY8DSvVyw+vxw6yw5DYFCwuNoMPv8ztchC7XkrGBdtTk7OwMDA
yMjI6Ojo+Pg4Tdp7XStsrK0zfcU2tweAvJ/f8/3EhLd+KYKcs9CSME5vhPaf
cjqdnZ2dO3fuZNvLj/z5FXBf5BUTquuOBgZCRwMY+MVa8PlnsCuvv4lt0T75
5JMCgUAikaSmpmZkZOTn5xcWFqrV6urq6vr6erPZbLfb29vbaf8pV70RfF9G
EGRu4ErCOFVPcrWkHxwRB7VlyxY277f/y0Bw1+0Vi1MWQ0dOIIKCxFrfK+qL
V9evWXch26J96623+Hx+UlJSSkpKdnZ2Xl5eaWlpZWWlXq+vq6trbm622WxU
1ZMcaMk2ISGb1oNRVU8M2Qgyj7F8fdyT5x7TfwKhR4ogCIIgCIIgyFzwww8/
ePLZSPamW747eRJ6sAiC+CRT2keOjY1xQmHd3d1tbW0tLS1NTU1Go1Gn05WX
lxcXFyuVyszMTJlMJpVKeTxebGzs3r172TKlP7vscrHeCp7s9YqF88XQqXYY
yB8OPvkM9tw/32NbtDfeeCPZHUNDQ8PDw7PXPlL9+EueJAl7c4u99RsR5Nzk
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
uWtoPz8/759KfHz55Zd33HHHmb6MfvDpv4ryyk+V0GSltT/4+LDOxGxwS+/g
qR/r77lPWDBs3rwZfcWJiYnJyclYb8RkMoGCVFVV1dTUjK03wrWMJEsYQRDM
GVXJk2vu3NnZCZu+hoYGkOaKigrQZRTl9PT0tLQ0SHeQ9BQKBayiOZM2OrSx
dOe77767evVq94rvKM5ffMFLH30pszSeZv4H2WKtnIzw9o4tqmKuv5Mdsea6
pSuuEhYzr732GqweIW6xLjREcl5eHmz6ysvLYdNXX18Pkt3R0QGSDWvUgYEB
bBlJljCCmPEc7duvWXKj06Me3VV3HD88zHqy05iKtz92fqQ2+6ouTeakPrb+
++D/XyFhzsoTIyNnaPIEQRAEQRAEMfXY9/i5civdbyxhPVOCIKYx2D4SL/FH
RkawfSRe32P7yIaGBrwgwPaROp0uNTUV20dGRUVFRERs3bpV2Gntmpt+cTqd
B8+eAf8Kv7Bw1sf9bAiRJ7j4Lfnr8n/90B+FhYqLzJ49+7777tu7dy9XHEwk
EkVGRkokEplMBkGbnJys0Wj0en1mZmZubq7RaMSWkTU1NXV1dS0tLTVxKleU
t+jxV1g/uARx1sG3GR/9CWxJzK8VBrLS3t6OygLPnc1mgwcQXccgMZwxTKvV
pqSkJCYmxsXFoQNZLBaD3MATHRoaCk83lijx9vbesWPH1VdffUYTy8JFi7ft
3DXuZXSgRMo6B7MhKEbOXHkFjA/9w4XFwOLFiyHqIBSVSiXXMhLCFeuNoII4
HI7Ozk6I8wMHDgwODkLkc5fLAOunkyCIcx2+bRvfAxrb3BlreJaWlhYVFWEB
z7S0NOzsDKtouVzON4ZxbZ1BFJ555pkLL7zQveI7iuVXr/k0LPa0NmuhItbi
yQaRynnJ07Nw/OXtHcJC5ZprroFABclOSEiA0MWXgNDCjS0jm5ub29raenp6
+vr64CmAZSpX1RP0GlezrJ9XgiDOCPzOgxOMzmQd65lOb/qyC1z5ntWLrzto
rXH9Y9uilfgHDb+4/8xNniAIgiAIgiCmnuODQ9rLbnG6hM6+82HWMyUIYhrD
t4RhXZeBgQH+BUFjY6PVarVYLIWFhUajEd8ZT0xMVCqV0dHRUVFR/v7+S5cu
FXZm++aXe5kfOLtlSPLKWJ/3MyO2yDrxlxNdXPPEG+/MnTdfWJC4yLp16z75
5BMfHx8/Pz+uOFhERIRYLI6NjVUoFBC0KSkpWq02IyPDYDDk5+dDSOPb4nV1
dRDnrU1NuuvudSq7qvPWHG5uY/3gEsRZB2cJ49uMh4eH+bXCQFk6Ozvx6rm+
vt5ut2O5sFFNJEFoOFcYaI1cLoenGLtWoSsMHnB40n19fb28vDw9PZ999tmL
LrrojGaYZauv+SRU8n/Sfr6ZdfZlRmyhk7R/Fg5peQP8iMJ+/ZdeegmkJC4u
LiEhITU1FVZBfFMxRDIoCNYbwRZUhw8f5lpQoQ2D9dNJEMS5Dt8ShuqM0tzT
09PV1dXa2oo1PKuqqkCRS0pKsH2kXq+HjIc1okGOZTKZRCKJjIyENTYIMay3
OVfYnj17Nm3aNHfuXPeK7yhuu/d3PppsARIQrk5nrZxs8PEPkFsamEvwZEdI
VvGChQuFBcmnn34Ki0aI1eTkZAhdtITBIhMCGy1hbW1tDoejr68PJPvQoUND
Q0NcVU+yhBHEDOZAiSVp1pVOT3vyNz3FeqbTHsiiupV3uuIK0111x4ij08WP
PXns2NH9B2AcHxw6o/MnCIIgCIIgiKmnXZrkyhK6OVjCeqYEQUxXYLeOFwTY
PnJkZATbR2JFl7a2tubmZmzyVVJSUlhYmJWVlZGRoVKpEhMTpVKpRCIJDw/f
vn27sDPbiy69TFxUzfzY2T1n14pE1qf+bAgUx5zqO1FYW/73O98lSy8TFh4u
csUVV7z11ltoBsPiYGgGi46Ojo2Nlcvl/PpgEMB5eXlGo7G0tNRsNlut1urq
6qamppaWlrLP9rqiubVf/sD6qSWIs5extcL4xjBQlr6+PjSGtba2wnOHzaqw
Mgk8klguDB5SeFTRGKZWq7n6JPBEx8TEREZGwgOO99FcK8m9e/c+8MADZ/oy
+taNv/VWZ2Fy8xdFsM6+bAhLSmUuuALG8zs+Evajr1q1CtQE643A4iczM3Pi
lpH8eiPwFNDlMkEQZwN8dR614wNd7ujogE1fY2NjXV0dyHF5eTmkONj35eTk
oBxzbZ0VCgWatEGLsVwYtnXGVpKfffbZL37xC/cq7yjmzJ37yEtvRBVOohOi
vLzexz+AtXiyISrDyFx/BYyNf3xMWHhs3LhRLBZDlCqVSmwZOdbCjVU90cIN
TwGsUVGvqWUkQcxgQAGz73zY6VFP8txVh6rrWE92JmDb+Y0rZ2swMm/adGzg
IOv5EgRBEARBEARjfjx5MvPG3zl/q2LlnSeOHGE9WYIgpiWjru+PHDly+PDh
wcHBAwcO9Pf3OxyOtra2urq6mpqa8vLy0tLS7OzszMxMjUajUqlkMllsbGxU
VFR4ePgNN9wg7OT2kW2vMz92dsuQltb88NNr8ucgURn5Y7+Qr2OT1968XlhU
uMjChQsfe+wxT0/PU/nBFAoF5wfT6XQGgyE3N7egoKCoqAivBmprayG8m5ub
G82WlEXXORVc/dV3nxgZYf3UEsTZy9haYfyrZ6xC2dvb29PTg/oCT19DQ4Pd
bq+uruZcYSaTiXOFcfVJ4FmOi4uTy+VYoBIrhgUFBcGD7+vrC0nAy8vr008/
PdOX0bPnzNnyt9eCEzWs8y4bvP385eX1zAV3skOUV75w0WJhv/jOnTtjYmIg
8CAIQUpAR0bVG2lpaYFIHltvBJ8CsoQRBHE2MMoShjs+SFlYw7OrqwtE+T/r
4cZGNGlztcKweqder8cOkpwrTCwWj3KFYUNn0OK33357xYoV7hXfUSxecvGb
X+6VVza7IgEh8gTW4skGv7BwhbWFuQRPdnwjVQmLivnz58O/WiKRwIoxMTER
FpCwjIQYhlWlxWKxWq0Q3iDZWNUTIh8WpcPDwyDZZAkjiBlPU6DYFXuSbec3
rGc6Qxjp6FIvdn68hiPvvq0njx5lPWWCIAiCIAiCYEy3Ltulbcu/9rCeKUEQ
0xiuVti47SPxyh7fGTeZTPn5+Xq9XqvVJiYmxsfHYwORXbt2zZo1S8Dh7Zy5
8/zS8pgfPrtlhGsyWJ/9s8E3OFTBu5QJySr+7aNPCDvMdxEItg0bNnzzzTf+
/v4BAQFBQUGhoaHh4eEQipwZDCu6oBksMzMzJyfHaDQWFRWVlZVBJHPVXVpa
WhwOR/7WV11R285kHeuHlSCmARPXCsML6J6eHpSY9vZ2bFJcV1eHxjB4QrEu
JbaShOcXRSclJQUrhsEDHhMTA+qDxjC8j8ZWkpCRtm/ffuWVV565/DN//vzd
u3ezzrtsiNTnMpdaAWPT438R9lvfddddWG8EW0ZCHLpeb4RaRhIEcfZwqubO
6Nbu6+tDq3Zrayts+iC52Ww2yHKlpaVYvRNSHxrD+OXCsF40vhwE63AQYliT
o0nb09Nz69atixYtcq/+jmL19TfuilJMnP9ji6yslZMZkrwy5vo72aGwtlz7
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
vxEAAJhWJo6S1B7r3Nvby71hlFS2tbW1trZSXknP59LSUnNzc9HiKQa3+Azh
+mvAcffvHjVMsv/whz+wRRhJNrdwx8fHk2RLLdzs6skt3HSr0D0DV08ALgWq
zJ30eftP/eVPoiOdn6i/OKLj4htfW2lif0a/vGlsYLB43/eTer5FrL9zoLZh
uk9nUvL+tW9iPOFX3arnSQEAAAAAADDDtITH6pMllR+xEh0pAGAOo/2iN+/h
c0tYW1tbU1MTv9BdVFSUl5eXnp6enJwcHR0dERERHBzs5+fn4eHh4uLi4OBw
xx13GLZX/Nh/vSR8o3tKDi+VxtTcQnSpQQw5OTnjhkVeZEtY9n/9Rx/5awmL
naa/FACA2cw4lxLSJtFPQTGYWVl751cJl78LPWxiMhZfdpkBCwYjI6NvvvmG
LcKCgoLCw8NjY2NpWZKZmUlLlMLCQviNAADAjHH+gc4DZ+GuMO0hkr6+vqLF
UwxWzm7C9deA44CTl2E5/uWXX25paSmXy+lPnC3C4uLiEhMTSbJzc3PVarVG
o6mtrW1oaKB7g+6Q3t5eumHg6gnAvGek62TY6pt1bvVErL9zrH9AdLDzk/Qn
X9Znty325t+1hESf/6OaApWRG+45lz9YX2nFzJzRRCKvvXtiSDnP7xUVDwAA
AAAAADpJvO/POlfp4b+4bay3T3SkAIC5ysTxkWwUxrv39fX1NTU1E8dHKpVK
NgqTy+UuLi6HDh1auHChAdvFC4yNjwdFC9/unpLDOSJedLVBDHZ2dnTPcDOY
wW1gEh1JGfrsUGU8/erU/kUAAMxFBgYGrKysRD8FxeAWmyZc+Aw4Hnj8KcPq
yzt27JAswrRHRubm5hYVFanVaviNAACAELTTSe1RkqTRnFeyXVh5eblo5RSG
PC1fuP5e6OFVUL1hyw2GSfaLL77ILdzcD8aSnZaWRpI9aQs33SeDg4Ojo6NS
Oin6pgYATAu5r32kz25Pk3+Y6EjnLRHX3KXPHwEfyl/eofrHBw2eQV3pqv7K
msG6xva41Gprt8J3v0q6/+lz/VbW7jfH+vpFnWBPUemkUdXL/EWFBAAAAAAA
gE66MlT6LNEL/vO56EgBAHOViS1hAwMDfX19J0+e7OzsbGpqqq+vr6ioKC0t
zcvLy8nJSU5OTkhIiIyMDAkJ8ff39/T0dHNzc3BwePzxxw3bMb713geF73hP
yeFTWGNuay+64CCGuLi4i3QG+++78dSpuNv+oFP1gi+7rr+qdsr/LgAA5hxK
pVL0808Mlo4uPkW1woXvQo/vZAGGLRWWLl1qZmYmWYSx30hKSkpWVlZ+fj78
RgAAQCDa6aR2UskG1P1n6e7ulsvlosVTDPb+wcL114Djn18cNEyyr776aicn
Jw8PDz8/v+Dg4IiICJbs9PR0kuzi4uLKysrq6uqmpqa2tjZuCWPHaW7hRksY
APOVblVh0IJrdO72JD/8rOhI5y0jHV3jrnbI8i2pjz6X8sjfgpder3+r2LmO
sJ/fXGXhLPYcy3+0nCS2BdfQuYsNDAAAAAAAgPOT+0/db9AEL9ksaj47AGB+
MG58JE/6OHnyZGtra3Nzc21tbVVVlTQ+MiUlJS4ubtz4SAsLi5UrVxq2b/yx
mZ3wTe8pOdziM0TXHMRgbm5ON8zFV9srTR302Wgq/frYlNz2AIA5TXt7u+iH
nzBkKbnCJe9CD5+i2utuutWwdcKePXu0R0ZqW4SVlJTAbwQAAIQz6ShJgnvD
cnJyRCunGEzNzb1UGuESfKGHS1rhilVXGCbZn3zyiVwun9jCrVKpSLI1Gk1N
TU19fT23cLNko4UbgHkP/b3WZxKKYuGG3uIy0cHOW9pikrVftGwKCD89MsL/
aWxgsClQmfvPjyLW32lAM1j4L27THLKYDVNskh9+dmJ4idufFB0XAAAAAAAA
OhiobQheslnn2jv9yZdFRwoAmMNo796PjIwMDQ319vZ2d3e3t7e3trbW1dVV
V1er1erCwsKsrKz09PTExMSoqKjQ0NCAgAAvLy93d3cnJ6d//OMfhu0br712
g0duhfCt7yk5bOQ+oisPYggMDLzI3fvhto7QVTfq1LvIjdtPDQ5O1Z0PAJi7
+Pn5iX7yiWH37t2/f/a/HBJVwiXvgo5/f/uTgYuEtWsdHBwm+o1IFmHwGwEA
AOFMbAmThkj29fXZ21+iXsrOEfHC9deA4/HnXjFMsm+//XY3NzdPT09/f/+Q
kJDIyMiEhIS0tLScnJy8vLzS0tKKior6+nqS7M7OTpJsujfg6gnApUCNvVyf
zqLiT74THel8puKojXSpzzNIsaegRHPIIumhZxQLN+jYndtwj+ofH9TLA2bJ
Ht1oT69i0cZJ3ir95rjo0AAAAAAAANBN2cET+uRNXRkq0ZECAOYq2vM+RkdH
R0ZGxo2PrKurKy8vl8ZHpqamahuF8fhIe3v7TZs2GbZ7/Pz7nwrf+p6SwyOj
SHTlQRgNDRflV6l65X19xK45KGKqbnsAwNylpKRE9DNPDEeOHGFPzmXLV7z0
8ReeeZXChU+fwy2zZNWVVxm2Qnj//fflcrmvr++kIyMrKipqa2vhNwIAALMH
7fawsbGx+Ph40eIpBnNbe5/CGuESfKHHieDYBcbGBuj1woULaZVyrhbuoqKi
qqoqkuzm5ubW1lZu4R4YGEALNwDzntGeXuWabTq3epRrf0M/KTrY+cxATX3h
u1/RUWMr0+fnT4+M9FfVdiSm18sDyn+0LHz/65JPf6g4Zlvn6tsSFttfUT3N
8V4wjX5hk95aJ7PyRIcGAAAAAACAbsZ6+8KvulVn6pR0/9OiIwUAzFXO1RLW
3d3d1dXV3Nzc0NBQWVlZVlZWUFCQm5vLRmHR0dGSUZibm5ujo+O+ffsMK/gu
vXy5fUKO8A3wKTlsfBWi6w9ikMlkBpfduzJUQUa6+8FSH31uau98AMBcZGxs
zMnJSfQzTww7duzQVs91GzZ9ZuUsXPh0Hn/+x78MWx7ccsstrq6uk/qNFBYW
0rKkurqalijwGwEAgNmDdksYPZnNzc1Fi6cY3OIzhOuvAce2B35rmGQ/8cQT
7u7uXl5eAQEBoaGhUVFRiYmJ6enpKpWqqKhIrVaTZNfV1bW2tra3t3d3d/f2
9g4NDUl6jZYwAOYr+W/t1+ftvwaPQNGRgrlN7qsfTtJquGYbkkEAAAAAADBX
qHPz0yd7qnXyEh0pAGAOIzWG8YyPoaGhnp6ekydPtre3t7S08PjIkpKSwsLC
nJycceMjPT09XV1dHRwc7r33XsP2kB/+y7PCN8Av8vApqv3P98fWrr/2+++/
F12CEINKZYhfJd11CXc9oVPjFIs39ZVVTvltDwCYc6SkpIh+2onhq6++Wrhw
4UQBve3+h0wUMcJF8FyHeXjiwkWLDVgYGBsbHzp0iC3CFAqFUqmMjY0dNzKS
FicT/UZGR0dpJYPiMgAACCcoKEi0eIrBRu4tXH8NOPZZOBqWy69cudLW1tbT
01PbIiw1NVVq4S4vLyfJHtfCPTIyQpKNFm4A5jE9RaU65w/iPXcwJSh/ecfE
WyvnxXdExwUAAAAAAIC+nDl1KubGh3UmUFGb7zs9MiI6WADAXEXbK2xkZGR4
eLi/v7+np6ejo6Otra2+vr6mpqa0tLS4uDg3NzcjIyMpKSkmJiY8PDwoKMjH
x0cmkzk7O//4449LliwxYBvZyMjoR59Q4dvgBh/fyQKuu/lWPpe77rpLdBVC
DLa2tnTbXOiNV23jrk/bc8mnP0zHbQ8AmFuQMFlYWIh+2onhxhtvPJeGLjA2
fuKFV13SCoWr4cTjrod3GlZf3rlzp5ubm7ZFWHx8/ESLsJaWFlqlcEvY0NAQ
yRBawgAAYDbQ2NgoWjmF4ZFRJFx/L/TwzKtct2GTYZL96quvaluERUdHs0VY
bm5ucXFxeXl5VVUVSXZzc3NXV1d3dzdawgC4REh++Fnduz0LrunOLRIdKZjb
dOcVT+4+5xkkOjQAAAAAAAAugJbwWH0q5qUHjoqOFAAwt+ESKo+PHBwc7O/v
5/GRTU1N9fX1VVVV5eXl3BWWnp6ekJAgGYV5e3u7u7s7OTnt2rXLsJ3kG26/
S/hOuAGHTWzmQ0/+j1M2MjLat2+f6EKEGGJiYi7ofhvpOhl+5S061S3i6jvH
+gem6Z4HAMwhQkJCRD/nxPD222/rlNEVq654/cvvvQqqhSujdHzpIDdsSbB8
+XIrKysPD49xfiPZ2dkFBQWlpaWVlZW0LGlpacHISAAAmIXQE1gul4sWTzEc
trIXrr8GHC9++Llhkr1x40YXF5eJIyO1W7jr6upIstvb27VbuMfGxqDXAMxj
9Bx6UvDOl6IjBXOesu/NJrm7jK8d6TopOjQAAAAAAAAujMxdr+lMo0JX/nqk
s0t0pACAOYx2S9jQ0NDAwACPj2xpaWlsbKyurq6srFSr1fn5+ZmZmcnJybGx
sUqlUqFQ+Pr6yuVyFxcXKyur1atXG7af/M6PZsI3w/U/5CrNnrc/XLJ06cQT
2bJli+hahBjMzMzobtH/fst/81N9NgkbvBTTd88DAOYKpESiH3JiMDExufrq
q/VU0g1bbjjg6ClcIunwKqi+5vothq0HXnzxRbYIk+rLCQkJ6enpKpVKqi/T
sqStrQ1+IwAAMAuhx7Vo8RTDDz/8sGzZsnsffcIyMkW4EOt/OCTlLlu+wjDJ
/vzzz2UymY+PT1BQUHh4eExMTFJSUkZGhmQRVltbW19fT5Ld0dHR09PT39+P
Fm4A5j1j/QMR6+/UudUTfuUtaNoBF0/SA3/BQFIAAAAAADA/6ClUBy24Rmcy
pXrlfdGRAgDmMNL4yLGxseGz9PX1dXd3d3Z2tre319XV1dTUSEZh3BUWExMT
FhYWGBgoGYW9+eabhu0nr167TpajEb4lrs/x4XHrK9edr0D//PPPi65IiCEo
SF9j9u7coiDja3XqWvKOv07rPQ8AmCt4enqKfsKJ4emnn75QPb3nD3+0iEgW
K5Sv7v/WsMXA+vXrnZ2d2W+ER0YmJCRMOjKyo6ODlijwGwEAgFkFPZBtbW1F
i6cY7r77btayRYuXPPPGXvesUuF5qz7H7575u2GSfe+997q7u3t7ewcGBmq3
cEv9YDU1NY2NjdLIyP7+/sHBQW7hxohnAOYxRR98o8/bf7VOXqIjBXOeka6T
k24tlh08ITo0AAAAAAAADKHwvQM6kynFwg19ZZWiIwUAzFWkljBiZGRkeHh4
YGCgt7e3s7Ozo6OjsbGxrq6usrKytLS0oKAgOzs7NTU1Li4uIiIiODjYz8+P
jcIcHBy2bDHQGOTZf78rfEv8/McR3/Bf33G3zhNZvXr10aNHRRclxFBeXq7P
zZZ0/9P6iFpPUel03/YAgNkPiY7oZ5sYDh8+vHz5cgP0dOGixbte3+uWqRai
lc6pBctXrjIgbOLjjz+W6sthYWHR0dE8gkqlUkn15YaGhtbWVlqc9PT09PX1
cRM7WsIAAGA2EBMTI1o8xfDpp58aGRlpK9oVV615+9AJn6Ja4Tns+dPbcWHr
yeLFi48fPy6Xy319fRUKhVKpjI2NTU5OzszMzM/PV6vVlZWVdXV1TU1NLS0t
PDJyYGBgaGgILWEAzG/6yioVizfp3O2Jv/PxM3gIgIumwUsx6Q3WrSoUHRoA
AAAAAACGMNTSFrJ8i86UKv2pV0RHCgCY2/D27NjY2Ojo6ODgYH9/P4+PbG1t
bW5urq2tZaOwvLy8zMzMpKSkmJiY8PDwoKAgb29vmUzm7Oz81VdfGbixvGSJ
dXS68I3xSQ+HpNw//O05/c9r586dousSYnB1ddW5vV/r7K3PS6OF7389M/c8
AGA2Q2Jkb28v+tkmhvvuu88AMZVYdeUv9v5wfOaL0Y/910uGBXzXXXe5u7uz
RdhEvxGNRsMWYbQg6erq4uIyLVR4BBWKywAAIBzKGc3MzESLpxjO9VbUr27Z
9oOHQngye65Dn9edJmXXrl0TW7i1R0ayRRiPjOzu7u7t7YWrJwCXAmmPPa97
t8dofVeGSnSkYD6geundiTeYct3tkBgAAAAAADB3qTSx16eG3qyIFB0pAGAO
o90SNjQ0NDg4yC1hbW1tLS0t9fX1lZWVarWajcJSUlJiY2OVSqVCofD19ZWM
wh566CHD9pbve+xJ4Rvj4w7PvMqXPv5i2fIVF3Qiixcv/vbbb0WXJsSQkZFx
nhtstKdXufY3OrVMuWYb/eSM3fYAgFlLQkKC6KeaGPbv379gwQLDxFSb62+5
7Xt54IyJ5vGg6AXGxgbEuXDhwiNHjtBCwsfHJygoKDw8PCYmJikpiTQlLy+v
pKSkoqKitra2qamJFiS0LOnr66MlCvxGAABg9kBPb9HiKYYXXnjh/Bq3489/
tY3LFJ7YjjveO2ph0Mrif/385z+3s7ObaBGWlZXFFmGSZLe3t7OrZ39/P1w9
AZj3NHoH61O5yPvXPtGRgvkA6YhyzbaJN5jqlfdFhwYAAAAAAIDhnBoailh/
p87EKm7bTmytAAAMZtz4yKGhob6+vp6ens7Ozvb29qamJh4fqVar8/Pzs7Ky
UlJS4uLilEplUFCQr6+vh4eHi4vLsWPHli5datgO80E3P+Hb49LxmbXLug2b
DDuR2267TXR1QgxWVlaDg4PnusEK3/1Kn03COlffmbztAQCzE1Ifc3Nz0U81
Mdx4442Gqc+kPPTkrpkpRt9674OGRfjUU0+N8xvhfjBtvxHtkZH9/f3wGwEA
gNkDPahFK6cYjh49unr1ap0yd9myZc+9+4lHbrnwDJcPuUpz5bqrDZPst956
a2ILd2ZmpnYLd3Nzc3t7O4+MJMmm9HB0dJQkGy3cAMxXTg0NRW7crnOrJ3TV
jcNtHaKDBfOBk9n5k95jjd7BokMDAAAAAADgomgKCNenkl5p5ig6UgDAXGVc
S9jw8PDAwEBvb29XV1dnZ2dLS0tDQ0NVVVVpaWlhYWFOTk5qamp8fHxERERw
cLC/v7+np6erq6uDg8Pu3bsN22HefOMt3oU1wjfJTwTHbnvgt4adgsSHH34o
ukYhBrofJr27eovLFAs36FSxxPv+jMo+AIAIDQ0V/TwTwyuvvHKRAjSRJUuX
7nnnI7lKM33S+YmZvWGxrVq1yt7efpzfSEpKykS/kba2NlqQ0LKEFifwGwEA
gFnC6dOnKQcULZ5i2Llzp/5694urr/nohK3wVJeO3W+9b5hkb9myxcXFxcPD
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
c3Nz+v9//PHHRx99dPHixdOqWb958OETIXEGSOoNt99l2Df+9a9/dXNz8/Hx
CQgIUCqV4/xGNBpNdXU115e1/UZGRkbQEgYAALMBSgNFK6cYjhw5snLlyqlV
YcJ44cKnXn7dJb1omlJgt0z1qit/YVhs77//PmX3np6eJNlhYWHR0dGU+2dk
ZOTm5hYXF5eXl9fU1DQ2Nra1tdFCTmoJI8mGqycA85jB+qaQy3+lc7cn5tc7
To+Oig4WzB8603ImvdMa/cJEhwYAAAAAAMAUU2Mn0+c1nAaPQNGRAgDmNlxy
5fGRQ0ND3BXG4yObmppqamo0Gk1RUZE0PlLbKEwulzs7O7/00kuG7Tyvv+5X
XvlVU74Z/r1H0K9u2WZYSHpy+eWXP/vssyYmJlZWVtbW1nZ2dpdsV1jw/oP6
qBXe5gMAMIGBgaKfW2KwtbX19vYm3XR3dyfp1G4MYwX56quvbr/99mkVL+OF
C//00j8vqBj97hFzw77ryiuvdHJy8vDwoD/x4ODg6OhoySIsPz9frVZXVFTU
1dU1Nzd3dHRoW4RxSxitTFBcBgAAgdCjmB7josVTDDt27JhS+f0f/Oznq//1
9WHvwpopz4KffvVNw0K69dZb3dzcfH19KcefODKSW7gbGhpaW1ulKc/aLdzQ
awDmKxl/eU2f3Z626CTRkYJ5hfrLnybeZopFG0d7ekWHBgAAAAAAwBRzenQ0
+voHdKZd0VsfOj02JjpYAMAchlvCxsbGRkdHh4eHBwcH+/r6Tp482d7e3tzc
XFtbW1FRUVJSkpeXl5mZmZyczEZhQUFBPj4+Xl5ezs7OdnZ211xzjWH7z//4
9Osp3Aa3jcv87VPPGBaJnixYsODBBx/8/vvvzc3NLSwsrK2tbWxsHB0d7e3t
RdcuBGD601Hfn+v2tAxddeNwa7voOx0AIB6NRiP6uSUMNsvyPIubmxupp4OD
A2kH6YilpaWpqanJWd555x2DJVVPfnbFz9/46gd9itGyHM3qtesM+5a9e/fK
ZDJaJygUirCwsNjYWK4vq1SqcfXlcX4jkkUYSswAACCQ1NRU0copBtLiPXv2
GOyDrSebbrjpGxefKUyELZRJCxcZYjdqbGx86NAhuVzu5+cXGBhImT7l+0lJ
SWwRVlJSom0RxlMjBwYGpBZutIQBMF9pj03Rpx8se89boiMF8434Ox+feKcl
7/ir6LgAAAAAAACYFpoCwvVJvjSHLERHCgCYw0jjI4nR0dGhoaH+/v5x4yM1
Gk1xcTEbhSUlJUnjI/38/GQymYuLy0cffWTYZvjlP1vplFJw8XvgcpXmv975
eMnSpYaFoSc33HDD/v37LSwsLC0tbWxsbG1tnZycnJ2d6SJ4eHhcgl1hLo/9
TR+dqjRzFH2bAwDEc/r0adIL0c8tMZBGKJVKls6AgADuqXZ3d6cL4ujo6ODg
QJpibW1N+mJqanrs2LG///3v012M3rD11187e59fW5/997uGfTjJpaurK3fB
0VlHRUXR4iE1NTUnJ6ewsLC0tLSqqor7wSaOjEQzGAAACIfyQcp3RIunGMzM
zEiLDx8+/MgjjxgbG0+t+I7jvkf/ZBWVOiUtYXc9stOwGHbu3CmXy729vRUK
BVuESSMjuYW7pqamqalJGhk5MDCgLdkY8QzAvOT02FjsTY/o3OoJWXb9YF2j
6GDBvILuqCCjyepfh1H/AgAAAAAA85a0x1/QmX+Frb55tLtHdKQAgLnKuJaw
4eHhgYGB3t5eNgprampiozC1Wp2fn5+VlZWSkhIXFxcREaFQKAICAjw8PNzd
3R0cHO644w7DdqEf/fsLF7kB/qGJzS+unl5Plauuuur11183NTU1NzeXhkXS
Wbu4uLi5uXl6enp7e/v6+tIPiC5izBwWX34TsGijTpGKu/X3dHuJvs0BAOLJ
yMgQ/dwSg4WFRUxMTHR0dGRkZGhoaHBwMKmnn58faYdcLicdcXJyIkEhWbG0
tKQfpl85fvz4oUOHZqAYfe+jT1hGpkyqrdbR6YuXLDHgM42MjL799luZTMZ+
I3TWsbGxtHhIT0/Pzc0tLi7m+jL7jUgWYWgJAwCA2UNISIho8RQDZXOsxeze
uX///ptuumnKxVcbktq/vvmOLLvsYtLhLx3khn378uXL6WS9vLwok6U/dLYI
S05OzszMzMvLKykpkaY8t7e3a095Hh0dRUsYAPMYzWELvd5SR5cOmGoqjtlO
erN1ZeaKDg0AAAAAAIDp4mR2/qRvRow78t/8VHSkAIC5zfnHR9bV1U06PjIk
JMTX15fHRx4+fHjRokUGbEQvWLDgWGCUYbvfP/lH3HTXdsM2wPXksssu+/Of
/2xiYmJhYcHOYI6Ojk5OTm5ubjKZjDvBAgMDFQqFUqn09PQUXceYOTxu3qHP
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
WVnFxsaSEI9r0qYckDLciU3aJiYmr7766urVq6dVVddcs+Fjs/M5aR8Pil5g
bGzAJy9cuPDYsWPSyMioqChaitCahFJaacozrV7GSfbw8DBcPQGY31Sa2Ovz
9l/pN8dFRwrmIeovjpzrlmv0CxMdHQAAAAAAADNBg0egPklZjZ1MdKQAgDnM
uJawwcHB/v7+np6ezs7O1tbWxsbGmpqasrKywsJCNgpLTk6Ojo5WKpVcwnZz
c3Nxcfnss88M2/S+bNnlk87IcEkvevLlfxovXGjYx+rJ7bfffuDAgRNni/jW
1tY2NjYODg6Ojo50Ru7u7l5eXj4+PrxnrjxLXFxcfHx8SkoKXYfs7GyVSlVQ
UMBTsSoqKsLCwkRXNqYL+bbf6aNHbVGJom9nAIB4SE3oQSr6uSUGEoj29va2
tjZSz4aGBhLQ6upq0giW0by8PFLSrKws+rHExMTY2NiYmJjw8HD23vT39yfd
8fT0dHV1dXJyomvILiXcFUYffvz48VdfffXKK6+cVmW8IG677baJfiOpqamk
j/n5+eXl5fAbAQCA2QwlfSwxlyAkvtoDnYODgynv45eePDw8eIgkd2jzQGfu
Cjty5Mif/vSnJUuWTKu83nLP/ccCoyZtCbvtvocM+0wKWyaT0TKDlhx07uzq
mZmZSSsTSmlLS0tZsltaWjo7OyXJ5n4wuHoCMF8Zbu88l0eT9hG54Z5Tg4Oi
gwXzjY6kjJBl15/rriv57JDoAAEAAAAAAJgJzpw+HXvL7/XKy4aHRQcLAJir
aI+PHB0d5a4wHh/Z0dEx0SgsPT2dx0eysQmPj3R0dLzvvvsM253e8fSz2rvc
3oU1bxw49LMrfm7Yp+nJNddc8+6775qZmUljIukUnJ2d3d3d5XK5t7e3r69v
UFBQSEiINCaSzprHRObk5OTm5hYVFZWUlJSXl1dWVtbW1tJVov+1srISXdyY
emz+84E+/WCZf31d9L0MAJgVpKSkiH5uicHe3r6rq4vU8+TJk9wY1tTU1NjY
SOpQU1PDoySLi4t5FjPpKXdZk7jExsZGRESEhYWxSwlpkORSwhOsSKRIX9gu
7OjRo08++eR0F6P1wdjY+Mcff5zoN5KVlVVYWKhWq6urqyf1G9HuB0NxGQAA
BBIaGipaPMVAIktCnJmZSYuWpKSkmJgYfumJLgg3abMWn2uU5DfffHP33Xcb
GRlNn8guWLDgsT0vOqXka2fK+8wdDPu0VatW2dnZ0Rn5+fnROdKqg86aJJuy
Wu1+sIkt3Nr9YKLvVgDA1KN6+T19dnuaFZGiIwXzijOnT9fYy0NWbD3PXadY
tLHRO/jMqVOigwUAAAAAAGDaaYtK1Cc1K/n8R9GRAgDmKmf+H6dPnx4bGxsZ
GZGMwrq6uiSjsPLy8uLi4tzc3Ozs7ISEhNjY2LCwMIVC4ePj4+Hh4ezsfOzY
MYMr1Ie8gnmX+xsXn4033GjYh+jJihUr9uzZc/z4cVNTU0tLS2tra3t7ewcH
BzoFNzc3T09PLy8vf3//wMDA0NBQpVIZExMTFxeXlJSUkpKSmZnJw7B451yj
0VRXV9PFoUvEJW/6AdH1janm2HGfdbqnGAcu3nhSUyX6XgYAiKevr8/CwkL0
k0sMRUVFAwMDpJ7cFcYa2tLS0tDQUFdXR3pRVVVVVlamVqvz8/NJT7OysjIy
Mkhf4uPj2aUkJCQkKCjIz8/P19eXxEgul0vFaO2uMBMTk6+//vqee+6Z1mK0
Th599NFJ/UZUKhUtGOhMuV96ot/I6Ogo/EYAAEA4JEyilVMYPC2RtDg9PV0a
6ExCFhkZye89sRZTnuvu7s6OYXZ2dqTFtMiRrDvff//9TZs2TavUXv6zlf/4
9Guv/CrKlD1yK9Zeu9Gwz3n99ddpRUFnRKdGGS6daXJyMp07XYTCwkKSbE5p
ad1Ckk0rmf7+/qGhoXEWYaJvWADAFHMyKy9owTU6d3tS/7BHdKRgzjN6srs9
NqXJP6zGXl7w9hcxv96hT8GLjoir78x97SPND+YNXoqBmnrR5wEAAAAAAMB0
kfXsGzqXx6E/u2G4rUN0pACAOcy4rrChoSHt8ZENDQ1sFMZzr9LT05OTk6Oi
osLDwwMCAnx8fNjJZNeuXYbtUW/ddodlZMq9jz5h2K/ribGx8e9+97sjR46Y
m5tbWVmda0xkUFAQnVdERERsbGx8fDydKY+J5JkaRUVFZWVl5eXlNTU1tbW1
TU1Nzc3NbW1tHR0dJ89Cl0J0iWMqcXr6BX12aZyf2BMTEyP6LgYAiCc4OFj0
c0sMgYGBpJ7Dw8MkoIODg729vaShUmMYQXrBoyS5MYwklQQlPz9fcilJTExk
l5KwsDC6jCRG/v7+3HfN9WgSLDs7O2mUpKmp6YcffjjdxehzsWLFClLSc/mN
kEpWV1fT+dJZS34jbBGG4jIAAMwG6CEsk8lEi6cYSLYqKipIiNVqNTeGkRBn
ZGRQ3jfpKElPT0+5XM6NYfb29tykLWnxCy+8sGrVqmnV3PXX/eoLO/cXPvjM
sF/fvHkzLSS4hZtOilu42fu6uLhY2yKMUlptyUYLNwDzGPpLnXD3n3Ru9SgW
bewrrRAdLJjzFH/ynZ49YOc5NIctRJ8HAAAAAAAA00VviSbI+Fqdq+KcF94W
HSkAYA4zsSVsYGCgt7e3q6urra2NjcKkiVdZWVlpaWmxsbGRkZH8DrVMJnNx
cbGysrrqqqsM26leYGxs2C/qyc033/z555+bmppyP5itra29vb2TkxOFLZfL
PT096Sz8/f0VCkVoaGhUVFRMTEx8fHxSUlJGRgadb25ubl5enlqtLi0trays
5GFYDQ0Nra2tPA/r5MmTPT09dMXKy8tFVzmmDLNvvw9YslmnAPmuvvnE0aN0
bek6iL6RAQAiaWpqEv3cEkZLS8vo6KjUFdZ/FskujPurm5ubSTtIT0lHuBhN
qkriolKpSGsklxLSoIiICBIj7a4wtgvT7gozMzNjx7AZKEZP5JVXXnF1dZ3U
b6SoqIjOjk6T7ge2CCN9lCzC0BIGAACzAZIe0copBsoEuW+ZBzqTZlF6S1cj
JyeHVCwlJYW1mISY1I1yw4CAABI7b29vqT3bwcGBhNja2pq1mD7z8OHDO3fu
XLRo0bQqr8H58hdffEELCVpO0OmEhYVRFk/nyN7XtBThd53YIoxWLOMswqR+
MKg2APOMams3veaS7D8sOlIwH0h66JmLbwnrylCJPg8AAAAAAACmkaIPv9W9
MDa+trdEIzpSAMDc5vTp06dOndI2Cuvu7uZCttQVplaredxVYmJiXFxceHh4
cHAwF6ydnJzeeuutqd36vnjWrVv3n//8x9zcnMdE2tnZOTo6Ojs7u7q6UszS
mMiQkBA6l+jo6JiYGDq1lJQUOsecnJz8/Hx2BiOqqqok25OWlha6LCdPnqRL
xM1gg4ODdNGGh4fDwsJE1zqmBtmdO/XZlrH959v883QZRd/CAABhnDlzxtPT
U+xTSxQJCQl0+qfOMnoWyS6M+6t5FjPpaVtbG0tqXV0daUplZWVpaWlJSQmP
kszMzExPT5dGSUZGRrLIcj2aBEsmk3FvmL29vY2NjZWVlYWFhZmZ2ZEjRx57
7LHpLkZLXHvttTxqeVK/EWlkJJ0p/EYAAGAWQg9kW1tb0eIpBkrxKI9rbm4m
nSK1IiEuLy8nIWbrTtLiiU3a0lhnynnlcrm7uzs3abMWS3ZhX3755bZt22ZG
iPXnvvvuo7SX3bBpUUFnpD0yks6dViP8otPEkZHQawDmK6Mnu8OvulXnVo/y
l3eM9fWLDhYAAAAAAAAALgmG2zpCVmzVmaml/fF50ZECAOY2klHY6OioZBR2
8uTJ9vb2pqYm3jPXaDR5eXnZ2dnJycnx8fFKpTI0NNTPz8/Ly8vZ2dnBwWHr
1q2id77/m2XLlj3zzDPHjx83MzOztLS0sbGxt7eX+sFkMpmPjw9FzhXtiIiI
qKiouLi4hISEtLS0jIyM3Nzc/Px8nqZRUVFB587DIpubm1taWjo6Orq6urgf
jN1guB9sZGSE/hO/MD6nsX7340A9+sE8bvqt9m/R7SH6LgYAiIEemIIeV4Kx
srIiuWQBZQ3lzmqpK6zvLOwY1tnZSRpBIsKqKrmUsAknu5SQBvHsqtjYWJ7R
TCLFnpwktXK5nCTMycmJBNfOzs7a2trCwsLU1JQiOXDgwG9+85sZkNdPP/30
PH4jdEZ1dXWNjY0slBPryygxAwCAWGJiYkSLpxhcXFxYiNva2kiI+aUn0mIS
4rKyMu4KIyHOyspKSUlJSkqi3JCuFSe8QUFBAQEBJMSenp6Sdad2Vxh9vomJ
yd69e9evXz8DWqwPS5YsoZAo7eWcNzIykiSblhl0grTqKCkp4QyXrgMbX1Pu
T0satIQBMO/Je+MTfd7+a/QJER0pAAAAAAAAAFxCVJo56pOsNQWEi44UADCH
mTg+sr+/n71NeHxkbW1tVVWVWq0uLCzMzMxMTU2NiYmJiIjgUjXXqQ8cOGBk
ZCR293vBggUPPvjg4cOHLSwsrKysbGxsHBwcpE4wLy8vX19fCpjHREZGRrLD
SVJSUnp6Op0XN4PRaZaVlVVWVtIp85hIdgbr7OzkGrfkDMbNYOwMwy4xGRkZ
oiseF8dxE++rb9cpOoHGGyy+OKD9ey4uLnT/iL6RAQAzDT397OzsRD2xxEKC
yBeBNVTbK4wbw9grrK+vj4SD50i2t7dzMZqUpaamhlSG5Ka0tFS7GJ2WlsbF
aFKocXMkPT09pfFV0hxJqTHs7bffntZi9F133UVfTUpKMkpRUWyJiYm0HiDp
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
kSFaPMVgZ2dHyiuNdZbcO/k1H8kxbJx7J8kxaTGpG2mxWq3mxjDSYrqMJH+U
UUpjnXmUJLt3ymQyHiXJjWGUn/IoyWPHjj3zzDMz46RNCfK33357nhZuWmDQ
2ZFk09pD2yIMLdwAzG8K3vlSn7JCnZuf6EgBAAAAAAAA4JJG9cr7OnO34KXX
D9Y3iY4UADBXkUrY0pvUklEYb5JztVqj0ZSUlKhUqszMTPYtCQkJCQwM9PT0
lMlkTk5O77333nRvd2/atOmDDz4wMzMzNzeX+sHYGUy7H0yhUISFhUVGRvKI
q+Tk5IyMjKysrNzc3Pz8fLVaXVZWVlVVxe9KNzY2tra28gQNqR+M69rcD8ZF
BC4ocKH/PO9Q0zeKroFcCCYm3hvu0qkygQuutfzsy/N/El35mb1tAQACoEef
u7v7zDyfZhupqan6XyUDGsMkl5Ly8nLSKWl2FWku+3NKlWgWX24MY5cSV1dX
nl1lbW0tuZQcO3Zs165dS5cuNUxwr7vuOm2/EfpqCiA9PT07O5tiG+c3QqfD
fdTj/Eam9W4EAABwHuiZTOmSaPEUAympthbzqz1sF8Za3HcWHiLJWtzS0tLU
1MQd2pWVlfQJxcXFBQUFlPySFpP88RxJ7a4w0mI/Pz/tmc6UmdrZ2fFMZxJi
iuS77767//77jYyMpjYpHseOHTtcXFy0W7hp2UCLB0p+6RToXOikOOelhJct
wiDZAMx7eks0ikUbde72JG5/Ek8AAAAAAAAAABBLf1WtYvEmnRlc5q7XREcK
AJjbaHeFDQ0N8Ygr3iRvampqaGjgN6bz8vJycnJSUlLi4+OVSmVISAgPsXJ2
dnZwcLj11lunaaN71apVL774IjeDWVtb29jY2NnZOTo6uri4cM3a29t73KTI
uLi4pKSktLS0rKwslUrFriZqtbqiooLOhSdFNjc3czmbTpNNTrhYL5mD6d8M
xvT19VlYWIgug+iLw99f1eelUdff7dLn00pKSmbsdgUACIGe/9P9XJqdkOiQ
KFzQtZrYGDZufJV2Mbq9vV2aI1lTU0MipdFoSLAKCwtJvLKzs7kYnZCQEBMT
ExkZGR4eTmLHjWEkwVyMJkEkWSRxtLKysrS05GL0wYMH77///gULFlyo7B44
cICnMAcHB9PXkaQmJiZyczUFVl5ezj3VFDn7jdAZSaaaKC4DAIBwKFMTLZ5i
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
/2mOexsv6O/vHxgY8Ixpj46OmtuVmLuU+OvEtPG7L9B0yYZb7rEzSLjq8ScW
KABLxoWhTj+Af2lpaVG1BlrBwcFG6VGn3/uOq9Smky4Mm2vuYjDnHP5UeQHA
1+3fv19dPDWioqKMIqVO/2k46YHORrX17Nt53I5h9vvOxos9h0XOfZCKJWGA
35s5Opj8husth3rSlr/TMTGpDhYAAAAA4H0ThzsSzrvMsmNY9OBX1ZEC8Hkn
3SvsuMFt86nno8cMnMD8c3Mo21wJdtIBbc9KML8c1s7Ozvb6dEn4962XBxtf
G2+82+s/2r5t27apcw/gn4wGNjY2VtggCBUWFqrTv+Dcc7jmcJ5g7t/O/S71
bwAA+CejqxUWFqYunhpNTU3q9J85s56e6ijJuTuGDR5zYg/a/BNzZ7B5FoN5
+s7q3xjAgij/2k/sjPZ07WJjdgAAAADwWw1/eMFO33Bwf5k6UgC+7VR7hU0e
M37MiQvDPEPZnnMu5i4Gm7szmGevEv/en8T4lUNDQ705WfL889vedrNlFdh1
7iWhv33Kmz/39NXU1KjTD+AlpaWl2tZAJSIiwig36vQvOJaEAYDfSE1NVRdP
jc2bN6tz/7LMXRI29xDJ43YM8ywMO7EH7flD45+jx5iHRZ6q76z+jQF439CB
yrizlluO9uz74OfUkQIAAAAAFpBjdCzlTTdadg9z7/yEOlIA/uDEvcLMw6c8
49uTk5Pmcq/ROcbmmDjGfHGA7Ax2nPLyci9Ol6z+9FfsLAyOue/zXvyhZyY6
Otr4oNXpBwKd0faGh4er2wON+vp6dfoBALCrr69PXTlluru71en3gpMeJWme
JunpPpuPVp2qB23+rdlxDqgHqQAY93Xuux+0HOqJP+fi0ZoGdbAAAAAAgIXV
vm67nfUAh2O2qiMF4PNONaztGaM2n3qeh/kyczFYYA5oG7/vmjVrvDJXEvz0
n3eef7ll+7/99dcFPfOsV37iy5Sfn69OPxDoMjIy1C2BxoYNG/y+vgAA/Mm2
bdvUxVMjKytLnXvvOLHvbJrbgzYfqjpV39ncFszzLJXncapA60EDAehQ5AY7
o/01P39aHSkAAAAAYMG5nc6sa++27CRmXHana2ZGHSwAfzD/4Lbn2efjeBaA
nXQQO6CGspuamrwyXbL+9o/aGSSMeOx7XvlxL19oaOjo6Kg6/UDgGhgYCAoK
UrcEGh0dHer0AwBgV01Njbpyahj9hfHxcXX6ve/l96DnHvocUH1nIADNDo+k
vuUmy6Ge1Lfe7BgdUwcLAAAAAFgMPSnZdlYF1P/+OXWkAPzBcQPaHo45Zk8w
dyj7xAHtQBvWjouLe5nTJWE//PluGy3/pmve643JGa9JSEhQ5x4IXDt37lS3
ARrp6enq3AMAYJfRaYqOjlYXT43y8nJ1+hfESXvQjn93uj1o9e8EYKEc/M6v
7Izzd2zarY4UAAAAALB49n/qMcuuYtIF18wMDKojBeBX5i7octkQmAvATtTf
3/+yJkuef2Hr8lstm/3dZ18U+qv/89L8jNd0dnaq0w8EooaGBvXdrxESEsL+
hAAAH5Kfn68unhqrV692OBzq9C8S+/1oetBAQBmpqos/52LL0Z68uz6ljhQA
AAAAsKiMDmPcWcstO4xl//tjdaQA/ApLws5Ybm7uGU+XRH/uq3YeGl374c94
cY7GWzZt2sSnDywyp9MZExOjvvs1SkpK1OkHAMCusbGx0NBQdfHUaGpqUqd/
8bAkDMBJ5X/gIevRnrMvGq6oUUcKAAAAAFhsVU/8zrLPGH/OxWMNLepIAQD/
mJycDAsLO4O5kuA//WXnq1ZYNvg7Lrg66G9/9/pMjVdUVFSo0w8ElqKiIvV9
rxEVFTU7O6tOPwAAdiUkJKiLp0ZcXJw69wAg1r5uu52n/6qe+J06UgAAAACA
wFRPX+JrrrTsNhY98Kg6UgDAS6qqqs5guiT2PR+3M0gY+ei3vT5T4y0REREz
MzPq9AOBYmJiYuXKler7XqO5uVmdfgAA7Orq6lJXTpn+/n51+gFAyTE2nvb2
2yyHelLeeMPM4JA6WAAAAACARvPzkXbWCXQnZKgjBQD8w+VyrVu37rTmSsJ+
+uTuZdbt/OYr7lygyRpvycnJUacfCBTJycnqO15jy5Yt6twDAGCX2+3etGmT
unhq5ObmqtMPAGJVP/q9nVH9wzFb1ZECAAAAAGScU1NpF1o/T7Tnpnvdbrc6
WADAPw4dOnQakyUvvLDlkndZNvK7z1q+8pe/WbAZG+8IDg4eGuLJVmDB9fb2
qm93mZ6eHnX6AQCw6+DBg+rKqREWFjY5OalOPwAojTW0xL/iUsvRnr3v/DhD
+gAAAAAQ4Lp2Jtt5pKg1ZI06UgDAS+xv4BP1xa/baeHXfeCTCzpr4y0JCQnq
3AP+b+vWrep7XWPPnj3q3AMAYNfMzExkZKS6eGpUVVWp0w8AYgX3ftF6tGfZ
hYPF5epIAQAAAABibrc757aPWfYiU992q2OCxzABQG9oaCg4ONhyriTor3/b
+dorLZv3Ha+9ynjlIszdeEVLS4s6/YA/q66uVt/lGitXrhwfH1enHwAAu3Jy
ctTFU2PdunUul0udfgBQ6tyaYOfpv4rHf6GOFAAAAACwJAzkFtnpSFb/9I/q
SAEALyksLLSeLnn/J+y07VEPf2MR5m68JTY2ljkgYIE4HI7o6Gj1Xa5RXs7j
8wAAnzE8PGznCRG/1NbWpk4/ACg5JyfTL77dcqgn+XXXTfcfVQcLAAAAAFgq
Djz8Pcu+ZOKrVkx19agjBQD8Y3p6OiIiYp65kpW/+M3us5ZbNuxbLr39xRde
WLQZHK8oLS1Vpx/wT3l5eer7W2PNmjVOp1OdfgAA7EpISFAXT42kpCR17gFA
rPbJv9h5+q9t1Xp1pAAAAACAJWS8uS3+3Essu5Mln3tcHSkA4CX19fXzTJds
XvFuyyZ997LlYT99ctFmcLwlPDx8ampKnX7A34yOjoaEhKjvb43m5mZ1+gEA
sKulpUVdOTWCg4MHBwfV6QcApfHWwwmvvNxytGfPOz7s5pkXAAAAAMC/q/3V
X60fMlp24XB5tTpSAMA/3G73xo0bTzpdEvWVx+08NBp71wOLPI/jLRkZGer0
A/4mPj5efWdrGL+4OvcAANjlcrliY2PVxVOjoKBAnX4AECt68Kt2RnsG8ovV
kQIAAAAAlpyZwaHk111n2anc98HPqSMFALyko6PjxLmSoL/9fccFV1s25jtf
fUXwn/+6+FM5XhEUFDQwMKBOP+A/Ojs71be1Bo0JAMC3lJaWqounRkRExPT0
tDr9AKDUHZdmZz1Y2Vd/pI4UAAAAALBEHYrYYKdr2bE5Th0pAOAl6enpx02X
rPvQp+205NH/8zXJbI637Ny5U517wE/Ms+Wg38vLy1OnHwAAu6ampsLDw9XF
U6Ourk6dfgBQcs3MZK64y3KoJ/G1V01196qDBQAAAAAsUa7ZWTu9y8yr3udy
ONTBAgD+MTo6GhIS4pkrCf3V73affZFlM771ottefP4F4ZyOVzQ0NKjTD/iD
iooK9d2sER4ePjU1pU4/AAB2ZWRkqIunxoYNG9xutzr9AKBU//vn7Dz91/Ji
tDpSAAAAAMCS1rUrxU4Hs/GvoepIAQAvKSkp8UyXbLr6vZYN+O7/uDDsR78Q
zul4S0xMjNPpVKcf8G3T09MRERHqu1mjurpanX4AAOwaGBgICgpSF0+Njo4O
dfoBQGmyvTPxVSssR3uyrr2bh7gBAAAAAJYK73vYso+Z/IbrZ4dH1JECAP4x
OzsbHR394osvRn7tu3bW9K6/4z71rI7XFBUVqdMP+LY9e/ao72ON2NhYl8ul
Tj8AAHbt3LlTXTw10tPT1bkHALH9n3rMzmhPX1a+OlIAAAAAgA8YKj0Yt8y6
m3nw20+qIwUAvKS5uTnomWe3v/5ay6Z75/mXBz/9Z/XEjtesXLlyYmJCnX7A
Vw0NDQUHB6vvY43Dhw+r0w8AgF0NDQ3qyqkREhIyMsLTiAACWl9Wvp31YKVf
/K46UgAAAACAz6h4/BeWPc34V1w63spsGgAsCTs+81U7g4SrH3pEPbHjZcnJ
yercA74qPj5efQdr0G4AAHyI0+mMiYlRF0+NkpISdfoBQMnlcGRde7flUE/i
q1ZMtneqgwUAAAAA+IzJI10J56+w7G8Wfvwr6kgBAP8Ybz0cf95llo32trfd
/OLzz6sndryvt7dX/QkAvqe5uVl972oEBwcPDQ2p0w8AgF1FRUXq4qkRFRU1
OzurTj8AKDX+JdTO039Nf1upjhQAAAAA4GMa/xxip8t5dB/PbAKAWNGDtrYI
C//+T9UTOwti69at6k8A8DEul2vdunXqe1ejsLBQnX4AAOyamJhYuXKlunhq
NDc3q9MPAEpT3b2Jr73Kcqgn84q7XDMz6mABAAAAAD7GMT6R+tabLXude2+/
Xx0pAAS0npRsO+vBNtx2r3pWZwFVV1erPwfAl5SWlqrvWo2IiIgZpksAAL4j
JSVFXTw1tmzZos49AIiV/M+37Yz29CRnqyMFAAAAAPikIxt32el4HoraqI4U
AAKUa2Ym84q7LBvqXeddGvLU0+qJnQUUHR3tcDjUnwbgGyYnJ8PDw9V3rUZD
Q4M6/QAA2NXb26uunDI9PT3q9AOA0kDefjvD8sWffkwdKQAAAADAV7ldruwb
7rHse6ZffLtzelodLAAEooY/BdsZJFzzyYfVszoLLi8vT/1pAL4hPT1dfb9q
bNy40e12q9MPAIBdW7duVRdPjexsdrwBENDcTueed3zYcqgn4ZWXj7ceVgcL
AAAAAPBhfRm5dhYb1P3m7+pIASDgTB7pSnz1FZZN9La33Pjic8+pJ3YWXEhI
yOjoqPozAZa6gYGBoKAg9f2q0dnZqU4/AAB21dTUqCunxsqVK8fHx9XpBwCl
lhei7AzIN/zhBXWkAAAAAACfV/zQNyx7oEn/efV034A6UgAILCWf/aadQcJV
3/6RemJnkcTHx6s/E2Cp27Fjh/pO1cjIyFDnHgAAuxwOR3R0tLp4apSXl6vT
DwBK0/1Hk193nfWxHZfc4ZycVAcLAAAAAPB5o7WNcWdfZNkPPfCVH6gjBYAA
0p+9z856sI03fUg9q7Oo2AUImEd9fb36HtVgF0EAgG/Jy8tTF0+NNWvWOJ1O
dfoBQKnskSfsjPZ0J/DMCwAAAADAO6p//JR1V/Tsi0ZrG9WRAkBAcDkc2dd9
0LJl3nXuJSH/9wf1xM6i2rhxo9vtVn8+wFLkcDjWrFmjvkc1SktL1ekHAMCu
0dHRkJAQdfHUaG5uVqcfAJQGi8vjllmvByv4yJfUkQIAAAAA/Md030DSf15t
2RstvO9hdaQAEBCan11l56HRmI9/QT2rI1BRUaH+fIClqLCwUH13akRHRzsc
DnX6AQCwKyEhQV08NTgFHkCAc7vde9/5ccuhnvhXXDrW0KIOFgAAAADgV1qC
ou0sP+janaqOFAD83FR3r51luknL3/nis8+qJ3YEIiIipqen1Z8SsLSMj4+v
XLlSfXdqtLQwXQIA8BmdnZ3qyqkRFBQ0MDCgTj8AKLWFrbMz/F77q7+qIwUA
AAAA+Bvn9HT6xbdb9kmzb7jH7XKpgwUAf3bgy9+3tUY3ISM2NlY9t6OxZ88e
9acELC3Jycnq+1Jj69at6twDAGCX2+3euHGjunhq5OXlqdMPAEozg0Mpb7zB
cqgn7e23OcbG1cECAAAAAPxQd1yanUUILS9GqyMFAL81kF8ct8y6KS568KvG
iw8fPqye29EIDg4eGhpSf1bAUtHT06O+KWV6e3vV6QcAwK6Kigp15dQIDw+f
mppSpx8AlCq++XM7A++d2xLVkQIAAAAA/Nbe2++37JmmvvVmHlYCgIXgdjr3
3HSvZTuc8MrLx1sOmd8SsFsDxcXFaT8sYOnYsmWL+o7UYMNAAIAPmZmZiYiI
UBdPjerqanX6AUBpuKIm7uyLLEd78j/wkDpSAAAAAIA/O1pQaud5paof/V4d
KQD4odaQNXYa4brfPuP5lqGhoeDgYPUkj0Zzc7PwwwKWiOrqavW9qLFy5cqJ
iQl1+gEAsGvPnj3q4qkRGxvrcrnU6QcApby7PmU51BN/zsUjVXXqSAEAAAAA
fq7s0R9ab1Bz/orJI13qSAHAr0z3H01+3XWWLXD6xbc7JyfnfmNhYaF6nkdj
3bp1zC4hwM3OzkZFRanvRY2Kigp1+gEAsCuQn+M4fPiwOv0AoHR49WY7T/9V
/+QP6kgBAAAAAP5vvPVw/CsuteylFn/m6+pIAcCvlD/2UzuDhF07k4/7xkA+
g6a0tFTyYQFLRF5envou1IiJiXE6ner0AwBgV3x8vLp4aiQnH995AYCA4hgd
S33rzZZDPalvuWl2eEQdLAAAAAAgINT97lnrZQnLLhwqPaiOFAD8xFBJRdxZ
yy3b3oJ7v3jSb29oaFDP9miEh4dP/vueaUDgGBkZCQkJUd+FGi0tLer0AwBg
l1G21JVTIzg4eGhoSJ1+AFCq/P5v7Dz9d2T9DnWkAAAAAIBAMTs8kvLGGyz7
qnnv+4w6UgDwB263e++77rdsdePPvWSsvvlU77Bx40b1nI9Genr6In9ewBIR
sPuNJCQkqHMPAIBdLpcrNjZWXTw1CgsL1ekHAKXRmob4cy62HO3JffeDbrdb
HSwAAAAAIIAcXr2ZJ5gAYHEcitpop8mt+dnT87xJZ2enes5HIygoaGBgYNE+
LGCJ6OjoUN98GtzyAADfUlpaqi6eGhERETMzM+r0A4DSvg9+znq056zlQwcq
1ZECAAAAAAKLy+HIvOp9lp3WzBV3uWZn1cECgA+bHRpOedONlu1t6ttudYyN
z/9WGRkZ6pkfjR07WJ+MwOJ2uzds2KC+8zTy8/PV6QcAwK6pqanw8HB18dSo
r69Xpx8AlI5s3GXn6b/K7/5aHSkAAAAAIBB1J2TY6bc2PB2kjhQAfFjld39t
p7Ht2LTb8q1GR0dDQkLUkz8aTDkhoJSXl6vvOY3w8PCpqSl1+gEAsCtgH9nY
uHEjh6ABCGSOicm05e+0HOpJfsP1M0cH1cECAAAAAAJU0f2PWHddX3fdzOCQ
OlIA8EnDB2vjzr7IsqXNf/9DNt8wYA+mWbNmjcPhWNAPC1gipqenIyIi1Pec
Rk1NjTr9AADYNTAwEBQUpC6eGp2dner0A4BSzc+etvP03+HoTepIAQAAAACB
a7iiJu6s5Za914pv/EwdKQD4pLz3ftp6kPDsi0Yqa22+ocPhiI6OVk8BaRQW
Fi7ohwUsEdnZ2eq7TSM2NtblcqnTDwCAXTt27FAXT4309HR17gFAaaypNf4V
l1qO9uTcep+bDg4AAAAAQOrgd35l2YGNP/cSo6urjhQAfEx77A47D41W/uC3
p/W2LS0t6lkgjZUrV46Pjy/QhwUsEYODg8HBweq7TaO9vV2dfgAA7GpoaFBX
To2QkJDR0VF1+gFAqfC+h61He5ZdeLTwgDpSAAAAAECgm+rqSXz1FZbd2IKP
fEkdKQD4EsfoWOp/32LZuqa8+R2zwyOn++Zbt25VzwVpJCcnL8SHBSwdu3fv
Vt9nGikpKercAwBgl9PpXLNmjbp4apSWlqrTDwBKnTuS7Tz9V/71n6ojBQAA
AADgJU1/W2mnJzuQW6SOFAB8RvWPn7LTtB5es+UM3ry3t1c9FyTT09Pj9Q8L
WCKam5vVd5hGcHDw8PCwOv0AANhVWFioLp4a0dHRDodDnX4AkHFOTWVc+m7L
oZ6kC66Z7u1XBwsAAAAAwEscE5Opb7vVsjObc+t9brdbHSwA+IDR2sb4cy+x
bFdz73jgjNvVPXv2qGeENLZsOZNFdMDS53K51q1bp77DNIqKeO4AAOAzxsfH
V65cqS6eGs3Nzer0A4BS3W/+bufpv9bQGHWkAAAAAAD8S8eWeDv92bZV69WR
AoAP2Pehz1s3qmctHyo9eMY/YmJiImCnoqqrq734YQFLRElJifre0oiMjJyZ
mVGnHwAAu5KTk9XFU2Pr1q3q3AOA0sShIwnnr7Ac7cm+4R6306kOFgAAAACA
f3G73Xtu/ohllzbtwtuck5PqYAFgSevclmhnkW3F4794mT+ooqJCPS+kERUV
NTs765UPC1giJicnw8LC1PeWRkNDgzr9AADY1dPTo66cMr29ver0A4BS0QOP
2hntGdhbqI4UAAAAAIDj9e8psNOrrX3yL+pIAWDpckxMpl/0Lsu2NPn1188M
DL7Mn+V0OmNiYtRTQxp5eXle+byAJSI9PV19V2ls2rSJc8kBAD5ky5Yt6uKp
sWfPHnXuAUCpNy3Hzsj5ga/8QB0pAAAAAAAnV/I/37bs2Ca+5sqpnj51pACw
RNU++Rdb5/CGx3rlx7W0tKhnhzRCQkJGRka8kkNArr+/X31LyXR1danTDwCA
XdXV1erKqbFy5cqJiQl1+gFAxjUzk3nV+2wNm3d2q4MFAAAAAODkxhpa4s+5
2LJ7W/ql76kjBYClaKypNeG8yyxb0ZxbPup2ubz1QxMSEtRzRBrx8fHeyiGg
tX37dvX9pJGZmanOPQAAds3OzkZHR6uLp0ZFRYU6/QCg1PDHF+08/df8XIQ6
UgAAAAAA5lPz86ete7hnLR+prFVHCgBLTuHHv2LdhC678GhBqRd/6MDAQFBQ
kHqaSKOjo8OLmQQk6urq1HeSRmho6NjYmDr9AADYlZeXpy6eGjExMU6nU51+
AJCZ7OhKfM2VlqM9WVe/3zU7qw4WAAAAAID5zAwMJv3XtZad3IIPf0EdKQAs
Ld3x6XYeGi179Ide/9EBOz+1YcMGt9vt9XwCi8bhcKxevVp9J2mUlnpzcSwA
AAtqdHQ0JCREXTw1Wlpa1OkHAKXih75hZ7SnN32vOlIAAAAAAKy1rlxrp5/b
uT1JHSkALBXO6emMy+60bDmTLrhmqqfP6z99amoqPDxcPVmkUV5e7vV8Aoum
oKBAfQ9prF692uFwqNMPAIBd8fHx6uKpwVntAAJcf06BnXHyks89ro4UAAAA
AABbXDMzdhY2ZF17t5uzAwDgmPqnnrczSNjyYvQCBVBTU6OeL9KIiIiYnp5e
oKwCC2psbCw0NFR9D2m0traq0w8AgF0dHR3qyqkRFBQ0MDCgTj8AyLgcjuzr
P2Q51JNw/oqJQ0fUwQIAAAAAYFdPUpadtQ3Nz65SRwoAehOHjiScv8Kyzcy+
/kOuBdsVx+VyxcbGqmeNNLKzsxcoq8CCSkpKUt89Gtu2bVPnHgAAu9xu94YN
G9TFUyMvL0+dfgBQanom3M4IeeOfQ9SRAgAAAABwevLe80nLDm/Km250jI6p
IwUAsf2feszOIGF/TsGChtHe3q6eNdIIDg4eHBxc0NwCXtfd3a2+dWT6+rx/
fi4AAAukvLxcXTk1wsPDp6am1OkHAJmpnr6kC66xHOrJuOxOJ1uXAwAAAAB8
zeD+MjsrHCq//xt1pACg1Ju+105rWfqF7yxCMCkpKeq5I43du3cvQnoBb3G7
3Zs3b1bfNxo5OTnq9AMAYNf09HRERIS6eGpUV1er0w8ASqVf+p6d0Z7uhAx1
pAAAAAAAnInyr/3EstubcN5lE4eOqCMFAA3X7GzmVe+zbCoTX3PlZEfXIsQz
PDwcHBysnj7SaG5uXoQMA15RVVWlvmM0wsLCJiYm1OkHAMCuPXv2qIunRmxs
rMvlUqcfAGSOFpTGLbNeD7b/E/+rjhQAAAAAgDM0cbgj4ZWX0/kFgFNp/Guo
nYdGjZctWkhFRUXqGSSNdevWMW8FnzA7OxsVFaW+YzQOHjyoTj8AAHYNDg4G
7NMW7e3t6vQDgIzb5cq55aN2HpQeb25TBwsAAAAAwJmrf+p5O6sdBveXqSMF
gMU21dmd+JorLVvIzKve55qdXbSoZmZmIiMj1ZNIGiUlJYuWZ+CM5ebmqu8V
jbVr1zqdTnX6AQCwKy4uTl08NZKTk9W5BwClluDVdsbD6373rDpSAAAAAABe
FsfoWMqb32HZBc698xPqSAFgsZV+4Tt2Bgl703IWObCGhgb1PJJGWFjY5OTk
ImcbOC0jIyMhISHqe0WjtbVVnX4AAOxqbm5WV06N4ODgoaEhdfoBQGZmYDD5
9ddbDvWkX/QuxwTjDwAAAAAAn9e+dpudNQ/Gy9SRAsDi6c8psNM2Fn/6scWP
ze12b9q0ST2bpJGenr74CQfsC9j9RhISEtS5BwDALpfLtW7dOnXx1CgqKlKn
HwCUyr/2EzujPV27UtSRAgAAAADgBW6nM/u6D1p2hDMufbdrZkYdLAAshpca
xhvusWwYE85fMXHoiCTCrq4u9WySTH9/vyTngKUjR46o7w+NoKCgo0ePqtMP
AIBdJSUl6uKpERkZOcPADoAANlR6MO6s5ZajPfvu+R91pAAAAAAAeE1PSrad
x6Pqn3peHSkALIaWF6KWfquYkZGhnlPS2L59uzDtwKm43e7169er7w+N/Px8
dfoBALBrcnIyLCxMXTw1Ghoa1OkHABmjy5Z7xwOWQz3x514yWtuoDhYAAAAA
AG/a/8mvWfaIky64ZmZgUB0pACys6d5+o7mz3jvxsjudU1PCOMfGxkJDQ9XT
Shp1dXXCzAMnVV5err4zNFatWjU9Pa1OPwAAdqWnp6uLp8amTZvcbrc6/QAg
cyhig52n/2p+8Sd1pAAAAAAAeNlIVZ2dfbPLv/YTdaQAsLDKHv2hnUHC7vh0
daT/KC0tVc8saaxevdrhcKjTD/zL9PT0qlWr1HeGRm1trTr9AADY1d/fHxQU
pC6eGp2dner0A4DM7PBIypvfYTnUk/rftzhGx9TBAgAAAADgfZU/+K311tnn
XDxW36yOFAAWytHCA3HLrNeDFX7sy+pIX+JwOFavXq2eXNIoKChQpx/4l6ys
LPU9obF+/Xr2GwEA+JAdO3aoi6dGRkaGOvcAoHTw20/aefqvY3OcOlIAAAAA
ABbEVE9f4muutOwaFz3wqDpSAFgQbpcr59b7LJvBhPMuG2tqVQf7Ty0tLer5
JY3Q0NCxMR7dxZJw9OjRgN1vpL29XZ1+AADsqq+vV1dODeP/nEdHR9XpBwCZ
kcrauLMvshztyXvvp9WRAgAAAACwgJqfi7DzwFRPYqY6UgDwvrbwWDttYO2T
f1FH+m+2bdumnmXSSEpKUuceeMnu3bvVd4NGamqqOvcAANjlcDjWrFmjLp4a
paWl6vQDgFLe+z5jPdpz9kXDB2vVkQIAAAAAsICcU1Npy99p2Ufec9O9HBIE
wM/MHB1MfsP1lg2g0Ug6JibVwf6bvr4+9SyTTHd3tzr9CHRNTU3q+0AjJCRk
eHhYnX4AAOwqLCxUF0+N6Ohoh8OhTj8AyLSv227n6b+qJ36njhQAAAAAgAXX
uSPZTje5NTRGHSkAeFPF47+w0/p1bktUR3oSOTk56rkmjc2bN7NEGUJOp3Pt
2rXq+0Bj//796vQDAGDX+Ph4aGiounhqtLS0qNMPADKOsfHUt91qOdST8qYb
Z4d44AUAAAAA4P/cbnfObR+z7Ckbvemltk8OAJyxoQOVcWctt2z69n3o8+pI
T25iYiIsLEw93aRRVVWlTj8CV3FxsfoO0IiMjJydnVWnHwAAu5KTk9XFU2Pb
tm3q3AOAUtWPfm/n6b/2tbSWAAAAAIBAMZBbZKezXPOzp9WRAoAXuN3u3Hc/
aNnoxZ97yWhtozrYUzp48KB6xkkjKiqKpSmQCOSlmI2NS7cxBADgON3d3erK
KdPb26tOPwDIjNU3x597ieVoz97b72f7cQAAAABAQCn90vcs+8uJr1ox1dmt
jhQAXq7Da7bYWQdb/eOn1JHOJ5APsMvNzVWnH4EoLS1Nfe1rcGArAMCHGDXL
qFzq4qmRk5OjTj8AKBV8+AvWoz1nLR8qqVBHCgAAAADAohpvbrPzFFXJ57+l
jhQAXpbZ4ZHUt9xkfVruf9/iGB1TB2uhtbVVPe+kERISMjIyok4/AktfX5/6
wpfp7uaJAACAz6iqqlJXTo2wsLCJiQl1+gFApmNLvJ2n/w5+65fqSAEAAAAA
EKh98i/WHedlFw6XV6sjBYAzV/mD39oZJGyP3aGO1JaEhAT17JNGXFycOvcI
LNu2bVNf9RqZmZnq3AMAYNfs7GxUVJS6eGpUVLDpDYDA5ZycTL/4dsuhnuTX
XTfdf1QdLAAAAAAAAjODQ8mvv96y75x/92fVkQLAGRqpqos/52LLhi7vrk+p
I7Xr6NGjQUFB6gkojSNHjqjTj0BRV1envt41QkNDx8aW+n6JAAB45Obmqoun
RkxMjNPpVKcfAGRqf/lnO0//ta1ar44UAAAAAAAZo19sp/vcsSVeHSkAnIn8
9z9k3cqdfdFwRY060tOQn5+vnoPSWL9+vdvtVqcf/s/hcKxevVp9vWscOHBA
nX4AAOwaGRkJCQlRF0+N1tZWdfoBQGa85VDCeZdZjvbsuelet8ulDhYAAAAA
ABnX7GzmFXdZ9qAzr3qfy+FQBwsAp6dj0247q14rv/trdaSnZ3p6etWqVepp
KI3y8nJ1+uH/CgoK1Fe6xurVqx38/x4AwHfExcWpi6dGQkKCOvcAoFR0/yPW
oz3LLjy6r0QdKQAAAAAAYl27UuwsmWj620p1pABwGhxj42lvv82ycUt5040z
g0PqYE9bTU2NeiZKY9WqVdPT0+r0w5+NjY2Fhoaqr3QN9hsBAPiQI0eOqCun
RlBQ0NGjR9XpBwCZ7rg0O0PZZf/7Y3WkAAAAAAAsCYUffdiyH538hutnh0fU
kQKAXTU/e9rOIOGhqI3qSM+E2+1ev369ej5KIysrS51++LOkpCT1Na6xfft2
de4BALDL+J/hDRs2qIunRn5+vjr9ACDjnJ7OXGF94EXSf1491d2rDhYAAAAA
gCVh6EBl3DLrhRMHv/MrdaQAYMtYfXP8Ky61bNb2vut+t9utDvYMsTEC4HVd
XV3qC1ymv79fnX4AAOwqLy9XV04NtswFEODq/+9ZO0//tQRFqyMFAAAAAGAJ
qfjmzy170/GvuHS89bA6UgCwVnDvF60HCZddOFhcro70ZUlNTVXPSmns3r1b
nXv4IbfbvWnTJvXVrZGTk6NOPwAAdk1PT69atUpdPDVqamrU6QcAmcn2zsRX
rbAc7cm+7oMuh0MdLAAAAAAAS8hkR1fC+dZ96qL7H1FHCr81Vt/c+NfQQ1Eb
Z4eG1bHAt3XtTLbz0Gj5Yz9VR/pyDQ8Ph4SEqCemNJqamtTph7+pqqpSX9ca
YWFhk5OT6vQDAGBXdna2unhqrF+/3uVyqdMPADL7P/k1O6M9/dn71JECAAAA
ALDkNPwp2E63+ui+EnWk8EM9ydlxZ19kXmOpb7np8JotvnucH7Sck5PpF99u
2ZQlv+666X5/OHxw//796rkpjbVr1zqdTnX64T9mZmYiIyPV17VGZWWlOv0A
ANg1ODgYFBSkLp4a7e3t6vQDgExfZp6dgevSL35XHSkAAAAAAEuRY3wi9a03
W/as995+vzpS+KE9N3/kuCst57aPDeQXq+PCYjgUuaHmZ087xsa98m51v33G
ziBha2iMV36c3OzsbFRUlHp6SqO4mCYCXrN37171Fa2xdu1a9hsBAPiQ3bt3
q4unRkpKijr3ACDjmp3NuuYDlkM9ia++YvJIlzpYAAAAAACWqCMbdtpZSnE4
epM6UvibUy1HrPjGzxjM8XsV3/z5S7vDve3WIxt3vcy3Gm85lPDKyy0bsT03
3ev2ow2mGhsb1TNUGmFhYRMTE+r0wx8E8hmsbW1t6vQDAGBXc3OzunJqGP+j
Yvzvijr9ACDT+JdQO0PWTX8PU0cKAAAAAMDS5Xa59tx4j2X/Ov3i253T0+pg
4VfKH/vpKR/xe9WK5mdXOSYm1TFioeS++0HPx53//odGKmvP+K2KHnjUziCh
n21A53a7N2/erJ6n0khLS1OnH/4gYPcbSUxMVOceAAC7nE7n2rVr1cVTo6io
SJ1+AJCZ6upJfO1VlkM9mVfc5ZqZUQcLAAAAAMCS1peRa2dBRd1vn1FHCr/i
GJ/Y/8mvzbcQ8aJ3dWyJV4cJ73O73ceP7J19UeX3fzM7PHK6b9WTlGWn+Trw
5e8vxC+i1d3drZ6nkunr61OnH76tvb1dfRVrBAcHDw4OqtMPAIBdxcXF6uKp
ERkZOcMiBwABrOTz37Iz2tOTkq2OFAAAAAAAH1D8ma9b9rITX3vVdN+AOlL4
m+749IzL3zPPhZf33k8Pl1erw4Q3jbccOulnnfLmdxxes8Xtdtt8H+f0dOaK
uyzbrqT/vHqqu3dBfyOVzMxM9WyVxrZt29S5hw9zuVyxsbHqq1hj37596vQD
AGDXxMREWFiYunhqNDQ0qNMPADIDuUV21oMVf+br6kgBAAAAAPANo7WNcWdf
ZNnXLnvkCXWk8EOumZm63z4z34bwZy2veuJ3rEj0G127UuZpZ3LveGCo9KCd
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
P6lOCgAAAAAA4O8srW1mNnvPvf1n6qQAMBoul6tu4cqkky9016y+64m+3TXq
pKMxMDAQGhqqng71sPfff/+ll1762c9+9sADD9x111233HLLddddd+WVV152
2WVz584d/t+33nrr3XffPX36dPcLM768POy2225788031Udmyvz58618XQUT
F0vCgIknOTlZPXhqrF69Wl17APA2l8ORft4Nhl3E2CNP66+pU4cFAAAAAADA
33d/HMp+7wAmNntff+mr78UeMXPE7RAnzyh97X17b5866QHbtm2bekb0oHz4
4YfPPPPMzTfffNFFF02bNu2oo44yudBrFKZPn37PPfeM833DysrK1NcUMIZY
Egb4KNcImpqa1COnTGtrq/q0AIC3Vf8twkwLseKPf1UnBQAAAAAAwD84hoZS
pl1q2M9JP+8Gl9OpDgsAo9dfvSfvR4+7edAlnXR+3aJVLpdLnfQAOByOyMhI
9aTogfnggw+eeuqpa665Ztq0aZMmTRq7NWD7NfwT58yZ86tf/Updhv1YsWKF
b11+wIFiSRjgK7687sv53xxfsmrVKvXgqZGamqo+RQDgbZZ97fHHf8+wf5hy
6uWOwUF1WAAAAAAAAPxL4+pYM2/51YZFqZMCwMHatzEr7Zzr3TzrMi66pT1r
qzrmAaipqVHPi5rywQcfPPjgg2eccYb3l4Ht14wZM5566qnPPvtMXZj/aGpq
Ul9NwNhiSRgwnu13Ddi/V3/Z7XabzVZdXZ2UlBQcHPzrX//63nvvvfDCC88+
++xZs2ZNnTr1O9/5zimnnDI8vJ511lnnnXfepZdeetVVV91xxx2PP/74b3/7
248//lg9zHpMSEjIwMCA+nQBgLcV/vzXZpqHzdHJ6qQAAAAAAAD4D5fLtemS
2wy7OkknX2jvp/UNwOe5HI7qwIUJ35zj5olX8PDzg/WN6qRmrV+/Xj07OqKP
P/74scceO+eccw499FCvLPU6MCeddNJDDz306aefquv0t+Rkpk4w8bEkDBhv
/u8ysC+vAbNarbm5ucND+d133z179uwjjjjiYMbc448//vTTT7/uuuuefvrp
Dz/8UD3wjt62bdvU5w0AvK0zrzB6kvF6sOybHlYnBQAAAAAAwFe1Z+aZedev
7HcfqJMCgGdYO7t2PPdGzGHTR3rixR09q+KdT33imxft7e0BAQHqCdKvevfd
d6+77rojjzzyYKaP/+mII444/vjjJ0+efPB/1H6dcsopL7zwgrBWwcHBvb29
6usIGHNXX3318B03/G91kFG66qqr3D9M3nrrLXVGwJSRVoLZ/z85OTnvvffe
zTfffOyxx47RyDtp0qQpU6YMPw2eeOKJjz76SDgEH6jIyMjhQqlPIAB41fBo
YeZN0pjJM/oqq9VhAQAAAAAAsB/5P3nWsL0Td/Sswb181grAxNFbtiv7xofc
PPdSpl3auDpWHdNYRkaGeo70P15//fUrrrjigLYFO/roo88999x77733tdde
i4iI2LRpU3l5eUNDQ1dXl91u//dh2my2jo6Ourq60tLSjRs3hoWFvfzyy3fe
eefBb10y7KKLLnrnnXckFcvLyxNePIDX1NTUfPjhh8P/VgcB/NdIK8GGR9ii
oqLf/va3M2bMOMjx9EAdfvjhF1544VNPPfXJJ59IRuEDwhMMgB+qnbfU1Guk
v/+zOikAAAAAAAD2r7+qNmbyDMMOT8FDz6mTAoCHNUcnp54+182jL3Pu3V3b
dqhjujM0NDRv3jz1NOnfXn311fPOO2/SpElmpoC//e1v33PPPcP/X0VFRU6n
8yArYLfbc3NzP/zww9tuu+24444b3az05MmT77jjDi9PSS9cuPDLy94AAPC4
r2wL9uWVYNXV1e++++7ZZ589uqHTg4466qgrrrji+eef9+YofEDWr1+vPpMA
4G3Wzq7Eb51j2C1MnnKxvX9AHRYAAAAAAAAjKv3te8bv/U2a0l1Yok4KAB7m
tFp3fRgc/42zRnz6HTK16KlXLK1t6qQj2rFjh3CS9P3337/yyivNLAa7+OKL
P/nkk9LS0rErhdPpLCwsfPfdd2fPnj2KKenvfve7r7/+utdKt3v37rErBQDA
z/3fxWD//DqkzWbbtm3bgw8+eEC7en7ZMcccc/LJJ59++ukXXHDBVVdddfPN
N1977bWXXnrp8OA7derUE044YdR/8imnnPLTn/70008/9dpYbEZAQEB7e7v6
fAKAtxU/85qZLcJ8Ym9tAAAAAAAAf2br6k745hzDPk/W1fepkwLAmLC0thU+
/nL0IVNHegDGf+Os3X8Jc1qt6qT74XQ6o6KivD9D+umnn95///1HH320++nd
M888849//OOuXbu8XJbi4uJXX3112rRpBzQZPXny5IcfftgL1VuzZo2XCwIA
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
bEa13+rahfqkAQJhgOB+v6KNlRXrdEGDulm3Kd26ivojIBAU48InUxm/FyEh
IbR7mnkaMmRI/TqPHj06LS1Nx92RGAmjm+SMGTN0Z2hhYWGuPyAA/YXN+or9
iDBOb2FIJO1MAQAAAAAAAADATKTuPqbPqfXCp9G0MwUAMFU1NTWakTCpVFpW
VlZcXJyTk5OWlhYXF/f06VN/f393d/czZ84w9s5OnDhBO3Gz9cMPPzCq3b9j
e+qTBgiEAWL3+++yjhbocPHTqdQfAYGgGNvGMw/ZEwgEtHuaefr000/r17lL
ly4pKSnad0cqFIq6uyPNdeLIJEbCFi1axJpkeXk53SQB6Cp28dZn8S1mBe4j
BgAAAAAAAACARqOWVnh2e5t1VSpw/BzamQIAmKTa2tqamprKykqFQiGRSMrK
ygoLC7Ozs1NTU2NiYkJCQnx9fV1cXH777TfGxhnuomo6+/btY1T7lTatqU8a
IBAGiLE9u7Hu2uswf9hA6o+AQFAM8itQ/zeiY8eOtBua2dIe3o6IiKi7O1Ig
EIhEIvJaJZfLNXdHVldXm+tBYSYxEvb111+zJpmfn083SQCKqlUqn4ETWFfe
3DsMU5Zg0hgAAAAAAAAAABpT3uXb+nxXMf+mI+1MAQBMT21tbXV1dWVlpVwu
Ly8vFwgE+fn5XC43OTk5KioqODjY29vb2dl5z549jI2z+/fv087dbP3++++M
are2sqQ+aYBANHVU7FhrweGw7trr0LO9NfWnQCAoxltdu9T/jRgzZgzthma2
zp07x/j8cXBwSE9Pz87OLigoKCkpEQqF5LVKJpMplUrzvjvSJEbCNm3axJok
n8+nmyQARWn7T+iz7MY9+SftTAEAAAAAAAAAwNzUVlf7j/iQdW3Kp//4apWK
drIAACamtrZWrVarVCqZTCYWi/l8Po/Hy8zMTExMjIyMDAwMfPTokaOj4/bt
2xkbZ56enrRzN1sXL15kVNuSw6E+aYBANHVwv1/BumWvm5WFhWzHWuoPgkDQ
ih7trOv/RixatIh2QzNbHh4ejM+f8+fPp6amcrlc8h5VXFxcVlZGXqsqKioU
CgVGwqiPhO3YsYM1SblcTjdJAFrkeQVubQexrrn5vzG1Rq2mnSwAAAAAAAAA
AJghvudjfb6xmH7wDO1MAQBMTP2RMJFIxOfz8/LyNCNhERERAQEBHh4e9+/f
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
vXv3nJycHj165OfnFxwcHBkZSd6X0tLSuFwuj8crLi4mr1Ll5eUVFRXkzYq8
X6nVavKuhZEwQ3rllVfIuyvt8gAYSMkjf33mwaK/2Eg7UwAAAAAAAAAAgEYj
fBqtz7JY8g5b2pkCANBUW1tbXV1d/+7IkpISHo+XmZlZ/+7Ihw8f3rx5U3N3
5G+//bZ3794dO3aMHDmSsQc3cOBAqVRK+5mMWkFBQefOnRl1OzT1/6gPDyAQ
CATCnEL045ru1m0Z7ebXX3+l3QZNBpfLbdWqFaOAW7ZsuX//vouLC3k1evz4
cWhoaHR0NHlfSk9Pz8nJIS2ez+cLhUKJRCKTycibFUbCDG/+/PnkB0G7NgAG
UlNZ6Tt4IuvCl1v7ocqiEtrJAgAAAAAAAAAANKaoZRtYV8ZcWw+U52HFGACa
L+27I0tLS+vfHRkaGurr6+vi4nL37t0rV66cO3fu6NGjv/76686dO9evX9+6
dWvGTtyyZctoP5PxIqX+4APmsS1Du7xcvm0N9eEBBAKBQJhZXPx0KqPjtG3b
Ni8vj3YzNA2zZ89mVG/YsGF37txxdHR0c3Pz8fF58uRJWFgYeVNKTk7OzMzM
zc0tLCwUCAQikUgqlcrlcvJmVVVVVV1dTbo/7adpEsY2EjZjxozIyEjaVQEw
qHTb0/p8FzLrdzvamQIAAAAAAAAAADQyeQ7PtdUA1sWxyM/W0c4UAIAazUjY
s+6OTEhICA8PDwgI8PDwePDgwbVr1+zs7E6ePHnw4MHdu3dv37592rRp2lty
V65cof1YRmrv3r3a5Tq2eE7Qjo2hOzeH//Jj9L6f4g7YJP+2N/3YgayTh3LP
Hi04f6L40mnBlXNC+wvi6xclN/+suH1Ffsdece8vpcM11f3rCATdUBzbS33u
pSmCPBf12iIQ/w2H6+Qzn3zyK+7+Jb9zlTQC6c3L5Tcuia9dJN2B9IiSP88U
2Z3KP3887+yx7NOHs04cSv/9QMqRfW/368NoOosWLaLdDE0Aee1h1M3CwuK3
337T3BpJ/ls/P7+goKCIiIi4uLjU1NSsrCzNrZGlpaVisVhza2TdSJhZHhH2
b6MZCbO2tl66dOmTJ09o1wPA0BT5RW7Wg1mXvPyGT66pqqKdLAAAAAAAAAAA
QONL2fkb+1cmOb1FEbG0MwUAoEZzd6RKLs+755r068lcz8d8Pj8/P5/L5SYl
JUVFRQUFBXl7ezs7O9++ffvKlStnz549cuTI/v37d+7cuXnz5p49e2rvzaWm
ptJ+LKPz5MkTS0tLRq0GDx68ZcuWn3/+ed++fUePHiW1vXz58p07d0i1fXx8
goODo6Ojk5OTs7OzyU+E/FzEYrFMJtPsMpvrRVRgWlT3r1Mf32qKIM9Fu7QA
/6Xp1Gq1WjO/XVFRQdpBWVlZcXExj8cj/TotLS0+Pj4yMpI0Dn9/f09PT9JH
HBwcbG1tORwOo/U8ePCA9gMZNVLbfv36MYo2ffp08hZU/9bIkJAQ8o6kuTVS
06ZLSkrID6W8vJx0avJjMu9bI/9NeySsQ4cOixYtunfvnlwup10JADoiF6/R
54gwgW8Q7UwBAAAAAAAAAACaRJVE+ujVt1iXyIImzqedKQAANbW1tQL/EP83
p9V9KsbtPVZUVJSdnZ2WlhYXFxcWFvb48WN3d3cHB4dr165duHDhxIkTdQeF
rVy5slWrVox9urfeekupVNJ+MiNSVlbWq1cv7d3MNWvWkBr+8ssvpJ6kqqS2
pML379/38PAgNSeVj4+PJz+F3Nxc8hMh/xCJRKK5i8qMTx0B04KRMAADqLvl
ubKykrRXmUxG2oFQKOTz+QUFBTk5ORkZGUlJSdHR0U+fPg0ICPD29nZzc3N0
dLxz586UKVMY3adTp06krdB+JuO1cOFCRsXat29PGvTdu3cfPnxIXoeedWsk
+XGIRCJNpyY/prpbI821X7u4uDTulJc2CwuLjh079u3bd8SIERMmTJg3bx55
+ST/x+ZyueZaVQA9lfqH6DMPFrl4De1MAQAAAAAAAAAAmlCO3Q19FsoK7rrQ
zhQAgAJZdl7EwtWMj0TXNoMKs3Pz8vIyMzMTExMjIyMDAwO9vb0fPnx469at
y5cv1x0U9vPPP2/ZsuWTTz7R3sVbsmRJTU0N7eczCkql8v3332fUh8PhLF68
mFRv586dpJJHjx49c+YMqe3t27ednZ1JtYODg6OiopKSkjTXUZWUlIhEIqlU
qlAozPsiKjAtGAkDMIC6W57J579KpZLL5aQdkKYgEAiKiopIvyadIiUlJS4u
Ljw8PCgoyM/Pz8PDw8nJ6d69excuXLC2tmb0oPHjx6vVatqPZYz++OMP7Vea
lStXkvcfBwcH0qAfPXrk7+9PenRERER8fHxqaiqXy61/ayT50WiGt9GsAaCJ
1KjVfq9PYV3mcms7SMErpJ0sAAAAAAAAAABAE/p7rWz4ZNa1Mp+BE2oqK2kn
CwBgOGqZPOPQWdfWAxv8VCxMTCkoKMjOzk5NTY2NjX369Km/v7+bm1uDB4Vt
2rRpxIgR2luoGzZsoP2U9NXU1MyfP1+7OOPHj9+4cSOpHqkh44gwd3d3zRFh
cXFxaWlpOTk5hYWFpaWlmruoVCqV5iIq2k8G8DeMhAEYRt3dkaQLaO6OJE1B
c3dkfn6+5mDPhISEqKiokJAQ0kS8vLxcXV0fPHhw+/bt7777TrsN/fTTT7Sf
yejEx8e3bt2aUajXX3+ddOc7d+44OjqSFyFvb++AgIDQ0NDo6GjNrZGkTZNX
prpbI8mPpjncGgkAFGX9bqfPNx/TD56hnSkAAAAAAAAAAECT43s+1me5LPPI
H7QzBQAwhNra2qKHjzx7jnnW56Hfm9OEQqHm4JGMjIzExMSIiIjAwEAvLy/t
g8JsbGy2bNmydu3aLl26aO84Hzx4kPbjUtbgRnyfPn3Wr19f/4gwUs/6R4QF
BQVFRUWRymdmZjKOCKusrMSpI2A8MBIGYBg67o4sLCzMzc3V3B0ZExMTFhZG
Wravr6+7uzvp2vfu3btx48aECRMYnYjD4ZC2TvuxjAgp6fDhwxlVat++/cmT
J2/evEnK6OTk5OHh4efnR3p0eHh4bGxsSkoKadPkZYn8CAQCgaZT190aiZEw
AGgKymK+e4dhrAtcvoMmVqtUtJMFAAAAAAAAAAAwhJBpn7GumHm8/EalUEQ7
UwCAplUWFB743mwdH4b+oz4SJKWJxWKBQFBQUMDlchs8KMzOzu7kyZOHDh3a
u3fvjh07fvjhh88//7xly5ba40+XL1+m/dDUkOJoF6Rdu3YrVqwgFSN127Nn
D6khqSSpp+aIMA8PD1JnUu24uDhSec3ZI+RnUXdEWFVVFbaYwXhgJAzAMBq8
O5I069LS0uLiYh6Pp+nX8fHxkZGRwcHBpJV4enq6uLiQznL79u2LFy9269aN
0Y86duxI/jztJzMKpKozZ87UbtmbN2/WHBH24MEDV1dXLy+vgICAkJCQqKio
hISEtLQ0Uvb8/HzyIygrKyM/Ds0RYXW3RqJfA0Cji16+QZ/vPJa4+9HOFAAA
AAAAAAAAwEDK41OcLfqwLprFr7ehnSkAQFNRFpXEr9vpzHnmZ6B7x9dT951Q
yGRyuVwikWiuo9IcPFJ3UJi3t7eTk9Pt27evXLly7ty533///cCBAzY2Nj/+
+OPGjRvnzp1raWnJ2E4l/8m9e/doPz0FJ0+e1N5cbtWq1dKlS0mtSMV27dpF
qkdqSCpJ6nnnzh1nZ2cfHx/tI8KEQmHdEWG4NRKMCkbCAAym7u5I0gvq7o4k
DYK0iYKCgpycnPT09KSkpOjo6KdPnz558oQ0FM1BYXfv3r1x48a+ffusrKwY
Xalnz56k0dN+MspIYZcvX67dsmfOnGlvb1//iDBfX1/yLhQWFhYbG5ucnExe
kEj1CgsL+Xw++UGQdyeZTKZUKnFrJAA0kbLgCB3/NlcXYXO+pp0pAAAAAAAA
AACAQcWt3s66bubS4rWKdC7tTAEAGlm1SsU9fdmt3ZBnfgBa9IlevlEpKKuu
rq7baBaJRAKBID8/Pzs7W3NQWFhYmL+/v4eHx4MHD65fv37x4sVTp04dPnx4
3759P//885YtW9avXz9jxgwOh8PYVLWwsPjjj+Z1Oe/OnTu1N5etrKzmzp2r
uTKSVIzUjVTv9OnTly5dunHjBqkqqW1AQEB4eHh8fHxaWlpOTk5hYWFpaanm
iDDNRVTYYgajgpEwAINh3B2pOShM06w1dz1nZWWlpKTExcVFRERoHxR27dq1
ZcuWafemoUOHkkZD++Fo+vHHH7XL0r9/f9KdGUeEPX78OCQkJDIykrRp8mrE
5XJ5PF5xcTEpoFgs1twaiSPCAKCJ1FZXP357Buu6lmvrgTJuc5/1BQAAAAAA
AACA5kZZzNc1DlH3bcpZX9HOFACgMfG9Anz6j9fxufdk7KeShJTa/9AcP6K5
kUoikQiFwuLi4ry8vMzMzMTExKioqKCgIB8fHxcXl7t379rb258/f/748eO2
tra7d+/WXB+5du3aiRMnam+tEr/88gvtYhgCqeHKlSu1H5/D4cyYMYPUh1Rp
+/btpGIHDx48ceIEqSGpJKmnq6urr69vcHBwdHR0UlJSVlYWjggD44eRMACD
YdwdWXdQWFlZGWkWmhHu9PR00q+1Dwq7d+/ejRs3rl69Om7cOO0O9e6778pk
MtrPR8exY8e0C9KhQ4fDhw9rjghzcHBgHBEWExND2nRGRobmcmfNEWHkB6G5
NVLTrDESBgCNLvvsVX2ujEzdfYx2pgAAAAAAAAAAABSk257WZwGt9HEo7UwB
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
Q4cO9d6BfeaZZ+i75HJ5ox6lxlBRUbFly5aOHTvWu19PPvnkd9999+uvv86b
N2/RokUsD7Z9+3Y6PrS/dKxMTU2vXr1qa2vr6urq6+vLloxMSkpKS0vLzMzM
zc1lU0cwIgyaOUTCAJqexKCw7OzsjIwMFuGOiYm5efNmcHAwdRm2fCS1bEtL
y8uXL58/f97ExMTIyGjnzp0vv/xyvY2MWlh5uaYnDy0Cna48/fTTdfe0TZs2
M2bMOH78+KlTp86cOXPhwgX6ymvXrlGPZktG+vn50WlPREREbGws69R0RsRG
hBUXF2NEGAA0nurCIocXBqq9fuXY5f2a0jLexQIAAAAAAAAAADQLpYkpEvEJ
YQufuZR3pQAAKikUivSL1xxefEfi91jAV9PKU+88xCOL7zVLLx/p5ORkZWV1
6dKlM2fOHD9+/NChQ3v37mWpsBUrVixatIilwn744QdVN53J22+/TQ/VGEep
kVhaWvbs2VPV7vTo0eOnn34S8mB0HOho0DGhI3P48OETJ06cPXv28uXL1tbW
zs7OPj4+wcHBSktGFhQU0DGXyWTIg0Ez12SRsMKVcxEJA2DqDgpjnbqwsDA3
NzcrK4uadUpKSkJCQlRUlNLykdR62PKR586dMzY2Pnny5P79+3v16lVvO+vX
r19kZCTv3W0A1E/nzp1b7z4+/vjjf/zxh6GhoZGRkYmJibBkpI2NjdKSkdHR
0YmJidSp6fDSGVFeXp54RBidMrF+jRFhANCAIv5Yr8mIsAyz67wrBQAAAAAA
AAAAaEailm1Vf2GtTbeimzG8KwUAqEeed6DHoC8lfoN5DByd6+n/cA8uDAoT
lo8Uxo9kZWXduXPn1q1bMTExN27cCAgI8PDwcHBwuHbtmpmZmYmJiaGh4aFD
h/bs2bN161alVNj06dPfeecdHR0dVUmqn376iR68YQ9Ug4uNjf3iiy9U7YKu
ru7QoUNpT8V5sHXr1tHRoGNCR+b48eNnzpy5dOmSlZWVk5OTp6dnYGAgHUl6
2LpLRrJbzFgyEpqzpomEbRox5HHdNvQnImEATL2Dwqh3UAfJzs6+e/fu7du3
qVnHxcVFRESw5SO9vLxcXFzs7e2vX79+5cqVixcvmpqanj59+sSJE9SeBgwY
UG9f69Chg4GBQYvOONERULV3nTp1Wrly5bFjx06ePGlsbHzu3Dk6mbl69Sr1
aDq3cXV19fb2ZktGRkZGCktGZmZmsvA2HfCysjKW38aIMABocEU3Y6x0u6u9
cuX738m8KwUAAAAAAAAAAGheqvIL7P/TX+21Nb/RP/GuFADgX8pvZ4TPWibx
i8vh+bdv6Z1QPFqISGkCidLykWxFqqioqLCwMH9/f3d3d3t7e0tLy4sXLxob
Gx87dkxfX3/37t1bt25dt26dOBU2Y8aML7/88oknnlAVqWrXrt3MmTNjY2Mb
6nA1oKCgoIkTJ7Zp00ZV8U8//fTYsWNpH2lPaX9pr5cvXy7kweiYGBoampiY
mJmZXb9+3cHBwcPDIyAgIDw8PDo6+tatW7dv387KysrLyysqKiorK8OSkdAi
NE0krPvTneklRn8iEgbASAwKoz5y7969jIyM1NTUxMREYflIPz8/T09PZ2dn
Ozu7a9eumZubU9c+e/YsS4UdOXJk+PDhqhrc4MGDqQny3ukHRkdj4cKFurq6
9e7USy+9tGnTJpYHo4NgampKB+TKlSvUo+msxsXFhQ4XneTUu2Qka9bCkpFl
Wdmy3HyMCAOAhuXzyUS116ys2/YojmyOb50AAAAAAAAAAAD4Sj58WpMJ/FlW
TrwrBQD4W025LHGvgU2H1yTuCNz4bWV1UXGDPJ2q5SNzcnLYjWa2IlVISIiv
r6+rq6utra2FhcWFCxdOnz597NixgwcP1k2F/fbbbzNnzvz+++979Oih6r4z
0dHRGTdunJ+fX4PsyKNzcHD49NNPpQt+/fXXp0yZQnsn5MGE+WB79+7V19en
Y2JiYnLx4kVLS0t7e3s3NzfawdDQUDqGiYmJaWlpbOpIYWEhu8Us5MFwcxma
s6aJhHXp3IleaPQnImEAAnGbZqmwsrKy4uLigoICtnzknTt32PKR0dHR4eHh
QUFBPj4+7u7uTk5O1LKpGZmbm1PXPnPmzKlTp06cOGFgYDBr1qwOHTqo6nSz
Z8/Ozs7mvd8aoYNjZGT0wgsvqGrcQ4cOPXDgALVm2nE6bzl79iw1aDog165d
s7Ozc3Z29vDwoNOb4ODgGzduxMTECEtG0oGlwyssGVmWXxAwdsbf52C6PYIn
/V5+O4P3rgOAlrhzzkKTC1ZRSzbzrhQAAAAAAAAAAKA5qq2qcu0zXO0VNrd+
n9bW1PAuFgBau8zrjk5dP5D4ZeUzYlJp/K0GfMa6y0eWl5cXFRWxRanS09OT
k5Pj4+MjIiKCg4NVpcKEFSRXrly5ZMmSBQsW/Pbbb7Nmzfrll19GjRr19NNP
S+SsyLBhwwwMDHJychpwvzRH+7h//35Vq00Jnn/++a+++mratGm0X7R3tI+L
Fy+m/aW9FufBjI2N6cjQ8WF5MDpiLA+WkJDApo6wVajYLebKykphCSou+w6g
IUTCAHgR2nRNTY14+UihUwvLR1KzjoyMDAsLCwwM9Pb2ph7k6OhoY2NjaWl5
+fLl8+fPs1TY8ePHqedu3ry5e/fuqloeNW49PT3qU7z3XoqHh8fgwYNV7UL7
9u3pJOTIkSPiPBg1aJYHozMZJycnd3d3Hx+foKCg8PBw6tQSS0ZGLN4sPhmz
6dgnbrOeXCbjfQwAoGWrKSl1fOU9tVerHF58p6E+DQQAAAAAAAAAAKB9Mq87
avK5y+S/TvOuFABar8LQCO+Pxkv8jnJ945N79u6N8dTsXjO73SwsH1lUVJSX
l8fGjyQnJ8fFxbFUmLe3t4uLi62t7dWrV8+fP89SYfr6+kIqbNWqVUuWLPnj
jz/mzp07e/bsGTNmTJky5b333mvXrp105qpt27ZfffWVqalpSUlJY+ymEto7
Q0PDESNG6OjoSBfWoUOHoUOHTp06dfr06bRHv//+O+0d7SPt6YYNG7Zt2ybO
g128eJHlwVxdXX19fUNCQiIjI+Pj49nUkezs7Pz8fNpBtmRkdXU1loyEFgGR
MACONFk+kq31HBsbS806NDQ0ICDAy8vLzc3NwcHB2tqaGlPdVBh1rpEjR0pn
oamz01PwPgD/QofC0tKS+rJE5V27dqUGXTcPRgeBvtfGxsbR0dHd3Z1OaQID
A8PCwqhT03kOW9yZLRlJzZotGcny2x7vf133xMzxpXezbFx4Hw8AaMGilm3V
5FLV7TPmvCsFAAAAAAAAAABo1nw+maj+o5fPv42PXgJA06u4lxP55wYrHZW/
neye7pew/VBtdXXj1aC0fCRLhbF7zVlZWbdv305OTmY3mtnsESEVJswKO3To
0N69e7dt27Zx48bVq1cvW7bszz//nDdv3pw5c2bOnPnLL79MmDChd+/eavNX
LII1atQoeihPT8+KiooG3E3aKScnp/Xr1w8fPrxt27ZqK2nTps2bb745efLk
adOmscUiaY8WLly4dOlS2kfa0+3bt9Ne074bGhoKeTA7OztXV1cfH5+QkBA6
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
5gq5vAl/RgCgWQv45hf1l6R0uub7h/KuFAAAAAAAAAAAoOVRyOXuA0apvQTn
3HOYvLKSd7EA0OKV3UqVvlfo+Mp7KcfONreMkOapsPj4+MjIyLCwsICAAC8v
LxcXFzs7O7aI5Llz506fPs3Ghenp6e3evXv79u1sHclVq1axYBhbSvL333+f
M2eOMDSMZcOmTJnC4mHff//9uHHjPvvss8GDB/ft27dr167PPvts586dn3ji
iccff1w8vYT+N/0N/f1TTz313HPPdevWrV+/fkOGDBk5cuT48ePpcejRfvzx
R3pkenx6FnouNhbs119/pRqoEhYGo9qoQrZSJNW8Z8+egwcPHjlyhPbF2Nj4
/Pnz5ubmVlZW9vb2rq6u3t7eQUFBwsiR1NTU9PT0rKwsdn9ZKQ9Gmtu/NYAm
EAkDaD5UpcKo46hKhVGHoj4VEhLi7+9Pbcvd3d3Z2Zn6NfUyCwsLtoikeFwY
9TsDAwO2jiQLhlEfp844evRoaq9NnASjzj5o0CA6Sdi7d2/dMBiVamRkRGVT
8WyxSNodS0tLa2tratO0mx4eHj4+PnSWEhoaevPmzZiYmHrzYHToVOXB1Dbu
fP9Qzw++kTjZo7efzSf5DwAcZVk5afIRxfBZy3hXCgAAAAAAAAAA0FJlO3lq
chUucfdR3pUCQAtWU1Iav0XP+vFeqn7J2LTvHbloY01pGe9K61dvKqy8vLyk
pERIhd25cyclJSUhIYHdaw4KCvLx8XFzc3N0dLS2thbGhRkZGR07duzQoUNs
Hclt27Zt2rRp3bp1q1evZktJLly4kA0NE7JhbG6YUjzsx/tYSIxM/sfEiRO/
++67SZMm0f/+XuSH++hb6HtZDIytDkmPLCTB2FiwBQsWUA1UCZsMJoTB2EqR
hw8fNjQ0FIaDiReL9PX1DQ4OZreYk5KSWB5MuL+MPBhoDUTCAJqVuj26oqKC
Ok69qTCW36ZOTd0qNDQ0ICCAmjW1MBcXFwcHB2ERSTYuzNTU1MTE5NSpU8I6
kkeOHGETw/T19fX09KgtUrscM2ZMv379Onbs2EgxsDZt2nTr1m3EiBF0PrBr
1y560oMHD1IBSmEwKlI8HExYLJJ2inbN1dXV09OTOnVgYCDteEREhCZ5MDqY
D5QHE/5Fko8YO748SOLdZdD42WXJaY38owEAzZe8osKl90dqr0TZPd2vMjuX
d7EAAAAAAAAAAAAtWMCY6RpdiMvN510pALQ8CoUi45KV40vvSvyG8f9yalnK
bd6VqiGRCissLMzNzc3KykpPT09JSUlMTIyJiYmIiGATSDw9Pdn4ETYu7Pz5
8yYmJmwdyUOHDu3fv58Fw9hSkmvWrFm5cqUwNEwpGzZr1qyZM2cK08PI1PtY
TkyVn+9jXylkwIQYGD0yPT49y/z58+kZ6XmXLl26YsUKqoQtE8nCYFQnWymS
Kqf6L1y4YG5ufv36dTYczMvLi40ciYyMjI2NvXXrVlpa2t27d7Ozs/Py8oqK
ipAHA22CSBhAc8MaNOvR1GgkUmFsqmdCQgLr1GFhYYGBgb6+vtSsqZ05Ojra
2toK48LMzMyoa7N1JE+dOnXixAkWDGNLSR4+fFhfX58NDTtw4MC+ffuogY4f
P37gwIGvvPLKoyz0rKOj85///Of111//7LPPqE3v2LGDujA9hTAWjJ663jAY
lUoFC8PBhMUi3dzcqFP7+fkFBQXRLrNmTacrbHFnoV83SB5MUFNaFvnnBomP
A9B/it+m32w/DgAAjSp+60FNPpyYfPg070oBAAAAAAAAAABatuLoeCvd7mqv
xd2ct4Z3pQDQwuT5Bnu+/7XU4kFvj85x8+VdpqbqXZ1KSIXl5eVlZ2cLS1PF
xcVFRkaGh4ezCSTCuDBLS8tLly6dO3fO2Nj4xIkTR48eFSaG7dixY8uWLRs3
bmSrSa5YsYJlw9jcsPnz58+dO5fFw4SEGDPj36b/Q/ibmTNnsq+k71KKgdEj
0+OzJNjy5cvZGpFUw9atW6mePXv2UG1UIdVJ1VLNVDnVT3thY2Pj5OTk7u7O
hoPRnkZFRcXHxwvzRuhoFBQUIA8G2geRMIBmSMNUGLUnalIsvx0bG8s6NXUx
8SKS9vb2bFzY1atXL1++LKwjyYJhbCnJY8eOUWcUDw1j2TAWD9t/3/r166lx
T5o06dNPPx06dOigQYPeeuut1157rVu3bi+99NKrr77aq1evvn37Dhw4cPDg
wcOHDx8zZgy1bOr+u3btYo8gxMDYTDCWBKMnNTAwEIfBqDAWBqNSqWDxcDAX
FxcPDw/aNdpB2s0bN25Qs6ZTlKSkpEbNgwnKktP8Rv8kcSro+PKgu+Y2ODEA
aFXK09JtOvZRew3KfcCo2poa3sUCAAAAAAAAAAC0eBEL1qm9HGfdtkdJbCLv
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
kPqi5aV1998RPL2TVN1/R7zbgHu19SPCWvNgtbW11dXVrXmwkpKSL3zhCzuT
B9t1111XrVq1adOmsrKyysrK+Cdv/frI4JGwf5kWAAAAAAAAAABIB5H8vLq7
bwmf4Ulcd98S7zPgLr3vEWFbXhlZWVlZVla2adOmoqKihx56aGciYYMGDVq/
fv3GjRvjn1ZeXl5VVRX//K0fFBY8EvYv0wIAAAAAAAAAAOkgMnNy+BhPwop3
GHaLPvQRYVVVVeXl5Zs3b964ceP69etnzJix66677nAk7KGHHlq7du2GDRuK
i4u3fn1k64PCUuHdka1MCwAAAAAAAAAApL7mcSOCJ3naqnhvobfn35GwSCTS
Ggnb8oiw1ldGFhYWFhQUrFy58rrrrtuxPFifPn0WLVq0atWqdevWFRUVbXl9
5NYPCkuRSNi/TAsAAAAAAAAAAKSD1Mz5pEjCZ0skrPWtkbW1tdXV1Vs/Imz1
6tXLly/Pyck56KCDdiAS9vTTT+fn569YsWLNmjXve1BYXV1d/Iqp8+7IVqYF
AAAAAAAAAABS33vvBLz7luDBnn/X3bekzhsAY7FYS0tLayRsy1sjy8rKtn5E
2JIlS/Ly8l599dXtfX3kjTfemJubu3DhwqVLl279oLDy8vL4VbZ+d2TqRML+
ZVoAAAAAAAAAACAdtCxZWPfAHeETPg/cEe8k9Gb8W+sjwlpaWlrfGllfX7/l
rZHFxcUbNmxYs2bN8uXLFy9ePG/evFmzZj311FN77713knmw6667burUqbNn
z16wYEF+fv7KlSvXrl1bWFhYUlLS+u7I2tra+BVbI2HxHlInEvYv0wIAAAAA
AAAAAOkgWl7a8NyjARM+8avHewi9Df/xvkhYXV1ddXV1RUXF1m+NXLZs2cKF
C3Nzc2fMmDF58uTXXnvtuOOOSxwGO+CAA+67774JEyZMmTJl5syZ8+bNW7x4
8fLly7d+d2RlZWVNTU19fX38uvGrp1ok7F+mBQAAAAAAAAAA0kGspaVp9LC6
e27r7ITPPbfFrxu/eugN+C8fGgkrLy9vjYStW7du1apVS5cuzcvLmzNnzvTp
0ydNmpSdnT1q1KgHHnjgM5/5zO677/6+MNgRRxzx3e9+d8iQIaNHjx4/fnxO
Ts6MGTNyc3MXLVq0bNmy1atXr1+/vjUSVlFRkeKRsH+ZFgAAAAAAAAAASBPR
TcUNf3q68x739Ken41cMvegPsXUkrKGhYUskbNOmTUVFRa2RsCVLluTl5c2e
PXvatGkTJ04cO3bsyJEjMzMzhwwZ8uabb37sYx/r0aPH3nvv/dBDD7388suD
Bw8eOnRoVlbWqFGjxo0bN2nSpOnTp8+dO3fhwoVbImEbN27cvHlzRUVF/Frx
K26JhMU7Cb0fH860AAAAAAAAAABAWogsmt/w7CMdG+959pH4VUIvtE2JI2EF
BQUrV65csmTJggULZs+ePXXq1NZI2IgRIzIyMoYMGfLuu+/uv//+PXr0iH99
++2333nnndZIWGZm5siRI7Ozs7eOhC1dunT16tXr1q1Lu0hYK9MCAAAAAAAA
AABpoWXpooYXn2z/eM+LT8Y/OfTitmGbkbDWp4TtQCRs1KhRHxoJS8enhG2t
O08LAAAAAAAAAACkkWh5aXP28PrHfrWT2Z74J8Q/J/5poReUlLYiYZs3b97y
4silS5fm5eXNmTNn2rRpkyZNys7Obn1x5NChQwcPHrwlEvbOO++8++67//zn
P4cNG7blxZE5OTkzZsz44IsjS0tLKyoqampq0i4S1qp7TgsAAAAAAAAAAKSj
6OaSyMzJjf94uf6Re5IN9jxyT/z74z8V/9nQ7W+frSNhjY2NrZGwioqKzZs3
b9y4cf369atXr162bNnChQvnzp07ffr0nJyccePGjR49evjw4a0PCtsSCRs8
ePA///nPoUOHxv98xIgRY8aMmTBhwuTJk2fOnDlv3rxFixYtX758zZo1GzZs
KC4uLi0traysrKmpqa+v3xIJizcTej+2W7eaFgAAAAAAAAAASHexpqZo4brI
gjnNUyc0jx/VNGpoU+Y78a/x/zv+J/E/j/+v8e8J3eaOe18krL6+vqampqKi
orS0tLi4eMOGDWvWrFm+fPmiRYvmzZs3c+bMKVOmtL47cuTIkVlZWRkZGQcc
cECPHj3iX4cMGdKaBxs+fHjrWyPj3zl16tTZs2fPnz8/Pz9/xYoVa9euLSws
LCkpKSsr2xIJa2pqikQiaRoJ21qXnxYAAAAAAAAAACD1xWKx90XCKisry8rK
SkpKCgsL165du3Llyvz8/AULFrS+OzInJ2f8+PFjxowZOXLk8OHDt0TCMjIy
MjMzW/NgY8eObX1EWOtbI/Py8pYuXbpq1aqCgoKioqJNmzaVl5dXVVXV1tY2
NDR0mUgYAAAAAAAAAABAcK2RsEgk0tTU1NDQUFtbW1VVVV5evmnTpqKionXr
1m15d2Rubu6sWbOmTp06adKk8ePHjx07dvTo0QceeGBrJGzEiBEjR46M/0l2
dvaECRNycnKmTZvW+oiwxYsXt741cv369Rs3bty8eXNFRUV1dXVdXd2WSFg0
GhUJAwAAAAAAAAAA2Emt747cEgmrq6urrq7e+t2Ra9euXbFiRX5+fl5e3ty5
c2fOnDl16tScnJwJEyaMGzeuNRIW/zp27Njs7Ozx48dPnDixNQ82a9as3Nzc
hQsXLl26dOXKlQUFBR98a2RjY2Nzc3NLS4tIGAAAAAAAAAAAwM5rjYS9792R
VVVVZWVlWz8obPny5YsXL16wYEFrKmzatGlTpkzJyck56KCDevToEf86ceLE
SZMmxf8k/ufTp09vzYPl5eXl5+evWLFi60eEbXlrZPxaTU1NImEAAAAAAAAA
AADtZUsk7EMfFFZSUlJYWFhQULBq1aply5a1psJyc3Nnz549c+bM6dOnb4mE
TZ06ddq0aTNmzIj/+Zw5c+bNm9eaB1u+fPnq1avXrVtXVFS0adOmLY8I2/qt
kfGry4MBAAAAAAAAAAC0iy3vjtzyoLDa2tqqqqry8vLNmze3vj6yNRX2/7V3
N7lNJGEAhvsUICRYAQdAYssBOAI77pAjzBlYgOACs2AzS3ZsASFISEwSO0x+
7DgT/yTGQmQQmlJKtBwTCCNit/3leRYtubrdatX61Verq6vLy8uLi4s5DHv1
6tWlS5eKokjXFy9evHz5Mq28fv063V1aWlpZWSl7sHxk5P7+fq/XOzw8zCPC
nBoJAAAAAAAAAABw7k4dFDYYDPr9/lgV1mg01tbWarXa8vLy0tLS4uLi7du3
i6JI1zdv3rx9+zatvHv3bmVl5f379+vr6xsbG7kHS28oj4xMb849WDkiTBIG
AAAAAAAAAABwXkaTsDworDw+st/vdzqdXIXt7Oxsbm5++PChXq+vra2trq7W
arVnz54tLCyk68qxtJLW19fXG41GenJra6vZbLbb7dEerDwycnREmCQMAAAA
AAAAAADgvIwNCiuPj8xVWJ4V1m63m83m9vZ2DsM2Njbq9fr6iPSz0Wik9XQ3
PZOebLVa+bzIsR4sHxlpRBgAAAAAAAAAAMAk5DlduQo7Ojo6tQrb39/f29vb
3d1tNps7OztbW1ubm5t/j9g8ltbT3fRMejI9n/7V6/XKHuzUIyMlYQAAAAAA
AAAAAOdr7PjI0SpsMBgcHBz0er1Op5PDsHa7vbu722q1miellbSe7uYYrNvt
/rwHMyIMAAAAAAAAAABgEkYHhY1VYcPhcDAY5HFhvV4vTwz759jeSWkl3ep0
OmUMlv718ePH8rzI9M705i/H9GAAAAAAAAAAAACT86Mq7NOnT+W4sMPDw4OD
g7ING9M7lu7mGKwcDpbekGOwPB/MkZEAAAAAAAAAAABTMFqFnRqGDYfDsg3L
ediovJju5slgOQYrh4ONnRepBwMAAAAAAAAAAJi0sgobHRc2FoblNiznYaXh
N7kEG4vB9GAAAAAAAAAAAACVGKvCxsKw3IblPOx7+VZ+7EcxmB4MAAAAAAAA
AABgyk4Nw7Kjbz6fVK6XJVgZgxkOBgAAAAAAAAAAUK2vI8qy68s3/37ny4ix
EkwMBgAAAAAAAAAAMCNObcN+4utJVX8+AAAAAAAAAAAAP/T1LFV/IAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPPh4cOH165de/ToUdUfAgAAAAAA
AAAAwO+6ceNGURTpWvWHAAAAAAAAAAAA8LuuXr1aFEW6Vv0hAAAAAAAAAAAA
/C5JGAAAAAAAAAAAQBiSMAAAAAAAAAAAgDAkYQAAAAAAAAAAAGFIwgAAAAAA
AAAAAMKQhAEAAAAAAAAAAIQhCQMAAAAAAAAAAAhjvpKw58+f/zU/6vV61RsG
AAAAAAAAAABcLPOVhN26dauYHzdv3qx6wwAAAAAAAAAAgItFEjY5V65cqXrD
AAAAAAAAAACAi0USNjmSMAAAAAAAAAAAYMokYZMjCQMAAAAAAAAAAKZMEjY5
kjAAAAAAAAAAAGDKJGGTIwkDAAAAAAAAAACmTBI2OZIwAAAAAAAAAABgyiRh
kyMJAwAAAAAAAAAApkwSNjmSMAAAAAAAAAAAYMokYZMjCQMAAAAAAAAAAKYs
WBL2+PHj7szo9/tVbxgAAAAAAAAAAHCxBEvCnj59WvU3AgAAAAAAAAAAVEYS
BgAAAAAAAAAAEMb169eLokjXqj/kl0jCAAAAAAAAAAAAfuLBgweXL19O16o/
5JdIwgAAAAAAAAAAAMKQhAEAAAAAAAAAAIQhCQMAAAAAAAAAAAhDEgYAAAAA
AAAAABCGJAwAAAAAAAAAACAMSRgAAAAAAAAAAEAYkjAAAAAAAAAAAIAwJGEA
AAAAAAAAAABhSMIAAAAAAAAAAADCkIQBAAAAAAAAAACEIQkDAAAAAAAAAAAI
QxIGAAAAAAAAAAAQhiQMAAAAAAAAAAAgDEkYAAAAAAAAAABAGJIwAAAAAAAA
AACAMCRhAAAAAAAAAAAAYUjCAAAAAAAAAAAAwpCEAQAAAAAAAAAAhCEJAwAA
AAAAAAAACOPMJGxhYeHPqm1vb1e9TwAAAAAAAAAAAHPgzCRsFphUBgAAAAAA
AAAA8CskYQAAAAAAAAAAAGFIwgAAAAAAAAAAAMKQhAEAAAAAAAAAAIQhCQMA
AAAAAAAAAAhDEgYAAAAAAAAAABCGJAwAAAAAAAAAACAMSRgAAAAAAAAAAEAY
kjAAAAAAAAAAAIAwzkzC7t2790fVarVa1fsEAAAAAAAAAAAwB85MwkzoAgAA
AAAAAAAAmBeSMAAAAAAAAAAAgDAkYQAAAAAAAAAAAGFIwgAAAAAAAAAAAMKQ
hAEAAAAAAAAAAIQhCQMAAAAAAAAAAAhDEgYAAAAAAAAAABCGJAwAAAAAAAAA
ACAMSRgAAAAAAAAAAEAYkjAAAAAAAAAAAIAwJGEAAAAAAAAAAABhSMIAAAAA
AAAAAADCkIQBAAAAAAAAAACEIQkDAAAAAAAAAAAIQxIGAAAAAAAAAAAQhiQM
AAAAAAAAAAAgDEkYAAAAAAAAAABAGJIwAAAAAAAAAACAMCRhAAAAAAAAAAAA
YUjCAAAAAAAAAAAAwpCEAQAAAAAAAAAAhCEJAwAAAAAAAAAACEMSBgAAAAAA
AAAAEIYkDAAAAAAAAAAAIAxJGAAAAAAAAAAAQBhnJmFPnjxpzZJut1v1ngEA
AAAAAAAAAMyoM5OwWXP37t2q9wwAAAAAAAAAAGBGScIAAAAAAAAAAADCkIQB
AAAAAAAAAACEIQkDAAAAAAAAAAAIQxIGAAAAAAAAAAAQhiQMAAAAAAAAAAAg
DEkYAAAAAAAAAABAGJIwAAAAAAAAAACAMCRhAAAAAAAAAAAAYdy5c6fqyOv/
uX//ftV7BgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAwN/4DBIqvIw==
    "], {{0, 445.86}, {584.82, 0}}, {0, 255},
    
    ColorFunction->RGBColor,
    ImageResolution->{400, 400}],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, 
    MetaInformation -> <|"XMP" -> <||>|>],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{584.82, 445.86},
  PlotRange->{{0, 584.82}, {0, 445.86}}]], "Text",
 CellChangeTimes->{3.87595313880052*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"c80e613d-1b68-4f9f-a81c-ac6d8b4eda2a"],

Cell[TextData[StyleBox["Si richiede:", "Subsection"]], "Text",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994808245*^9}, {
   3.8756995601955433`*^9, 3.875699590364057*^9}, {3.875699796164242*^9, 
   3.8756998333638897`*^9}, {3.875699864459835*^9, 3.875699880747794*^9}, {
   3.8756999159158707`*^9, 3.875699931388372*^9}, 3.8757850748882113`*^9, 
   3.875785218021845*^9},ExpressionUUID->"eec9d302-21ef-4554-9e3c-\
ffaaf9779441"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["\[LineSeparator]a) Scrivere una procedura per l'analisi di \
posizione del manipolatore, noti  s1, s2, s3 (cinematica diretta), adattando \
le procedure studiate per il quadrilatero e pentalatero. Determinare \
posizione (", "Subsection"],
 StyleBox["x", "Subsection",
  FontSlant->"Italic"],
 StyleBox[", ", "Subsection"],
 StyleBox["y", "Subsection",
  FontSlant->"Italic"],
 StyleBox[") del punto E  e l'orientazione \[Theta] della pinza (direzione \
del vettore FE). Realizzare una animazione interattiva del meccanismo con L = \
0.1 (metri).", "Subsection"]
}], "Subsection",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994808245*^9}, {
   3.8756995601955433`*^9, 3.875699590364057*^9}, {3.875699796164242*^9, 
   3.8756998333638897`*^9}, {3.875699864459835*^9, 3.875699880747794*^9}, {
   3.8756999159158707`*^9, 3.875699931388372*^9}, 3.8757850748882113`*^9, {
   3.8757852242311573`*^9, 3.875785231381374*^9}, 3.8757853207751837`*^9, 
   3.8757855375664997`*^9, 3.875792196822626*^9, 3.875795164338632*^9, 
   3.877004431582715*^9, 
   3.877004531896576*^9},ExpressionUUID->"6b023581-048c-4cfe-a5e0-\
46e9b4290b88"],

Cell[CellGroupData[{

Cell["Equazioni di chiusura", "Subsubsection",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994808245*^9}, {
   3.8756995601955433`*^9, 3.875699590364057*^9}, {3.875699796164242*^9, 
   3.8756998333638897`*^9}, {3.875699864459835*^9, 3.875699880747794*^9}, {
   3.8756999159158707`*^9, 3.875699931388372*^9}, {3.875785086314561*^9, 
   3.8757851032098303`*^9}, {3.875785224231667*^9, 3.875785231381846*^9}, 
   3.8757853133007917`*^9, {3.875785537566844*^9, 3.875785560581716*^9}, 
   3.875792196822887*^9, 3.875795269987595*^9, 
   3.8770044527015553`*^9},ExpressionUUID->"a004f295-c9da-465e-9247-\
31f87698c320"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"OC", " ", "+", " ", "CA", " ", "+", " ", "AO"}], " ", "==", " ", 
   "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "AC", " ", "+", " ", "CD", " ", "+", " ", "DB", " ", "+", " ", "BA"}], " ",
    "==", " ", "0"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
    "AC", " ", "+", " ", "CD", " ", "+", " ", "DB", " ", "+", " ", "BA", " ", 
     "+", " ", "AO"}], " ", "==", " ", "0"}], ";"}], "  ", "\n"}], "\n", 
 RowBox[{
  RowBox[{"e1x", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"s3", "[", "t", "]"}], "*", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], " ", "-", " ", 
     RowBox[{
      RowBox[{"s2", "[", "t", "]"}], "*", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], " ", "-", " ", 
     RowBox[{"6", " ", "L"}]}], " ", "==", " ", "0"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"e1y", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"s3", "[", "t", "]"}], "*", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], " ", "-", " ", 
     RowBox[{
      RowBox[{"s2", "[", "t", "]"}], " ", "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}]}], "  ", "==", " ", 
    "0"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"e2x", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"s3", "[", "t", "]"}], "*", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], " ", "+", " ", 
     RowBox[{"2", " ", "L", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], " ", "-", " ", 
     RowBox[{
      RowBox[{"s1", "[", "t", "]"}], "*", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], " ", "-", " ", 
     RowBox[{"6", " ", "L"}], " ", "-", " ", 
     RowBox[{"2", " ", "L"}]}], " ", "==", " ", "0"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"e2y", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"s3", "[", "t", "]"}], "*", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], " ", "+", " ", 
     RowBox[{"2", " ", "L", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], " ", "-", " ", 
     RowBox[{
      RowBox[{"s1", "[", "t", "]"}], "*", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}]}], " ", "==", " ", 
    "0"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994808245*^9}, {
   3.8756995601955433`*^9, 3.875699590364057*^9}, {3.875699796164242*^9, 
   3.8756998333638897`*^9}, {3.875699864459835*^9, 3.875699880747794*^9}, {
   3.8756999159158707`*^9, 3.875699931388372*^9}, {3.875785086314561*^9, 
   3.8757851032098303`*^9}, {3.875785224231667*^9, 3.875785231381846*^9}, 
   3.8757853133007917`*^9, 3.875785537566844*^9, {3.875785572216161*^9, 
   3.8757855722210197`*^9}, {3.8757888206927023`*^9, 3.875788845203583*^9}, {
   3.8757889822524633`*^9, 3.875788991282346*^9}, {3.875789037990053*^9, 
   3.875789041795491*^9}, {3.875789191997527*^9, 3.87578919505217*^9}, {
   3.875789440272053*^9, 3.8757894848247557`*^9}, {3.875789892340898*^9, 
   3.8757899231242847`*^9}, 3.8757921968235826`*^9, {3.875793002304419*^9, 
   3.8757930049369*^9}, {3.875953830437586*^9, 3.875953839384582*^9}, {
   3.875957212778974*^9, 3.875957259307913*^9}, {3.875961692336372*^9, 
   3.8759616943576193`*^9}, 3.877004515763117*^9, 3.877004556559607*^9, 
   3.8773550778019667`*^9, {3.8774206404114647`*^9, 3.877420663185417*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"8250bf72-9a06-4992-929f-51a76f154630"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"{", 
   RowBox[{"e1x", ",", "e1y", ",", "e2x", ",", "e2y"}], "}"}], "]"}]], "Input",\

 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994808245*^9}, {
   3.8756995601955433`*^9, 3.875699590364057*^9}, {3.875699796164242*^9, 
   3.8756998333638897`*^9}, {3.875699864459835*^9, 3.875699880747794*^9}, {
   3.8756999159158707`*^9, 3.875699931388372*^9}, {3.875785086314561*^9, 
   3.8757851032098303`*^9}, {3.875785224231667*^9, 3.875785231381846*^9}, 
   3.8757853133007917`*^9, 3.875785537566844*^9, {3.875785572216161*^9, 
   3.8757855722210197`*^9}, {3.8757888206927023`*^9, 3.875788845203583*^9}, {
   3.8757889822524633`*^9, 3.875788991282346*^9}, {3.875789037990053*^9, 
   3.875789041795491*^9}, {3.875789191997527*^9, 3.87578919505217*^9}, {
   3.875789440272053*^9, 3.8757894848247557`*^9}, {3.875789892340898*^9, 
   3.8757899231242847`*^9}, 3.8757921968235826`*^9, {3.875793002304419*^9, 
   3.8757930049369*^9}, {3.875953830437586*^9, 3.875953839384582*^9}, {
   3.875957212778974*^9, 3.875957259307913*^9}, {3.875961692336372*^9, 
   3.8759616943576193`*^9}, 3.877004515763117*^9, 3.877004556559607*^9, {
   3.8773550778019667`*^9, 3.8773550921815023`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"b6bbc9a6-b607-4146-ba7f-d3d5427e22e4"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "6"}], " ", "L"}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"s2", "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"s3", "[", "t", "]"}]}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"s2", "[", "t", "]"}]}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"s3", "[", "t", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}]}], "\[Equal]", 
       "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "8"}], " ", "L"}], "+", 
        RowBox[{"2", " ", "L", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"s1", "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"s3", "[", "t", "]"}]}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"s1", "[", "t", "]"}]}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"s3", "[", "t", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{"2", " ", "L", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}]}], "\[Equal]", "0"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.877956330867711*^9, 3.8779584353230553`*^9, 
  3.877959404964363*^9, 3.877963417286874*^9, 3.877976793442627*^9},
 CellLabel->
  "Out[8]//TableForm=",ExpressionUUID->"c58c4bed-d79a-4095-837e-bb2920dd8707"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"f1", "=", 
   RowBox[{"First", "[", "e1x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "=", 
   RowBox[{"First", "[", "e1y", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f3", "=", 
   RowBox[{"First", "[", "e2x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f4", "=", 
   RowBox[{"First", "[", "e2y", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994808245*^9}, {
   3.8756995601955433`*^9, 3.875699590364057*^9}, {3.875699796164242*^9, 
   3.8756998333638897`*^9}, {3.875699864459835*^9, 3.875699880747794*^9}, {
   3.8756999159158707`*^9, 3.875699931388372*^9}, {3.875785086314561*^9, 
   3.8757851032098303`*^9}, {3.875785224231667*^9, 3.875785231381846*^9}, 
   3.8757853133007917`*^9, 3.875785537566844*^9, {3.875785572216161*^9, 
   3.8757855722210197`*^9}, {3.8757888206927023`*^9, 3.875788845203583*^9}, {
   3.8757889822524633`*^9, 3.875789050803701*^9}, {3.8757894187864847`*^9, 
   3.8757894195065527`*^9}, 3.8757921968238688`*^9, {3.8776975242136106`*^9, 
   3.8776975289480267`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"5af9e968-95a0-48be-8cd7-667c998c497a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Animazione interattiva", "Subsubsection",
 CellChangeTimes->{
  3.875792681723587*^9, 3.875795096466216*^9, {3.875795918303853*^9, 
   3.875795928115881*^9}, 
   3.876045391431185*^9},ExpressionUUID->"f816b22b-4861-45d8-9f43-\
617b217c61cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipolatore", "[", 
   RowBox[{
   "s3_", ",", "s2_", ",", "s1_", ",", "L_", ",", "xB_", ",", "yB_", ",", 
    "modo_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "c", ",", "\[Alpha]", ",", "\[Theta]3", ",", "xC", ",", "yC", ",", "xD", 
      ",", "yD", ",", "xF", ",", "yF", ",", "xE", ",", "yE", ",", "\[Theta]1",
       ",", "\[Theta]2", ",", "L5", ",", "\[Beta]", ",", "\[Theta]5", ",", 
      "\[Theta]4", ",", "OABDC"}], "}"}], ",", " ", 
    RowBox[{"(*", " ", "argomenti", " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "risolvo", " ", "il", " ", "triangolo", " ", "con", " ", "teorma", " ", 
      "del", " ", "coseno"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"c", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"6", "L"}], ")"}], "^", "2"}], "+", 
         RowBox[{"s3", "^", "2"}], "-", 
         RowBox[{"s2", "^", "2"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"6", "L"}], ")"}], " ", "s3"}], ")"}]}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Alpha]", "=", " ", 
      RowBox[{"ArcCos", "[", "c", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Definisco", " ", "il", " ", "segno"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"\[Theta]3", "=", " ", 
      RowBox[{"-", "\[Alpha]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Definisco", " ", "x", " ", "e", " ", "y", " ", "del", " ", "punto", 
       " ", "C"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"xC", " ", "=", " ", 
      RowBox[{"s3", " ", 
       RowBox[{"Cos", "[", "\[Theta]3", "]"}]}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"yC", " ", "=", " ", 
      RowBox[{"s3", " ", 
       RowBox[{"Sin", "[", "\[Theta]3", "]"}]}]}], ";", "\[IndentingNewLine]",
      " ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Calcolo", " ", "\[Theta]2", " ", "con", " ", "ArcTan", " ", "con", " ",
        "2", " ", "argomenti"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2", "=", 
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"xC", "-", 
         RowBox[{"6", "L"}]}], ",", "yC"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"L5", " ", "=", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"xB", "-", "xC"}], ")"}], "^", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"yB", "-", "yC"}], ")"}], "^", "2"}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"calcolo", " ", "\[Beta]"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Beta]", " ", "=", "  ", 
      RowBox[{"ArcCos", "[", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "L"}], ")"}], "^", "2"}], "+", 
         RowBox[{"L5", "^", "2"}], "-", 
         RowBox[{"s1", "^", "2"}]}], 
        RowBox[{"2", " ", "*", "2", "L", " ", "L5"}]], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"calcolo", " ", "\[Theta]5"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Theta]5", " ", "=", " ", 
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"xB", "-", "xC"}], ",", 
        RowBox[{"yB", "-", "yC"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "calcolo", " ", "\[Theta]4", " ", "dato", " ", "il", " ", "modo", " ", 
       "di", " ", "assemblaggio"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"modo", ">=", "0"}], ",", 
       RowBox[{"\[Theta]4", " ", "=", " ", 
        RowBox[{"\[Theta]5", "+", "\[Beta]"}]}], ",", " ", 
       RowBox[{"\[Theta]4", " ", "=", " ", 
        RowBox[{"\[Theta]5", "-", "\[Beta]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"calcolo", " ", "D"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"xD", " ", "=", " ", 
      RowBox[{"xC", "+", 
       RowBox[{"2", "L", " ", 
        RowBox[{"Cos", "[", "\[Theta]4", "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"yD", " ", "=", " ", 
      RowBox[{"yC", " ", "+", 
       RowBox[{"2", "L", " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"calcolo", " ", "F"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"xF", " ", "=", " ", 
      RowBox[{"xC", "+", 
       RowBox[{"L", " ", 
        RowBox[{"Cos", "[", "\[Theta]4", "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"yF", " ", "=", " ", 
      RowBox[{"yC", " ", "+", 
       RowBox[{"L", " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"calcolo", " ", "E"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"xE", "=", " ", 
      RowBox[{"xF", "+", 
       RowBox[{"L", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]4", "+", 
          RowBox[{
           RowBox[{"3", "/", "2"}], " ", "\[Pi]"}]}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"yE", "=", " ", 
      RowBox[{"yF", "+", 
       RowBox[{"L", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]4", "+", 
          RowBox[{
           RowBox[{"3", "/", "2"}], " ", "\[Pi]"}]}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"calcola", " ", "\[Theta]3"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Theta]1", " ", "=", 
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"xB", "-", "xD"}], ",", 
        RowBox[{"yB", "-", "yD"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "restituisce", " ", "il", " ", "manipolatore", " ", "e", " ", "i", " ", 
       "cedenti"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"OABDC", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"xC", ",", "yC"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xF", ",", "yF"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"xE", ",", "yE"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xD", ",", "yD"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"xC", ",", "yC"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"8", "L"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"xD", ",", "yD"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"6", "L"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"xC", ",", "yC"}], "}"}]}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\[Theta]4", ",", "\[Theta]3", ",", "\[Theta]2", ",", "\[Theta]1", ",", 
       "OABDC"}], "}"}]}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Definisco", " ", "gli", " ", 
      RowBox[{"output", ":", " ", "\[Theta]4"}]}], ",", "\[Theta]3", ",", 
     "\[Theta]2", ",", 
     RowBox[{"\[Theta]1", " ", "e", " ", 
      RowBox[{"l", "'"}], "insieme", " ", "dei", " ", "punti", " ", "per", 
      " ", "fare", " ", "il", " ", "grafico"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{
  3.875792681723587*^9, 3.875795096466216*^9, {3.875795918303853*^9, 
   3.875795928115881*^9}, {3.876045393798954*^9, 3.876045407974586*^9}, {
   3.876918368679141*^9, 3.876918371201352*^9}, 3.87691847868123*^9, {
   3.876924595300881*^9, 3.876924597360778*^9}, 3.8769257900438223`*^9, {
   3.876987105228148*^9, 3.8769871870512753`*^9}, {3.8769872861016273`*^9, 
   3.876987291429861*^9}, {3.876987353529353*^9, 3.876987360945122*^9}, {
   3.8769877078852043`*^9, 3.876987724985486*^9}, {3.876988242712555*^9, 
   3.87698827505807*^9}, {3.876989396057828*^9, 3.876989404691189*^9}, {
   3.877002738830647*^9, 3.877002744508358*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"76c99c21-8fcf-4806-984b-2245ef24ea79"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"L", "=", "0.1"}], ",", "\[Theta]4", ",", "\[Theta]3", ",", 
       "\[Theta]2", ",", "\[Theta]1", ",", "OABDC"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\[Theta]4", ",", "\[Theta]3", ",", "\[Theta]2", ",", "\[Theta]1", 
         ",", "OABDC"}], "}"}], "=", 
       RowBox[{"Manipolatore", "[", 
        RowBox[{"s3", ",", "s2", ",", "s1", ",", "L", ",", 
         RowBox[{"8", "L"}], ",", "0", ",", "modo"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"OABDC", ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotMarkers", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<\[FilledCircle]\>\"", ",", "10"}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"s3", ",", 
     RowBox[{
      RowBox[{"-", "20"}], "L"}], ",", 
     RowBox[{"20", "L"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"s2", ",", 
     RowBox[{
      RowBox[{"-", "20"}], "L"}], ",", 
     RowBox[{"20", "L"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"s1", ",", 
     RowBox[{
      RowBox[{"-", "10"}], "L"}], ",", 
     RowBox[{"20", "L"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"modo", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.875792681723587*^9, 3.875795096466216*^9, {3.875795918303853*^9, 
   3.875795928115881*^9}, {3.876045393798954*^9, 3.8760454158565683`*^9}, {
   3.8760461606988564`*^9, 3.876046164273203*^9}, {3.8760462114014177`*^9, 
   3.8760462993960943`*^9}, {3.876049931841559*^9, 3.8760499437890472`*^9}, {
   3.8769184923228903`*^9, 3.8769185127930813`*^9}, {3.877002810021212*^9, 
   3.877002815420106*^9}, {3.877002858120207*^9, 3.8770028613332033`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"628f7bca-bcbe-4de7-bfa8-7e4bc5056019"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`modo$$ = -1, $CellContext`s1$$ = (-10) \
$CellContext`L, $CellContext`s2$$ = (-20) $CellContext`L, $CellContext`s3$$ = \
(-20) $CellContext`L, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`s3$$], (-20) $CellContext`L, 20 $CellContext`L}, {
      Hold[$CellContext`s2$$], (-20) $CellContext`L, 20 $CellContext`L}, {
      Hold[$CellContext`s1$$], (-10) $CellContext`L, 20 $CellContext`L}, {
      Hold[$CellContext`modo$$], -1, 1}}, Typeset`size$$ = {
    540., {262., 269.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`modo$$ = -1, $CellContext`s1$$ = (-10) \
$CellContext`L, $CellContext`s2$$ = (-20) $CellContext`L, $CellContext`s3$$ = \
(-20) $CellContext`L}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Block[{$CellContext`L = 
         0.1, $CellContext`\[Theta]4, $CellContext`\[Theta]3, $CellContext`\
\[Theta]2, $CellContext`\[Theta]1, $CellContext`OABDC}, \
{$CellContext`\[Theta]4, $CellContext`\[Theta]3, $CellContext`\[Theta]2, \
$CellContext`\[Theta]1, $CellContext`OABDC} = \
$CellContext`Manipolatore[$CellContext`s3$$, $CellContext`s2$$, \
$CellContext`s1$$, $CellContext`L, 8 $CellContext`L, 0, $CellContext`modo$$]; 
        ListPlot[$CellContext`OABDC, Joined -> True, 
          PlotMarkers -> {"\[FilledCircle]", 10}, 
          PlotRange -> {{-1.5, 1.5}, {-1.5, 1.5}}, AspectRatio -> 1]], 
      "Specifications" :> {{$CellContext`s3$$, (-20) $CellContext`L, 
         20 $CellContext`L}, {$CellContext`s2$$, (-20) $CellContext`L, 
         20 $CellContext`L}, {$CellContext`s1$$, (-10) $CellContext`L, 
         20 $CellContext`L}, {$CellContext`modo$$, -1, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{606., {391., 400.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.87795633092833*^9, 3.877958435359968*^9, 
  3.877958845087451*^9, 3.877959405505192*^9, 3.87796341734251*^9, 
  3.877976793485845*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"c76b5f3e-e508-4719-93ae-72d9cb7a61ac"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["b) Determinare la velocit\[AGrave] del punto E e la \
velocit\[AGrave] angolare della pinza con uno dei due metodi fatti a \
lezione.", "Subsection"]], "Subsection",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994822119827`*^9}, {
   3.875699520476288*^9, 3.8756995514920177`*^9}, {3.875699598027767*^9, 
   3.875699663318941*^9}, 3.875785077210155*^9, 3.875785158311414*^9, {
   3.875785188650044*^9, 3.8757852020187883`*^9}, 3.87578527056326*^9, {
   3.875785507641924*^9, 
   3.875785509665436*^9}},ExpressionUUID->"cd9d6d36-647f-4c80-b54d-\
4ac1c8c4698b"],

Cell[CellGroupData[{

Cell["Metodo 1 Derivare equazioni di posizione", "Subsubsection",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994822119827`*^9}, {
   3.875699520476288*^9, 3.8756995514920177`*^9}, {3.875699598027767*^9, 
   3.875699663318941*^9}, 3.875785077210155*^9, 3.875785158311414*^9, {
   3.875785188650044*^9, 3.8757852020187883`*^9}, 3.87578527056326*^9, 
   3.875785507641924*^9, {3.875790080855826*^9, 3.8757901069854937`*^9}, {
   3.875791036192959*^9, 3.87579110486068*^9}, 3.8757911456812067`*^9, 
   3.875791221562461*^9, 3.875791357027179*^9, 
   3.877964297917439*^9},ExpressionUUID->"3615f563-3ddf-43be-9734-\
ba12fdbcd875"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ev1x", " ", "=", 
  RowBox[{
   SubscriptBox["\[PartialD]", "t"], " ", "e1x"}]}]], "Input",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994822119827`*^9}, {
   3.875699520476288*^9, 3.8756995514920177`*^9}, {3.875699598027767*^9, 
   3.875699663318941*^9}, 3.875785077210155*^9, 3.875785158311414*^9, {
   3.875785188650044*^9, 3.8757852020187883`*^9}, 3.87578527056326*^9, 
   3.875785507641924*^9, {3.875790080855826*^9, 3.8757901069854937`*^9}, {
   3.875791036192959*^9, 3.875791045443431*^9}, 3.875791096048177*^9, 
   3.875791145681575*^9, 3.8757912215629873`*^9, 3.87579135702757*^9, 
   3.876120126862361*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"8b120fa1-c038-4d2f-9189-57d8bb2980f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], " ", 
    RowBox[{
     SuperscriptBox["s2", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["s3", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{
    RowBox[{"s2", "[", "t", "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Theta]2", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "-", 
   RowBox[{
    RowBox[{"s3", "[", "t", "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Theta]3", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{
  3.8757901996603127`*^9, 3.875790410125992*^9, 3.875790586021659*^9, 
   3.8757910960484457`*^9, 3.8757911456819153`*^9, 3.8757912215634212`*^9, 
   3.875791357028007*^9, 3.875792507349874*^9, {3.875792629737322*^9, 
   3.875792658537768*^9}, 3.875792691954286*^9, 3.8757931001714907`*^9, {
   3.875793133824184*^9, 3.875793160540246*^9}, 3.8757936821141*^9, 
   3.875794243397496*^9, 3.8757944469932013`*^9, 3.87579451899564*^9, 
   3.875794569499667*^9, {3.875794649257606*^9, 3.875794661386221*^9}, 
   3.875794697718178*^9, 3.8757947354895763`*^9, 3.875794812653062*^9, {
   3.875794847791376*^9, 3.875794871389051*^9}, 3.875794971527315*^9, 
   3.8758849391106033`*^9, {3.875885090124189*^9, 3.8758851178791*^9}, 
   3.875885166941813*^9, {3.875885227561881*^9, 3.875885238507173*^9}, 
   3.875885856334485*^9, 3.875885945755435*^9, 3.875886130552781*^9, 
   3.875941500487041*^9, 3.87594170153542*^9, 3.875941831665949*^9, 
   3.875947734466275*^9, 3.8759496107680264`*^9, 3.875953143992886*^9, 
   3.875953848821088*^9, 3.875956805206572*^9, 3.875957263368887*^9, 
   3.875960143433764*^9, 3.875960200605441*^9, 3.87596084809861*^9, {
   3.87596090297691*^9, 3.875960924632884*^9}, 3.8759611697269297`*^9, 
   3.8759613405070953`*^9, 3.8759613912175694`*^9, 3.875961785292716*^9, 
   3.8759618812392797`*^9, 3.875970686175227*^9, 3.876046103983556*^9, 
   3.876119495130209*^9, 3.8769187590282593`*^9, 3.87692052085844*^9, 
   3.87692203650839*^9, 3.876988594337831*^9, 3.87698973604974*^9, 
   3.877002237101901*^9, 3.877003482312752*^9, 3.877004746391992*^9, 
   3.877005637257291*^9, 3.8770056900013943`*^9, 3.877005725884355*^9, 
   3.877006017713166*^9, 3.8770060668107347`*^9, 3.8770075410745792`*^9, {
   3.877015925310032*^9, 3.8770159480978003`*^9}, 3.8771012225462*^9, 
   3.877179274053177*^9, 3.877179429134165*^9, 3.877180961888826*^9, 
   3.877355176399941*^9, 3.877356211786109*^9, 3.877358648123054*^9, 
   3.877358706729438*^9, 3.877415206686509*^9, 3.8774165215127287`*^9, 
   3.87741721991372*^9, 3.877420673479313*^9, 3.8774251053488283`*^9, 
   3.877435976275675*^9, 3.877436211591442*^9, 3.877437362634987*^9, 
   3.877438183353592*^9, 3.87743844004425*^9, 3.877439960026456*^9, 
   3.8774414644809628`*^9, 3.877519017996482*^9, 3.877523132215827*^9, 
   3.877523380078452*^9, 3.877525313999811*^9, 3.8775259484262247`*^9, 
   3.87753071964793*^9, 3.877531297548242*^9, 3.877531551559675*^9, 
   3.877531664982143*^9, 3.877531701703919*^9, 3.877531992479109*^9, 
   3.877532076768201*^9, 3.8775322088292637`*^9, 3.8775322732995453`*^9, 
   3.877532335760291*^9, 3.877532550040007*^9, 3.8775326685467167`*^9, 
   3.877533344919305*^9, 3.877533412985095*^9, 3.877533499717217*^9, 
   3.877539617393935*^9, 3.877539730199785*^9, 3.8775403752446012`*^9, 
   3.8775404641870537`*^9, 3.8775406136685457`*^9, 3.87754082080991*^9, 
   3.8775425256374474`*^9, 3.8775427572763987`*^9, 3.87754415042791*^9, 
   3.877599235055277*^9, 3.877600919519225*^9, 3.877607997109992*^9, 
   3.877609839154998*^9, 3.877617852880994*^9, 3.877661526929133*^9, 
   3.877661570867025*^9, {3.877661640598229*^9, 3.8776616656971283`*^9}, 
   3.877664926078291*^9, 3.8776650203985443`*^9, 3.87766518715954*^9, 
   3.877683838322606*^9, 3.8776926685050488`*^9, 3.877694592075742*^9, 
   3.877694778655723*^9, 3.877696476052327*^9, 3.877697547073689*^9, 
   3.8776977811667423`*^9, 3.8777534954402742`*^9, 3.877754129447283*^9, 
   3.8777555611317377`*^9, 3.877755785537215*^9, 3.877870910289239*^9, 
   3.877956331232315*^9, 3.877958435630114*^9, 3.8779594072693443`*^9, 
   3.877963417350533*^9, 3.877976793782834*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"4a8afb61-93e3-438c-938f-eab2553e684b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ev1y", " ", "=", 
  RowBox[{
   SubscriptBox["\[PartialD]", "t"], " ", "e1y"}]}]], "Input",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994822119827`*^9}, {
   3.875699520476288*^9, 3.8756995514920177`*^9}, {3.875699598027767*^9, 
   3.875699663318941*^9}, 3.875785077210155*^9, 3.875785158311414*^9, {
   3.875785188650044*^9, 3.8757852020187883`*^9}, 3.87578527056326*^9, 
   3.875785507641924*^9, {3.875790080855826*^9, 3.875790130449003*^9}, 
   3.875791096048695*^9, 3.875791145682184*^9, 3.875791221563706*^9, 
   3.8757913570283318`*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"775491a7-b48d-49db-9443-829d4c7ee793"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], " ", 
    RowBox[{
     SuperscriptBox["s2", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["s3", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "-", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
    RowBox[{"s2", "[", "t", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Theta]2", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
    RowBox[{"s3", "[", "t", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Theta]3", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{
  3.8757901996640463`*^9, 3.875790410129787*^9, 3.875790586034988*^9, 
   3.8757910960488873`*^9, 3.875791145682436*^9, 3.875791221563961*^9, 
   3.875791357028592*^9, 3.8757925073528423`*^9, {3.875792629754086*^9, 
   3.8757926585412817`*^9}, 3.8757926919691353`*^9, 3.875793100174982*^9, {
   3.875793133827557*^9, 3.8757931605440493`*^9}, 3.875793682124733*^9, 
   3.875794243409837*^9, 3.8757944469965363`*^9, 3.875794519011183*^9, 
   3.875794569503181*^9, {3.87579464926056*^9, 3.875794661400882*^9}, 
   3.875794697732555*^9, 3.875794735493396*^9, 3.875794812656755*^9, {
   3.875794847807666*^9, 3.8757948714029016`*^9}, 3.87579497153057*^9, 
   3.875884939113525*^9, {3.875885090128355*^9, 3.875885117882045*^9}, 
   3.875885166945197*^9, {3.8758852275731297`*^9, 3.8758852385113897`*^9}, 
   3.875885856338313*^9, 3.8758859457647142`*^9, 3.875886130555767*^9, 
   3.875941500522191*^9, 3.875941701547474*^9, 3.875941831668552*^9, 
   3.875947734468988*^9, 3.8759496107704887`*^9, 3.875953143995138*^9, 
   3.8759538488238792`*^9, 3.875956805209482*^9, 3.87595726337173*^9, 
   3.875960143437743*^9, 3.875960200608697*^9, 3.87596084810121*^9, {
   3.875960902979463*^9, 3.875960924635714*^9}, 3.8759611697296343`*^9, 
   3.875961340510952*^9, 3.8759613912210693`*^9, 3.875961785296821*^9, 
   3.875961881242319*^9, 3.8759706861785927`*^9, 3.876046104007784*^9, 
   3.876119495132989*^9, 3.876918759032699*^9, 3.876920520876193*^9, 
   3.8769220365116587`*^9, 3.8769885943497257`*^9, 3.876989736052639*^9, 
   3.877002237104947*^9, 3.877003482328258*^9, 3.877004746397088*^9, 
   3.8770056372605753`*^9, 3.877005690005324*^9, 3.877005725888033*^9, 
   3.877006017718688*^9, 3.877006066814699*^9, 3.877007541078704*^9, {
   3.877015925314652*^9, 3.8770159481027937`*^9}, 3.877101222549369*^9, 
   3.877179274056286*^9, 3.877179429137416*^9, 3.8771809618921423`*^9, 
   3.8773551764030447`*^9, 3.877356211789627*^9, 3.8773586481263323`*^9, 
   3.877358706745481*^9, 3.8774152066896048`*^9, 3.877416521516079*^9, 
   3.877417219917232*^9, 3.877420673483263*^9, 3.877425105352846*^9, 
   3.8774359762788897`*^9, 3.877436211594825*^9, 3.877437362639913*^9, 
   3.877438183367132*^9, 3.877438440058236*^9, 3.877439960040599*^9, 
   3.877441464484479*^9, 3.877519018012035*^9, 3.877523132232765*^9, 
   3.877523380085741*^9, 3.8775253140169067`*^9, 3.8775259484431133`*^9, 
   3.8775307196671047`*^9, 3.877531297552833*^9, 3.877531551577302*^9, 
   3.8775316650032454`*^9, 3.877531701724036*^9, 3.877531992498117*^9, 
   3.877532076787373*^9, 3.877532208850512*^9, 3.8775322733176813`*^9, 
   3.877532335776132*^9, 3.877532550059956*^9, 3.87753266856526*^9, 
   3.87753334493545*^9, 3.877533413003316*^9, 3.877533499736709*^9, 
   3.8775396174086657`*^9, 3.877539730215501*^9, 3.877540375261595*^9, 
   3.877540464190833*^9, 3.877540613682551*^9, 3.877540820825392*^9, 
   3.87754252565758*^9, 3.877542757292316*^9, 3.8775441504416103`*^9, 
   3.877599235070586*^9, 3.8776009195325747`*^9, 3.877607997126276*^9, 
   3.8776098391708527`*^9, 3.877617852896927*^9, 3.877661526940859*^9, 
   3.877661570870266*^9, {3.877661640620667*^9, 3.8776616657112827`*^9}, 
   3.877664926094306*^9, 3.877665020414032*^9, 3.877665187174239*^9, 
   3.877683838337782*^9, 3.8776926685202513`*^9, 3.877694592089984*^9, 
   3.8776947786718063`*^9, 3.877696476069668*^9, 3.8776975470776167`*^9, 
   3.877697781191256*^9, 3.877753495451468*^9, 3.877754129462603*^9, 
   3.877755561149148*^9, 3.877755785553946*^9, 3.877870910292231*^9, 
   3.877956331273638*^9, 3.877958435636586*^9, 3.877959407272554*^9, 
   3.8779634173818293`*^9, 3.877976793796523*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"71cd074a-b4c0-4c1f-92ff-7630de5ac6cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ev2x", " ", "=", 
  RowBox[{
   SubscriptBox["\[PartialD]", "t"], " ", "e2x"}]}]], "Input",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994822119827`*^9}, {
   3.875699520476288*^9, 3.8756995514920177`*^9}, {3.875699598027767*^9, 
   3.875699663318941*^9}, 3.875785077210155*^9, 3.875785158311414*^9, {
   3.875785188650044*^9, 3.8757852020187883`*^9}, 3.87578527056326*^9, 
   3.875785507641924*^9, {3.875790080855826*^9, 3.875790127316986*^9}, 
   3.875791096049086*^9, 3.875791145682785*^9, 3.875791221564219*^9, 
   3.875791357028857*^9},
 CellLabel->"In[17]:=",ExpressionUUID->"c9c285b0-3de0-486a-bcde-4434b766282b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], " ", 
    RowBox[{
     SuperscriptBox["s1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["s3", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{
    RowBox[{"s1", "[", "t", "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Theta]1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "-", 
   RowBox[{
    RowBox[{"s3", "[", "t", "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Theta]3", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "-", 
   RowBox[{"2", " ", "L", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Theta]4", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{
  3.875790199682312*^9, 3.875790410144154*^9, 3.875790586039569*^9, 
   3.875791096049281*^9, 3.875791145683028*^9, 3.875791221564505*^9, 
   3.875791357029092*^9, 3.875792507368205*^9, {3.875792629757619*^9, 
   3.875792658555357*^9}, 3.8757926919743567`*^9, 3.8757931001896973`*^9, {
   3.875793133845305*^9, 3.875793160559664*^9}, 3.875793682128694*^9, 
   3.875794243414267*^9, 3.875794447010498*^9, 3.875794519014421*^9, 
   3.875794569518168*^9, {3.875794649263257*^9, 3.875794661404183*^9}, 
   3.8757946977361317`*^9, 3.8757947354962673`*^9, 3.8757948126710443`*^9, {
   3.8757948478110867`*^9, 3.87579487140626*^9}, 3.8757949715335083`*^9, 
   3.875884939125575*^9, {3.8758850901385403`*^9, 3.875885117884522*^9}, 
   3.875885166957388*^9, {3.8758852275778713`*^9, 3.8758852385228243`*^9}, 
   3.8758858563483877`*^9, 3.875885945768045*^9, 3.87588613056717*^9, 
   3.875941500524632*^9, 3.875941701550106*^9, 3.8759418316804037`*^9, 
   3.875947734471386*^9, 3.875949610781927*^9, 3.8759531439973593`*^9, 
   3.875953848837973*^9, 3.875956805211941*^9, 3.875957263374221*^9, 
   3.875960143450005*^9, 3.875960200612073*^9, 3.875960848103388*^9, {
   3.8759609029815063`*^9, 3.875960924637927*^9}, 3.875961169731879*^9, 
   3.875961340522934*^9, 3.875961391223472*^9, 3.875961785308918*^9, 
   3.875961881246171*^9, 3.875970686183774*^9, 3.8760461040104637`*^9, 
   3.8761194951354427`*^9, 3.876918759046537*^9, 3.8769205208800507`*^9, 
   3.8769220365275793`*^9, 3.876988594353222*^9, 3.87698973606498*^9, 
   3.8770022371074038`*^9, 3.877003482331828*^9, 3.8770047464119987`*^9, 
   3.8770056372880373`*^9, 3.877005690008665*^9, 3.877005725891302*^9, 
   3.877006017737893*^9, 3.877006066819219*^9, 3.877007541082388*^9, {
   3.877015925319129*^9, 3.877015948122334*^9}, 3.877101222552245*^9, 
   3.877179274059063*^9, 3.877179429153369*^9, 3.877180961895606*^9, 
   3.877355176405663*^9, 3.877356211792323*^9, 3.877358648129212*^9, 
   3.877358706749682*^9, 3.87741520670266*^9, 3.877416521518972*^9, 
   3.877417219934881*^9, 3.877420673487157*^9, 3.877425105356529*^9, 
   3.877435976292211*^9, 3.8774362116080847`*^9, 3.8774373626535378`*^9, 
   3.877438183370736*^9, 3.877438440061812*^9, 3.877439960044343*^9, 
   3.877441464487714*^9, 3.877519018015046*^9, 3.877523132236897*^9, 
   3.877523380102932*^9, 3.877525314023131*^9, 3.877525948447102*^9, 
   3.877530719674801*^9, 3.877531297557428*^9, 3.877531551582444*^9, 
   3.877531665007822*^9, 3.877531701730825*^9, 3.877531992502664*^9, 
   3.87753207679418*^9, 3.877532208858409*^9, 3.8775322733259497`*^9, 
   3.8775323357812634`*^9, 3.877532550064492*^9, 3.877532668572002*^9, 
   3.8775333449425383`*^9, 3.877533413010027*^9, 3.877533499743561*^9, 
   3.877539617411772*^9, 3.877539730219352*^9, 3.877540375264776*^9, 
   3.877540464208544*^9, 3.8775406136857557`*^9, 3.877540820828993*^9, 
   3.877542525660872*^9, 3.877542757295763*^9, 3.87754415044506*^9, 
   3.877599235073553*^9, 3.877600919536255*^9, 3.877607997130777*^9, 
   3.877609839177916*^9, 3.877617852899989*^9, 3.877661526943983*^9, 
   3.877661570873069*^9, {3.8776616406241693`*^9, 3.877661665714507*^9}, 
   3.877664926101343*^9, 3.877665020417294*^9, 3.877665187177525*^9, 
   3.877683838340769*^9, 3.877692668526428*^9, 3.8776945921114883`*^9, 
   3.877694778675185*^9, 3.8776964760738773`*^9, 3.877697547081996*^9, 
   3.877697781195684*^9, 3.877753495455079*^9, 3.877754129465828*^9, 
   3.877755561152589*^9, 3.877755785557291*^9, 3.877870910294827*^9, 
   3.877956331277555*^9, 3.877958435649892*^9, 3.8779594072760487`*^9, 
   3.877963417384581*^9, 3.877976793800427*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"848abcb9-3214-4a47-9a68-15354eca1a1a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ev2y", " ", "=", 
  RowBox[{
   SubscriptBox["\[PartialD]", "t"], " ", "e2y"}]}]], "Input",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994822119827`*^9}, {
   3.875699520476288*^9, 3.8756995514920177`*^9}, {3.875699598027767*^9, 
   3.875699663318941*^9}, 3.875785077210155*^9, 3.875785158311414*^9, {
   3.875785188650044*^9, 3.8757852020187883`*^9}, 3.87578527056326*^9, 
   3.875785507641924*^9, {3.875790080855826*^9, 3.875790156257729*^9}, 
   3.8757910960494967`*^9, 3.875791145683238*^9, 3.87579122156478*^9, 
   3.8757913570293493`*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"914cf7ef-dda6-4d22-b341-3a143d77316c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], " ", 
    RowBox[{
     SuperscriptBox["s1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["s3", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "-", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
    RowBox[{"s1", "[", "t", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Theta]1", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
    RowBox[{"s3", "[", "t", "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Theta]3", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{"2", " ", "L", " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["\[Theta]4", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{
  3.877439960059029*^9, 3.87744146449081*^9, 3.8775190180175457`*^9, 
   3.877523132254004*^9, 3.877523380107025*^9, 3.877525314039175*^9, 
   3.877525948465189*^9, 3.877530719692524*^9, 3.877531297563154*^9, 
   3.877531551598507*^9, 3.877531665028411*^9, 3.877531701749137*^9, 
   3.877531992523691*^9, 3.87753207681214*^9, 3.8775322088788557`*^9, 
   3.877532273342285*^9, 3.877532335785746*^9, 3.87753255008524*^9, 
   3.877532668587778*^9, 3.877533344959*^9, 3.877533413026764*^9, 
   3.8775334997610598`*^9, 3.877539617414378*^9, 3.877539730239888*^9, 
   3.877540375267418*^9, 3.877540464211771*^9, 3.877540613701663*^9, 
   3.87754082083186*^9, 3.877542525681772*^9, 3.8775427573115664`*^9, 
   3.8775441504587717`*^9, 3.877599235076025*^9, 3.877600919539171*^9, 
   3.8776079971344433`*^9, 3.8776098391917267`*^9, 3.877617852902626*^9, 
   3.877661526957205*^9, 3.877661570875846*^9, {3.877661640626935*^9, 
   3.8776616657277718`*^9}, 3.877664926114992*^9, 3.877665020420141*^9, 
   3.877665187191655*^9, 3.877683838343321*^9, 3.877692668540498*^9, 
   3.8776945921150503`*^9, 3.877694778677984*^9, 3.877696476077083*^9, 
   3.877697547086918*^9, 3.8776977811998653`*^9, 3.877753495458159*^9, 
   3.8777541294686832`*^9, 3.877755561155602*^9, 3.877755785560244*^9, 
   3.877870910297187*^9, 3.8779563312805567`*^9, 3.877958435653154*^9, 
   3.8779594072832117`*^9, 3.877963417386788*^9, 3.877976793803095*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"d6ffe3a9-e1f9-4248-bab9-db0fcb94e2e7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Risolvo", " ", "il", " ", "sistema", " ", "e", " ", "trovo", " ", "le", 
   " ", "velocit\[AGrave]", " ", "dei", " ", "4", " ", "cedenti"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.877355113594871*^9, 3.877355123454092*^9}, {
  3.877525531235136*^9, 3.877525536572132*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"9b989fc8-9e9c-4927-9cb2-f1c5ce429107"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"{", 
   RowBox[{"ev1x", ",", "ev1y", ",", "ev2x", ",", "ev2y"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.877355113594871*^9, 3.877355123454092*^9}, 
   3.877525531235136*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"4c8565dd-a154-4696-bd33-9dd2832ee019"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], " ", 
         RowBox[{
          SuperscriptBox["s2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["s3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"s2", "[", "t", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"s3", "[", "t", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], " ", 
         RowBox[{
          SuperscriptBox["s2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["s3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"s2", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"s3", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], " ", 
         RowBox[{
          SuperscriptBox["s1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["s3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"s1", "[", "t", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"s3", "[", "t", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"2", " ", "L", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]4", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], " ", 
         RowBox[{
          SuperscriptBox["s1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["s3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"s1", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"s3", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", "L", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]4", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], "\[Equal]", "0"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8776975471038713`*^9, 3.87769778122773*^9, 
  3.8777534954724417`*^9, 3.877754129473363*^9, 3.877755561160529*^9, 
  3.877755785581521*^9, 3.877870910302392*^9, 3.877956331284966*^9, 
  3.8779584356712427`*^9, 3.8779594073013697`*^9, 3.8779634173907843`*^9, 
  3.877976793807561*^9},
 CellLabel->
  "Out[20]//TableForm=",ExpressionUUID->"5d937b1b-a5c1-41b3-8fac-\
99f838570550"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solv", "=", 
  RowBox[{"FullSimplify", "@", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ev1x", ",", "ev1y", ",", "ev2x", ",", "ev2y"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]1", "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{"\[Theta]2", "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{"\[Theta]3", "'"}], "[", "t", "]"}], ",", 
       RowBox[{
        RowBox[{"\[Theta]4", "'"}], "[", "t", "]"}]}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994822119827`*^9}, {
   3.875699520476288*^9, 3.8756995514920177`*^9}, {3.875699598027767*^9, 
   3.875699663318941*^9}, 3.875785077210155*^9, 3.875785158311414*^9, {
   3.875785188650044*^9, 3.8757852020187883`*^9}, 3.87578527056326*^9, 
   3.875785507641924*^9, {3.875790080855826*^9, 3.875790196291833*^9}, {
   3.87579035862099*^9, 3.8757903602784986`*^9}, {3.875790533484562*^9, 
   3.8757905587436743`*^9}, 3.8757910960499697`*^9, 3.875791145683674*^9, 
   3.875791221565289*^9, 3.87579135702989*^9, {3.875793130238867*^9, 
   3.875793153981689*^9}, {3.8761194638996973`*^9, 3.876119475993779*^9}, {
   3.877525476568438*^9, 3.877525504422348*^9}, {3.877532149942189*^9, 
   3.8775321514234533`*^9}, {3.877532577830449*^9, 3.877532578743997*^9}, {
   3.877542510337925*^9, 3.877542515332903*^9}, {3.877544033558433*^9, 
   3.877544036104677*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"edae5582-bce5-44e1-8369-4dc41a22e080"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Theta]1", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"s1", "[", "t", "]"}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cot", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["s1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["s2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["s3", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
       ")"}]}]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Theta]2", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"Csc", "[", 
        RowBox[{
         RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
         RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["s2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "-", 
         RowBox[{
          SuperscriptBox["s3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], 
      RowBox[{"s2", "[", "t", "]"}]]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Theta]3", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"Csc", "[", 
        RowBox[{
         RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
         RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["s2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["s3", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
      RowBox[{"s3", "[", "t", "]"}]]}], ",", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[Theta]4", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"Csc", "[", 
        RowBox[{
         RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
         RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["s1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "+", 
         RowBox[{
          RowBox[{"Csc", "[", 
           RowBox[{
            RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}]}], " ", 
             RowBox[{
              SuperscriptBox["s2", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
        ")"}]}], 
      RowBox[{"2", " ", "L"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.877697548611677*^9, 3.87769778263345*^9, 
  3.87775349734202*^9, 3.8777541308292227`*^9, 3.877755562532887*^9, 
  3.877755786945292*^9, 3.877870911713282*^9, 3.877956333078925*^9, 
  3.877958437449176*^9, 3.877959408775115*^9, 3.877963418759697*^9, 
  3.877976795234892*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"cb60cd54-e9ea-44b4-a545-0bac38865d38"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Velocit\[AGrave]", " ", "del", " ", "punto", " ", "E", " ", "lungo", " ", 
   "x"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.877358827928545*^9, 3.877358868787973*^9}, {
  3.877438334438225*^9, 3.877438339239821*^9}, {3.877530804224011*^9, 
  3.877530808552346*^9}, {3.877530877433879*^9, 3.877530893205079*^9}, {
  3.8775311106336718`*^9, 3.8775311155466137`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"0c8256bc-422e-4685-a24d-0b146a3a1e75"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xE", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"s3", "[", "t", "]"}], "*", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], "+", 
    RowBox[{"L", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "+", 
    RowBox[{"L", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{
       RowBox[{"\[Theta]4", "[", "t", "]"}], "+", 
       RowBox[{
        RowBox[{"3", "/", "2"}], " ", "\[Pi]"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vxE", " ", "=", " ", 
   RowBox[{
    SubscriptBox["\[PartialD]", "t"], "xE"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"vxE", "/.", "solv"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.877358827928545*^9, 3.877358855466083*^9}, {
   3.877358889841014*^9, 3.8773589113501053`*^9}, {3.8774371302322893`*^9, 
   3.877437131756789*^9}, 3.877437232027931*^9, 3.877437396830084*^9, {
   3.877518604368363*^9, 3.8775186056852427`*^9}, {3.87753056550762*^9, 
   3.87753056894233*^9}, {3.8775308212472477`*^9, 3.87753082246804*^9}, {
   3.8775316066780663`*^9, 3.877531608270187*^9}, {3.877531689364128*^9, 
   3.8775316902968197`*^9}, 3.877540442671363*^9, {3.8775405036560907`*^9, 
   3.8775405047491007`*^9}, 3.877540542062611*^9, {3.8775421717767153`*^9, 
   3.877542195351058*^9}, {3.877542555776647*^9, 3.877542573122615*^9}, {
   3.877542702464382*^9, 3.877542730437571*^9}, {3.8776007880447407`*^9, 
   3.877600795433311*^9}, 3.8776613939900093`*^9, 3.877694561878079*^9, {
   3.877956703060005*^9, 3.8779567042833776`*^9}, {3.877956828374659*^9, 
   3.877956829188905*^9}, {3.8779569856872663`*^9, 3.8779569869160433`*^9}, {
   3.877957547740951*^9, 3.877957549404916*^9}, {3.8779583959869823`*^9, 
   3.877958396329153*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"5848a7c0-de1e-439d-83b3-20eb1b764173"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Csc", "[", 
      RowBox[{
       RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
       RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], "-", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], ")"}], " ", 
     RowBox[{
      SuperscriptBox["s1", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Csc", "[", 
      RowBox[{
       RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
       RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{
      SuperscriptBox["s2", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cot", "[", 
         RowBox[{
          RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], "-", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{
      SuperscriptBox["s3", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8776945940513277`*^9, 3.877694780205954*^9, 
  3.877696477582123*^9, 3.877697548745244*^9, 3.877697782766444*^9, 
  3.87775349751932*^9, 3.8777541313372173`*^9, 3.8777555630437717`*^9, 
  3.877755787475321*^9, 3.877870911788149*^9, 3.877956333229452*^9, 
  3.877956705081895*^9, 3.877956831569376*^9, 3.8779569877162657`*^9, 
  3.877957551438922*^9, 3.877958442221365*^9, 3.877959413508482*^9, 
  3.8779634239084053`*^9, 3.877976800521017*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"a257a4ef-69c6-424e-9852-5a42a3873c9a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Velocit\[AGrave]", " ", "del", " ", "punto", " ", "E", " ", "lungo", " ", 
   "y"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.877358827928545*^9, 3.877358855466083*^9}, {
   3.877358889841014*^9, 3.877358915097906*^9}, {3.877437236440332*^9, 
   3.8774372396317177`*^9}, 3.877437394993177*^9, 3.877518611802431*^9, {
   3.8775305711238956`*^9, 3.877530573043367*^9}, {3.87753084550397*^9, 
   3.877530859565742*^9}, {3.8775308978159122`*^9, 3.877530901039906*^9}, {
   3.8775311213456717`*^9, 3.8775311249470053`*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"9eb94685-ffe3-4a0b-8cf5-c2fc22074010"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"yE", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"s3", "[", "t", "]"}], "*", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], "+", 
    RowBox[{"L", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "+", 
    RowBox[{"L", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"\[Theta]4", "[", "t", "]"}], "+", 
       RowBox[{
        RowBox[{"3", "/", "2"}], " ", "\[Pi]"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vyE", " ", "=", " ", 
   RowBox[{
    SubscriptBox["\[PartialD]", "t"], "yE"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"vyE", "/.", "solv"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.877358827928545*^9, 3.877358855466083*^9}, {
   3.877358889841014*^9, 3.877358915097906*^9}, {3.877437236440332*^9, 
   3.8774372396317177`*^9}, 3.877437394993177*^9, 3.877518611802431*^9, {
   3.8775305711238956`*^9, 3.877530573043367*^9}, {3.87753084550397*^9, 
   3.877530859565742*^9}, 3.8775308978159122`*^9, {3.8775316127475033`*^9, 
   3.877531628469746*^9}, {3.877531685764496*^9, 3.877531714948366*^9}, 
   3.877540445808935*^9, {3.87754217686368*^9, 3.8775421880959797`*^9}, {
   3.8776007922967987`*^9, 3.877600793963728*^9}, 3.877661400633453*^9, 
   3.877683765843419*^9, 3.877694563538406*^9, 3.877956513763709*^9, {
   3.877956666694413*^9, 3.877956677916486*^9}, {3.877956825240697*^9, 
   3.87795682605062*^9}, {3.877956978262834*^9, 3.87795697943671*^9}, {
   3.877957543549295*^9, 3.8779575455935707`*^9}, {3.877958392275626*^9, 
   3.877958392700019*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"fb1ff3a4-024a-4820-ae16-fc5fafa27aeb"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Csc", "[", 
      RowBox[{
       RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
       RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], "+", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["s1", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "-", 
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["s2", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], ")"}]}]}], ")"}], 
     " ", 
     RowBox[{
      SuperscriptBox["s3", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{"2", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["s2", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cot", "[", 
         RowBox[{
          RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["s3", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.8776945940954847`*^9, 3.877694780249148*^9, 
  3.877695315221814*^9, 3.8776964776224937`*^9, 3.8776975487862797`*^9, 
  3.877697782807173*^9, 3.877753497578945*^9, 3.877754131381336*^9, 
  3.8777555630879307`*^9, 3.8777557875391417`*^9, 3.877870911827847*^9, 
  3.8779563332761917`*^9, 3.877956568667932*^9, 3.877956668327693*^9, 
  3.8779567004985332`*^9, 3.8779568341849747`*^9, 3.877956981107451*^9, 
  3.877957556492605*^9, 3.877958446106838*^9, 3.877959417448748*^9, 
  3.877963427774437*^9, 3.877976804472575*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"638a8d3f-28b3-4523-9ce1-0e12f39cba6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Velocit\[AGrave]", " ", "del", " ", "punto", " ", "E"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"vE", "=", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[PartialD]", "t"], "xE"}], ")"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["\[PartialD]", "t"], "yE"}], ")"}], "^", "2"}]}]]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"vE", "/.", "solv"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.877607875599946*^9, 3.8776078904837*^9}, {
   3.8776098021417933`*^9, 3.877609821738759*^9}, {3.877609859140024*^9, 
   3.8776098607152567`*^9}, 3.87766155522254*^9, {3.8776615873507147`*^9, 
   3.8776615884675303`*^9}, {3.8776616867166033`*^9, 3.87766168781674*^9}, {
   3.877694764937902*^9, 3.87769479366892*^9}, {3.877695301073159*^9, 
   3.877695341420945*^9}, {3.877956711559024*^9, 3.877956712800014*^9}, {
   3.877956818222252*^9, 3.877956839048411*^9}, {3.8779573479665194`*^9, 
   3.877957352404622*^9}, {3.877958398717456*^9, 3.877958399104775*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"1e5ee875-635a-43ce-8c7b-308d925496b0"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"\[Sqrt]", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], "-", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["s1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"Csc", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"Cos", "[", 
                RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "+", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], ")"}]}]}], 
          ")"}], " ", 
         RowBox[{
          SuperscriptBox["s2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cot", "[", 
             RowBox[{
              RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"Csc", "[", 
             RowBox[{
              RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"Csc", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], "-", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], ")"}]}]}], 
          ")"}], " ", 
         RowBox[{
          SuperscriptBox["s3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], "+", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["s1", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "-", 
           RowBox[{
            RowBox[{"Csc", "[", 
             RowBox[{
              RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["s2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"Csc", "[", 
             RowBox[{
              RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"Csc", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], "+", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], ")"}]}]}], 
          ")"}], " ", 
         RowBox[{
          SuperscriptBox["s3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Csc", "[", 
             RowBox[{
              RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["s2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{
            RowBox[{"Cot", "[", 
             RowBox[{
              RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["s3", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], ")"}],
       "2"]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.877957373111528*^9, 3.8779584574874268`*^9, 
  3.877959429065524*^9, 3.8779634390289392`*^9, 3.877976816248373*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"Out[31]=",ExpressionUUID->"d50eee80-aa2a-4dc4-952a-3c5192e59f22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Velocit\[AGrave]", " ", "angolare", " ", "della", " ", "pinza"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"v\[Theta]Pinza", " ", "=", " ", 
   RowBox[{"solv", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "4", ",", "2"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.877358827928545*^9, 3.877358855466083*^9}, {
   3.877358889841014*^9, 3.877358915097906*^9}, {3.877437236440332*^9, 
   3.8774372396317177`*^9}, 3.877437394993177*^9, 3.877518611802431*^9, {
   3.8775305711238956`*^9, 3.877530573043367*^9}, {3.87753084550397*^9, 
   3.87753086041033*^9}, {3.877530904713519*^9, 3.877530918775626*^9}, {
   3.877695370111816*^9, 3.877695371681818*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"f7bc66d4-dd77-471b-9aed-9b2987ce3172"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"Csc", "[", 
    RowBox[{
     RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
     RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["s1", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "+", 
     RowBox[{
      RowBox[{"Csc", "[", 
       RowBox[{
        RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
        RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}]}], " ", 
         RowBox[{
          SuperscriptBox["s2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["s3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], ")"}]}], 
  
  RowBox[{"2", " ", "L"}]]], "Output",
 CellChangeTimes->{
  3.8775312979429893`*^9, 3.8775315613995543`*^9, 3.877531674808502*^9, 
   3.877531711518306*^9, 3.8775320024020844`*^9, 3.8775320866714783`*^9, 
   3.877532219560038*^9, 3.8775322838627367`*^9, 3.877532346512789*^9, 
   3.877532560777752*^9, 3.877532678390636*^9, 3.877533354529333*^9, 
   3.87753342283092*^9, 3.877533509415872*^9, 3.877539626690792*^9, 
   3.877539739760828*^9, 3.877540386033553*^9, 3.8775404646877728`*^9, 
   3.8775406155704603`*^9, 3.877540822741214*^9, 3.8775425275642357`*^9, 
   3.877542768402968*^9, 3.8775441614658527`*^9, 3.877599245468829*^9, 
   3.877600929615316*^9, 3.877608007359126*^9, 3.8776098498784657`*^9, 
   3.877617863483542*^9, 3.87766152922507*^9, 3.8776615748890047`*^9, {
   3.8776616441387463`*^9, 3.877661669887733*^9}, 3.877664929525094*^9, 
   3.877665024329349*^9, 3.8776651911350718`*^9, 3.87768384238723*^9, 
   3.877692672520808*^9, 3.8776945960395403`*^9, 3.877694782243937*^9, 
   3.8776964965244513`*^9, 3.877697568334099*^9, 3.877697801711301*^9, 
   3.87775351730416*^9, 3.877754150171033*^9, 3.877755581905953*^9, 
   3.877755806421959*^9, 3.877870933799782*^9, 3.877956352468809*^9, 
   3.877958457508224*^9, 3.8779594290840063`*^9, 3.877963439071109*^9, 
   3.877976816277433*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"Out[32]=",ExpressionUUID->"387a29a7-e90d-4066-8902-f8bde9da2f5e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Metodo 2 Calcolare i rapporti di velocit\[AGrave]", "Subsubsection",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.8757902000096893`*^9, 3.8757904101651773`*^9, 3.875790586372142*^9, {
   3.875791096050145*^9, 3.875791145683877*^9}, 3.875791221565535*^9, {
   3.875791346008397*^9, 
   3.875791380689054*^9}},ExpressionUUID->"1a6ffa04-c139-4712-ac2a-\
d19d3cb8a1e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"J", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f1", ",", "f2", ",", "f3", ",", "f4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]3", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]4", "[", "t", "]"}]}], "}"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.8757902000096893`*^9, 3.8757904101651773`*^9, 3.875790586372142*^9, {
   3.875791096050145*^9, 3.875791145683877*^9}, 3.875791221565535*^9, {
   3.875791346008397*^9, 3.875791386864143*^9}, {3.8757943600258827`*^9, 
   3.87579436328981*^9}, {3.875948694952119*^9, 3.875948709573571*^9}, 
   3.8759601019379873`*^9, {3.876047993107341*^9, 3.876048000473778*^9}, 
   3.877005943985796*^9, {3.877008271341103*^9, 3.8770083047485657`*^9}, {
   3.877008474451325*^9, 3.877008482063961*^9}, {3.877415110311842*^9, 
   3.877415111317609*^9}, 3.877522356688657*^9, 3.877522406719883*^9, 
   3.877522447276972*^9, 3.877532645998122*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"638e1c40-4df8-4de4-a2f6-342073aa1144"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "J", "]"}]], "Input",
 CellChangeTimes->{{3.877008314719192*^9, 3.8770083184805603`*^9}, {
  3.877415113630658*^9, 3.8774151145623293`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"133f165b-8153-4500-bba5-b630e3abfc0b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{
       RowBox[{"s2", "[", "t", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"s3", "[", "t", "]"}]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], "0"},
     {"0", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], " ", 
       RowBox[{"s2", "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"s3", "[", "t", "]"}]}], "0"},
     {
      RowBox[{
       RowBox[{"s1", "[", "t", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "0", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"s3", "[", "t", "]"}]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], 
      RowBox[{
       RowBox[{"-", "2"}], " ", "L", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], " ", 
       RowBox[{"s1", "[", "t", "]"}]}], "0", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"s3", "[", "t", "]"}]}], 
      RowBox[{"2", " ", "L", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.877008439054022*^9, 3.877008485388576*^9, {3.877015928897297*^9, 
   3.877015951702526*^9}, 3.8771012266783047`*^9, 3.877179277973065*^9, 
   3.8771794327350883`*^9, 3.877180965792161*^9, 3.877355180470276*^9, 
   3.877356215534184*^9, 3.877358652070108*^9, 3.877358710668867*^9, 
   3.87741521931632*^9, 3.877416538009755*^9, 3.8774172370071993`*^9, 
   3.877420696503358*^9, 3.877425127742776*^9, 3.8774359990073853`*^9, 
   3.87743623386837*^9, 3.877437369661409*^9, 3.877438206939879*^9, 
   3.877438460310316*^9, 3.877439979161913*^9, 3.8774414833927107`*^9, 
   3.877519018715611*^9, 3.877523132969298*^9, 3.877523380846579*^9, 
   3.877525314699451*^9, 3.877525950650506*^9, 3.877530729609923*^9, 
   3.877531297960573*^9, 3.8775315614189463`*^9, 3.8775316748309727`*^9, 
   3.877531711539576*^9, 3.8775320024243803`*^9, 3.8775320866954927`*^9, 
   3.877532219567871*^9, 3.877532283870631*^9, 3.87753234653736*^9, 
   3.877532560805542*^9, 3.877532678457608*^9, 3.877533354537099*^9, 
   3.8775334228520737`*^9, 3.8775335094442167`*^9, 3.877539626695315*^9, 
   3.8775397397652683`*^9, 3.877540386053574*^9, 3.877540464702529*^9, 
   3.87754061558854*^9, 3.8775408227471046`*^9, 3.877542527570818*^9, 
   3.877542768407796*^9, 3.877544161470594*^9, 3.87759924547305*^9, 
   3.877600929619886*^9, 3.877608007364315*^9, 3.877609849883802*^9, 
   3.877617863500845*^9, 3.8776615292397013`*^9, 3.87766157489386*^9, {
   3.877661644143126*^9, 3.8776616698926277`*^9}, 3.877664929541947*^9, 
   3.877665024349556*^9, 3.877665191139785*^9, 3.877683842391514*^9, 
   3.877692672542069*^9, 3.877694596044011*^9, 3.877694782248364*^9, 
   3.87769649653019*^9, 3.8776975683584833`*^9, 3.8776978017171926`*^9, 
   3.877753517314579*^9, 3.8777541501924467`*^9, 3.877755581911257*^9, 
   3.877755806426944*^9, 3.877870933827117*^9, 3.877956352522901*^9, 
   3.877958457512868*^9, 3.877959429088727*^9, 3.877963439075191*^9, 
   3.877976816295259*^9},
 CellLabel->
  "Out[34]//MatrixForm=",ExpressionUUID->"041450d3-0838-4a7c-b0fa-\
a6aceb80a0dc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"B", " ", "=", "  ", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"f1", ",", "f2", ",", "f3", ",", "f4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"s1", "[", "t", "]"}], ",", 
        RowBox[{"s2", "[", "t", "]"}], ",", 
        RowBox[{"s3", "[", "t", "]"}]}], "}"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.8757902000096893`*^9, 3.8757904101651773`*^9, 3.875790586372142*^9, {
   3.875791096050145*^9, 3.875791145683877*^9}, 3.875791221565535*^9, {
   3.875791346008397*^9, 3.875791386864143*^9}, {3.8757943600258827`*^9, 
   3.87579436328981*^9}, {3.875948694952119*^9, 3.875948709573571*^9}, 
   3.8759601019379873`*^9, {3.876047993107341*^9, 3.876048005754925*^9}, 
   3.877005952880262*^9, {3.877008334738389*^9, 3.877008371398561*^9}, {
   3.877415116475049*^9, 3.877415117622633*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"8753d771-b2a3-4ac3-ad89-6820bd40dd3d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "B", "]"}]], "Input",
 CellChangeTimes->{{3.8770083774278708`*^9, 3.877008383752453*^9}, {
  3.877415120072394*^9, 3.87741512130407*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"08f36e4a-3ef0-457a-8276-2a1196b881ac"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]},
     {"0", 
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]},
     {
      RowBox[{"-", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "0", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]},
     {
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "0", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.877532002442934*^9, 3.877532086702395*^9, 3.8775322195858*^9, 
   3.877532283891014*^9, 3.8775323465569563`*^9, 3.877532560812191*^9, 
   3.877532678464349*^9, 3.877533354562166*^9, 3.8775334228734703`*^9, 
   3.87753350945162*^9, 3.877539626700325*^9, 3.877539739769393*^9, 
   3.877540386069127*^9, 3.877540464718276*^9, 3.8775406156059837`*^9, 
   3.8775408227524347`*^9, 3.877542527594675*^9, 3.8775427684319067`*^9, 
   3.8775441614902782`*^9, 3.877599245494906*^9, 3.8776009296244287`*^9, 
   3.8776080073688927`*^9, 3.877609849888617*^9, 3.877617863517915*^9, 
   3.877661529255245*^9, 3.87766157491425*^9, {3.877661644168438*^9, 
   3.877661669917056*^9}, 3.877664929558515*^9, 3.877665024366118*^9, 
   3.8776651911604033`*^9, 3.877683842407098*^9, 3.8776926725470247`*^9, 
   3.877694596048398*^9, 3.877694782269308*^9, 3.87769649655243*^9, 
   3.877697568363759*^9, 3.877697801739656*^9, 3.877753517329595*^9, 
   3.877754150197535*^9, 3.8777555819362497`*^9, 3.87775580644769*^9, 
   3.877870933832942*^9, 3.877956352565262*^9, 3.877958457522978*^9, 
   3.8779594290933657`*^9, 3.877963439080434*^9, 3.877976816315332*^9},
 CellLabel->
  "Out[36]//MatrixForm=",ExpressionUUID->"da86f4d5-0bd8-4e9e-b494-\
bb990502af01"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Jinv", "=", 
   RowBox[{"-", 
    RowBox[{"Inverse", "[", "J", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.877522789554118*^9, 3.8775228272951097`*^9}, {
   3.877532070188691*^9, 3.8775320717021*^9}, {3.8775322608674088`*^9, 
   3.877532264996112*^9}, {3.8775323016423807`*^9, 3.877532304457656*^9}, {
   3.877532534233088*^9, 3.87753253511957*^9}, {3.87754198396836*^9, 
   3.8775419856142387`*^9}, 3.877544143556305*^9, {3.877599216515682*^9, 
   3.877599219120472*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"ef50141b-ad14-458c-a675-0c1e8eada538"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Tau]", " ", "=", " ", 
   RowBox[{"Jinv", ".", "B"}]}], ";"}]], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.8757902000096893`*^9, 3.8757904101651773`*^9, 3.875790586372142*^9, {
   3.875791096050145*^9, 3.875791145683877*^9}, 3.875791221565535*^9, {
   3.875791346008397*^9, 3.875791386864143*^9}, {3.8757943600258827`*^9, 
   3.87579436328981*^9}, {3.875948694952119*^9, 3.875948709573571*^9}, {
   3.8759601019379873`*^9, 3.875960109835854*^9}, {3.8770083947488127`*^9, 
   3.8770084082295237`*^9}, {3.8774151247407007`*^9, 3.877415132481942*^9}, {
   3.8775227695667458`*^9, 3.877522778645482*^9}, {3.8775228345947857`*^9, 
   3.877522855754835*^9}, {3.87752307362579*^9, 3.877523080595377*^9}, {
   3.8775237686798973`*^9, 3.877523777845324*^9}, 3.87753101870687*^9, {
   3.877532537069501*^9, 3.877532537830665*^9}, {3.877533331186714*^9, 
   3.877533331670895*^9}, {3.877533400598672*^9, 3.8775334024111223`*^9}, {
   3.8775420048763447`*^9, 3.877542006223968*^9}, 3.877544140386359*^9, {
   3.877599221918824*^9, 3.877599225621513*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"86d30382-6b74-45a7-b686-396757244727"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "@", 
  RowBox[{"MatrixForm", "[", "\[Tau]", "]"}]}]], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.8757902000096893`*^9, 3.8757904101651773`*^9, 3.875790586372142*^9, {
   3.875791096050145*^9, 3.875791145683877*^9}, 3.875791221565535*^9, {
   3.875791346008397*^9, 3.875791386864143*^9}, {3.8757943600258827`*^9, 
   3.87579436328981*^9}, {3.875948694952119*^9, 3.875948709573571*^9}, {
   3.8759601019379873`*^9, 3.875960109835854*^9}, {3.8770083947488127`*^9, 
   3.8770084082295237`*^9}, {3.8774151247407007`*^9, 3.877415132481942*^9}, {
   3.8775227695667458`*^9, 3.877522778645482*^9}, {3.8775228345947857`*^9, 
   3.877522863736388*^9}, {3.8775230876449757`*^9, 3.877523088642717*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"53da8d5a-6fb1-408a-bbde-f924e38462a1"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{"Cot", "[", 
        RowBox[{
         RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
         RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], 
       RowBox[{"s1", "[", "t", "]"}]], 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], 
       RowBox[{"s1", "[", "t", "]"}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], 
        RowBox[{"s1", "[", "t", "]"}]]}]},
     {"0", 
      FractionBox[
       RowBox[{"Cot", "[", 
        RowBox[{
         RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
         RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], 
       RowBox[{"s2", "[", "t", "]"}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], 
        RowBox[{"s2", "[", "t", "]"}]]}]},
     {"0", 
      FractionBox[
       RowBox[{"Csc", "[", 
        RowBox[{
         RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
         RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], 
       RowBox[{"s3", "[", "t", "]"}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Cot", "[", 
         RowBox[{
          RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], 
        RowBox[{"s3", "[", "t", "]"}]]}]},
     {
      FractionBox[
       RowBox[{"Csc", "[", 
        RowBox[{
         RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
         RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], 
       RowBox[{"2", " ", "L"}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}]}], 
        RowBox[{"2", " ", "L"}]]}], 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}]}], 
       RowBox[{"2", " ", "L"}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8775320030430717`*^9, 3.877532087002383*^9, 3.877532219868827*^9, 
   3.877532284245*^9, 3.877532347141056*^9, 3.8775325609882097`*^9, 
   3.87753267863725*^9, 3.877533354673153*^9, 3.877533423045966*^9, 
   3.8775335096202*^9, 3.8775396267169333`*^9, 3.8775397399511843`*^9, 
   3.87754038625413*^9, 3.877540464975225*^9, 3.877540615788824*^9, 
   3.877540822939646*^9, {3.877541990263624*^9, 3.87754201370753*^9}, 
   3.877542528559127*^9, 3.877542769014224*^9, 3.87754416165891*^9, 
   3.877599245599039*^9, 3.8776009297303047`*^9, 3.877608007470297*^9, 
   3.877609849994899*^9, 3.877617863618628*^9, 3.877661529375671*^9, 
   3.877661575029509*^9, {3.877661644299313*^9, 3.877661670048169*^9}, 
   3.877664929659102*^9, 3.877665024479088*^9, 3.877665191268581*^9, 
   3.877683842506922*^9, 3.877692672653702*^9, 3.877694596151857*^9, 
   3.8776947823842287`*^9, 3.8776964966709557`*^9, 3.8776975684781637`*^9, 
   3.877697801858583*^9, 3.877753517442397*^9, 3.87775415030509*^9, 
   3.8777555820492973`*^9, 3.8777558065507193`*^9, 3.877870933962249*^9, 
   3.877956352699759*^9, 3.8779584576263323`*^9, 3.87795942920035*^9, 
   3.877963439200197*^9, 3.877976816426464*^9},
 CellLabel->
  "Out[39]//MatrixForm=",ExpressionUUID->"82a6feb3-13eb-4fba-90d0-\
ba477e2b0d30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Calcolo", " ", "le", " ", "velocit\[AGrave]", " ", "dei", " ", "cedenti", 
    " ", "moltiplicando", " ", "\[Tau]", " ", "per", " ", "le", " ", 
    "velocit\[AGrave]", " ", "dei", " ", "moventi"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"v2", "=", 
   RowBox[{"Simplify", "@", 
    RowBox[{"MatrixForm", "[", 
     RowBox[{"\[Tau]", ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"s1", "'"}], "[", "t", "]"}], ",", 
        RowBox[{
         RowBox[{"s2", "'"}], "[", "t", "]"}], ",", 
        RowBox[{
         RowBox[{"s3", "'"}], "[", "t", "]"}]}], "}"}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8775228876283216`*^9, 3.877522892940358*^9}, {
  3.877523090545142*^9, 3.877523091616604*^9}, {3.8775232162368603`*^9, 
  3.877523218773561*^9}, {3.877523265732894*^9, 3.877523304502561*^9}, {
  3.877532040994541*^9, 3.877532042229602*^9}, {3.877532541323833*^9, 
  3.87753254202046*^9}, {3.8777010837819853`*^9, 3.8777010852865753`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"d4a2c8b5-4cca-4b9f-b727-c05016e84820"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"Cot", "[", 
           RowBox[{
            RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["s1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Csc", "[", 
           RowBox[{
            RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
          RowBox[{"Csc", "[", 
           RowBox[{
            RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s2", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
        RowBox[{"s1", "[", "t", "]"}]]},
      {
       FractionBox[
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["s2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{
            SuperscriptBox["s3", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], 
        RowBox[{"s2", "[", "t", "]"}]]},
      {
       FractionBox[
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["s2", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "-", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["s3", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
        RowBox[{"s3", "[", "t", "]"}]]},
      {
       FractionBox[
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["s1", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "+", 
           RowBox[{
            RowBox[{"Csc", "[", 
             RowBox[{
              RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}]}], " ", 
               RowBox[{
                SuperscriptBox["s2", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
               RowBox[{
                SuperscriptBox["s3", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{"2", " ", "L"}]]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8776615295447474`*^9, 3.877661575248233*^9, {3.8776616445197077`*^9, 
   3.877661670275297*^9}, 3.8776649298766737`*^9, 3.877665024707966*^9, 
   3.877665191485236*^9, 3.877683842726203*^9, 3.877692672871006*^9, 
   3.877694596370767*^9, 3.877694782615843*^9, 3.877696496920083*^9, 
   3.8776975687450247`*^9, 3.877697802111862*^9, 3.8777535177042522`*^9, 
   3.8777541505513887`*^9, 3.8777555822969723`*^9, 3.877755806797061*^9, 
   3.877870934252158*^9, 3.877956352949216*^9, 3.877958457873137*^9, 
   3.8779594294474077`*^9, 3.877963439446169*^9, 3.877976816673156*^9},
 CellLabel->
  "Out[40]//MatrixForm=",ExpressionUUID->"9056b763-9949-47ae-aca7-\
54893486a58d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Verifica metodo 1 e 2", "Subsubsection",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.877002241191313*^9, 3.8770034841904573`*^9, 3.8770047500633497`*^9, 
   3.877005640917179*^9, 3.877005694144802*^9, 3.877005729437632*^9, 
   3.877006021410359*^9, 3.8770060704350452`*^9, 3.8770061258573103`*^9, {
   3.877006867673504*^9, 
   3.8770069031197433`*^9}},ExpressionUUID->"1f6ba289-ab97-402c-b22a-\
7f905102c8a3"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Calcolo", " ", "la", " ", "differenza", " ", "tra", " ", 
   RowBox[{
    SuperscriptBox["\[Theta]1", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], " ", "trovato", " ", "col", 
   " ", "metodo", " ", "1", " ", "e", " ", "2"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.877008615716641*^9, 3.877008647218017*^9}, {
   3.877364732473412*^9, 3.87736475180241*^9}, {3.877364793308875*^9, 
   3.877364844250615*^9}, 3.8773648805251637`*^9, {3.8773649110390587`*^9, 
   3.8773649279045973`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"dca94c55-fa95-4147-82f6-0dd068519fa3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"solv", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}], "-", 
  RowBox[{"v2", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.877008615716641*^9, 3.877008647218017*^9}, {
   3.877364732473412*^9, 3.87736475180241*^9}, {3.877364793308875*^9, 
   3.877364844250615*^9}, 3.8773648805251637`*^9, {3.8773649110390587`*^9, 
   3.877364932417988*^9}, 3.877518686764822*^9, {3.8775236405146427`*^9, 
   3.8775236525411863`*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"d6c0a09c-94ba-4f63-84cb-cef7bce0a13a"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.87752313351795*^9, 3.877523381428349*^9, 3.87752370030509*^9, 
   3.877523808231578*^9, 3.877525315413212*^9, 3.877525951336906*^9, 
   3.877530730292965*^9, 3.877531298777961*^9, 3.877531562114143*^9, 
   3.877531675526758*^9, 3.877531712245654*^9, 3.877532003143257*^9, 
   3.877532088016717*^9, 3.8775322199904137`*^9, 3.877532284362615*^9, 
   3.87753234725877*^9, 3.877532561167995*^9, 3.8775326787368317`*^9, 
   3.8775333546982393`*^9, 3.877533423144068*^9, 3.877533509721386*^9, 
   3.877539626757203*^9, 3.877539740050509*^9, 3.87754038634756*^9, 
   3.877540465069322*^9, 3.877540615885302*^9, 3.877540823040401*^9, 
   3.877542528824663*^9, 3.877542769186818*^9, 3.8775441618310833`*^9, 
   3.877599245855514*^9, 3.877600929984539*^9, 3.877608007619453*^9, 
   3.8776098501467657`*^9, 3.8776178637687807`*^9, 3.877661529565927*^9, 
   3.8776615752627087`*^9, {3.877661644544647*^9, 3.877661670293535*^9}, 
   3.877664929891574*^9, 3.8776650247239933`*^9, 3.877665191499776*^9, 
   3.877683842741768*^9, 3.8776926728863163`*^9, 3.877694596384596*^9, 
   3.877694782629836*^9, 3.877696496936675*^9, 3.8776975687508802`*^9, 
   3.877697802131715*^9, 3.877753517719631*^9, 3.877754150564516*^9, 
   3.877755582314082*^9, 3.877755806812107*^9, 3.87787093427938*^9, 
   3.877956352994624*^9, 3.877958457889258*^9, 3.877959429460927*^9, 
   3.877963439477001*^9, 3.8779768166872053`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"19370e85-3190-4c7c-b43a-f90dd782745d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Calcolo", " ", "la", " ", "differenza", " ", "tra", " ", 
   RowBox[{
    SuperscriptBox["\[Theta]2", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], " ", "trovato", " ", "col", 
   " ", "metodo", " ", "1", " ", "e", " ", "2"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.877364958571085*^9, 3.877364960890921*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"8c08efa2-d202-4354-be95-4ca10feda6b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"solv", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2", ",", "2"}], "]"}], "]"}], "-", 
  RowBox[{"v2", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.877008672383407*^9, 3.87700867367659*^9}, {
   3.8770087754790297`*^9, 3.8770087761307163`*^9}, {3.877364980003231*^9, 
   3.877364980926601*^9}, 3.877518746016726*^9, {3.877523658857263*^9, 
   3.877523668172894*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"dbeb2c1d-664c-41fe-b064-9c5d8e91cc49"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.877519018966209*^9, 3.8775231335234947`*^9, 3.8775233814470663`*^9, 
   3.8775236972614307`*^9, 3.877525315432157*^9, 3.877525951342498*^9, 
   3.877530730299945*^9, 3.8775312987870817`*^9, 3.8775315621210318`*^9, 
   3.87753167554565*^9, 3.877531712252821*^9, 3.877532003150474*^9, 
   3.8775320880415583`*^9, 3.8775322199981947`*^9, 3.877532284369561*^9, 
   3.877532347265847*^9, 3.877532561187973*^9, 3.877532678744388*^9, 
   3.8775333547083*^9, 3.877533423151265*^9, 3.877533509743451*^9, 
   3.877539626775937*^9, 3.877539740072123*^9, 3.8775403863524103`*^9, 
   3.8775404650851717`*^9, 3.8775406159008293`*^9, 3.877540823045619*^9, 
   3.877542528841991*^9, 3.877542769206564*^9, 3.877544161835832*^9, 
   3.877599245860219*^9, 3.877600929989234*^9, 3.877608007636056*^9, 
   3.8776098501518784`*^9, 3.877617863786216*^9, 3.877661529571957*^9, 
   3.8776615752785482`*^9, {3.877661644569716*^9, 3.877661670311432*^9}, 
   3.877664929907483*^9, 3.877665024743464*^9, 3.877665191504668*^9, 
   3.8776838427564287`*^9, 3.877692672902685*^9, 3.877694596398842*^9, 
   3.877694782645636*^9, 3.877696496941818*^9, 3.877697568765554*^9, 
   3.8776978021550837`*^9, 3.877753517724649*^9, 3.877754150569272*^9, 
   3.877755582333005*^9, 3.877755806826151*^9, 3.877870934285117*^9, 
   3.877956352998996*^9, 3.8779584578939734`*^9, 3.877959429475535*^9, 
   3.877963439509921*^9, 3.877976816702816*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"7677496e-d6db-45a8-ab01-c3f97521da1c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Calcolo", " ", "la", " ", "differenza", " ", "tra", " ", 
   RowBox[{
    SuperscriptBox["\[Theta]3", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], " ", "trovato", " ", "col", 
   " ", "metodo", " ", "1", " ", "e", " ", "2"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.87736500320265*^9, 3.877365005553441*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"ac64e9fb-0ec7-4de8-b957-11433b9158a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"solv", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "3", ",", "2"}], "]"}], "]"}], "-", 
  RowBox[{"v2", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "3"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.877008672383407*^9, 3.8770086885418158`*^9}, {
   3.877008754695201*^9, 3.877008755435115*^9}, 3.877364987521246*^9, 
   3.877518755302112*^9, {3.8775236735873003`*^9, 3.8775236798141947`*^9}, {
   3.877531820496738*^9, 3.877531848702614*^9}, {3.877532050248996*^9, 
   3.877532050607555*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"73926995-5d71-4087-bfe7-70b03fd9a6fb"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.877519019001008*^9, 3.8775231335280724`*^9, 3.877523381467717*^9, 
   3.87752369517721*^9, 3.877525315450172*^9, 3.877525951347537*^9, 
   3.877530730319363*^9, 3.877531298811414*^9, 3.877531562142939*^9, 
   3.877531675552863*^9, 3.877531712261503*^9, 3.8775320031592417`*^9, 
   3.87753208804842*^9, 3.877532220019649*^9, 3.87753228438946*^9, 
   3.8775323472891273`*^9, 3.87753256119536*^9, 3.8775326787557077`*^9, 
   3.877533354731621*^9, 3.8775334231746197`*^9, 3.877533509751493*^9, 
   3.877539626795783*^9, 3.877539740086689*^9, 3.877540386369565*^9, 
   3.877540465102088*^9, 3.877540615916935*^9, 3.877540823050486*^9, 
   3.877542035334483*^9, 3.8775425288604517`*^9, 3.87754276922187*^9, 
   3.8775441618402443`*^9, 3.877599245880022*^9, 3.8776009299948273`*^9, 
   3.877608007651319*^9, 3.877609850156324*^9, 3.877617863803535*^9, 
   3.877661529578002*^9, 3.87766157529538*^9, {3.877661644574395*^9, 
   3.8776616703275433`*^9}, 3.877664929912568*^9, 3.877665024761031*^9, 
   3.877665191510139*^9, 3.877683842761969*^9, 3.877692672919507*^9, 
   3.8776945964144297`*^9, 3.877694782661213*^9, 3.877696496946319*^9, 
   3.877697568781373*^9, 3.877697802160152*^9, 3.877753517739667*^9, 
   3.877754150574913*^9, 3.877755582337967*^9, 3.877755806844798*^9, 
   3.87787093431341*^9, 3.8779563530027723`*^9, 3.877958457897942*^9, 
   3.877959429493224*^9, 3.877963439543841*^9, 3.877976816707575*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"aee7f7d9-f2a3-4b00-be3b-6e4fb06b0edd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Calcolo", " ", "la", " ", "differenza", " ", "tra", " ", 
   RowBox[{
    SuperscriptBox["\[Theta]4", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], " ", "trovato", " ", "col", 
   " ", "metodo", " ", "1", " ", "e", " ", "2"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.877365020145625*^9, 3.877365022447835*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"18a2b3ac-b694-4084-996d-ce81c052fd80"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"solv", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "4", ",", "2"}], "]"}], "]"}], "-", 
  RowBox[{"v2", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "4"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.877008672383407*^9, 3.877008674517692*^9}, {
   3.877008706278183*^9, 3.877008732682539*^9}, {3.877365035107482*^9, 
   3.877365053734701*^9}, 3.877518764615244*^9, {3.877523685692484*^9, 
   3.877523692116755*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"82331063-f2eb-4300-a84b-35069d45cc2f"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.877519019023347*^9, 3.877523133534274*^9, 3.877523381474461*^9, 
   3.8775236927695093`*^9, 3.8775253154684467`*^9, 3.877525951368918*^9, 
   3.877530730337305*^9, 3.877531298830042*^9, 3.8775315621621447`*^9, 
   3.877531675564168*^9, 3.87753171227909*^9, 3.877532003180581*^9, 
   3.877532088068585*^9, 3.877532220038858*^9, 3.877532284409441*^9, 
   3.877532347307535*^9, 3.877532561206628*^9, 3.877532678774392*^9, 
   3.877533354754078*^9, 3.877533423193523*^9, 3.877533509777248*^9, 
   3.8775396268032618`*^9, 3.877539740100831*^9, 3.8775403863866167`*^9, 
   3.877540465118476*^9, 3.8775406159338512`*^9, 3.877540823059128*^9, 
   3.87754252886624*^9, 3.877542769237646*^9, 3.877544161856168*^9, 
   3.8775992458969717`*^9, 3.8776009300098143`*^9, 3.8776080076574697`*^9, 
   3.877609850174118*^9, 3.87761786382022*^9, 3.877661529599258*^9, 
   3.8776615753098497`*^9, {3.877661644582559*^9, 3.877661670343995*^9}, 
   3.877664929927247*^9, 3.877665024779746*^9, 3.877665191523752*^9, 
   3.87768384277549*^9, 3.877692672935923*^9, 3.877694596428608*^9, 
   3.8776947826657953`*^9, 3.877696496962593*^9, 3.877697568788547*^9, 
   3.8776978021644907`*^9, 3.877753517756275*^9, 3.8777541505872717`*^9, 
   3.8777555823423147`*^9, 3.877755806858911*^9, 3.877870934318511*^9, 
   3.877956353046083*^9, 3.877958457902801*^9, 3.877959429507156*^9, 
   3.877963439575968*^9, 3.877976816711966*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"f659a388-7347-485e-bdee-fb5dfdcaad95"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["c) Determinare le accelerazioni del punto E.", "Subsection",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994822119827`*^9}, {
   3.875699520476288*^9, 3.8756995514920177`*^9}, {3.875699598027767*^9, 
   3.875699706023056*^9}, 3.875785079069716*^9, 
   3.8776060493248*^9},ExpressionUUID->"0669086e-6dfb-45c7-90d6-bb88fb80dab3"],

Cell[CellGroupData[{

Cell["Calcolo accelerazioni dei cedenti", "Subsubsection",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994822119827`*^9}, {
   3.875699520476288*^9, 3.8756995514920177`*^9}, {3.875699598027767*^9, 
   3.875699706023056*^9}, {3.875790290179709*^9, 3.875790304954887*^9}, 
   3.875791407818285*^9, {3.875791444447968*^9, 3.875791463576795*^9}, 
   3.877617708613276*^9, {3.877694157148272*^9, 
   3.877694165996364*^9}},ExpressionUUID->"7057738f-1dff-48f3-b6be-\
11e797e08e55"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Derivo", " ", "la", " ", "matrice", " ", "\[Tau]", " ", "che", " ", 
    "contiene", " ", "i", " ", "rapporti", " ", "di", " ", 
    "velocit\[AGrave]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Tau]1", "=", "  ", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       SubscriptBox["\[PartialD]", "t"], " ", "\[Tau]"}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{"Simplify", "@", 
    RowBox[{"MatrixForm", "[", "\[Tau]1", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994822119827`*^9}, {
   3.875699520476288*^9, 3.8756995514920177`*^9}, {3.875699598027767*^9, 
   3.875699706023056*^9}, 3.875790290179709*^9, {3.875790370372736*^9, 
   3.875790403303378*^9}, {3.875790462640843*^9, 3.875790520845908*^9}, {
   3.87579056248407*^9, 3.875790574749996*^9}, {3.876919007884839*^9, 
   3.876919016272078*^9}, {3.876920502796331*^9, 3.8769205086766148`*^9}, {
   3.877417315408041*^9, 3.8774173176352663`*^9}, {3.8774175038097486`*^9, 
   3.8774175052778263`*^9}, {3.8774361619502983`*^9, 3.877436162633321*^9}, 
   3.877518793347672*^9, {3.87751882728605*^9, 3.8775188621638117`*^9}, {
   3.8775311994027967`*^9, 3.877531243986333*^9}, {3.877607937485485*^9, 
   3.8776079675220423`*^9}, {3.877662027160472*^9, 3.877662031846766*^9}, {
   3.877662178945442*^9, 3.877662179827127*^9}, {3.877662250065827*^9, 
   3.8776622515578938`*^9}, {3.877694197222618*^9, 3.877694248504765*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"15b5eceb-1532-4a1a-9206-cd3248391939"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], ")"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["s1", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"s1", "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SuperscriptBox["\[Theta]1", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["\[Theta]4", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], 
         ")"}]}], 
       SuperscriptBox[
        RowBox[{"s1", "[", "t", "]"}], "2"]], 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], " ", 
           RowBox[{
            SuperscriptBox["s1", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"s1", "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cot", "[", 
               RowBox[{
                RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Theta]1", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cot", "[", 
               RowBox[{
                RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Theta]2", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Csc", "[", 
               RowBox[{
                RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Theta]3", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Csc", "[", 
               RowBox[{
                RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Theta]4", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
         ")"}]}], 
       SuperscriptBox[
        RowBox[{"s1", "[", "t", "]"}], "2"]], 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["s1", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           FractionBox["1", "4"], " ", 
           RowBox[{"s1", "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"4", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Theta]1", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "+", 
             RowBox[{"4", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Theta]2", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Theta]3", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Theta]2", "[", "t", "]"}]}], "+", 
                RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Theta]3", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"\[Theta]1", "[", "t", "]"}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Theta]2", "[", "t", "]"}]}], "-", 
                RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Theta]4", "[", "t", "]"}]}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Theta]3", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"\[Theta]1", "[", "t", "]"}], "+", 
                RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Theta]4", "[", "t", "]"}]}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Theta]3", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Theta]4", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{
                RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                RowBox[{"2", " ", 
                 RowBox[{"\[Theta]2", "[", "t", "]"}]}], "+", 
                RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Theta]4", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
         ")"}]}], 
       SuperscriptBox[
        RowBox[{"s1", "[", "t", "]"}], "2"]]},
     {"0", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]3", "[", "t", "]"}]}], ")"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["s2", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"s2", "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{
               SuperscriptBox["\[Theta]2", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["\[Theta]3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], 
         ")"}]}], 
       SuperscriptBox[
        RowBox[{"s2", "[", "t", "]"}], "2"]], 
      FractionBox[
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["s2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "+", 
          RowBox[{
           RowBox[{"Cot", "[", 
            RowBox[{
             RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{"s2", "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[Theta]2", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "-", 
             RowBox[{
              SuperscriptBox["\[Theta]3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], 
         ")"}]}], 
       SuperscriptBox[
        RowBox[{"s2", "[", "t", "]"}], "2"]]},
     {"0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["s3", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "+", 
           RowBox[{
            RowBox[{"Cot", "[", 
             RowBox[{
              RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"s3", "[", "t", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["\[Theta]2", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}], "-", 
              RowBox[{
               SuperscriptBox["\[Theta]3", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], 
          ")"}]}], 
        SuperscriptBox[
         RowBox[{"s3", "[", "t", "]"}], "2"]]}], 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]3", "[", "t", "]"}]}], ")"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["s3", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"s3", "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[Theta]2", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "-", 
             RowBox[{
              SuperscriptBox["\[Theta]3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], 
         ")"}]}], 
       SuperscriptBox[
        RowBox[{"s3", "[", "t", "]"}], "2"]]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Cot", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Theta]1", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "-", 
           RowBox[{
            SuperscriptBox["\[Theta]4", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], 
        RowBox[{"2", " ", "L"}]]}], 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]1", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{"4", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]2", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"\[Theta]1", "[", "t", "]"}]}], "-", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]3", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]3", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"\[Theta]1", "[", "t", "]"}]}], "-", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]4", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]4", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"\[Theta]1", "[", "t", "]"}]}], "+", 
             RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]4", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "+", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]4", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
       RowBox[{"8", " ", "L"}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{"Csc", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Csc", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Csc", "[", 
             RowBox[{
              RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Cot", "[", 
                RowBox[{
                 RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
               RowBox[{
                SuperscriptBox["\[Theta]3", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cot", "[", 
                RowBox[{
                 RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
               RowBox[{
                SuperscriptBox["\[Theta]4", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{"2", " ", "L"}]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.877665152763445*^9, 3.877665319777899*^9, 
  3.877684029604113*^9, 3.877692859981659*^9, 3.877694679571926*^9, 
  3.877694867751432*^9, 3.877696581426549*^9, 3.8776975744183683`*^9, 
  3.877697807496956*^9, 3.877753523189321*^9, 3.877754155904896*^9, 
  3.877755587699596*^9, 3.877755812190063*^9, 3.877870940465406*^9, 
  3.877956358472773*^9, 3.877958463264653*^9, 3.8779594349053097`*^9, 
  3.877963444911845*^9, 3.877976822237608*^9},
 CellLabel->
  "Out[50]//MatrixForm=",ExpressionUUID->"9df2911f-7bb7-4eb2-a510-\
aea245e99c94"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Calcolo", " ", "le", " ", "accelerazioni", " ", "dei", " ", "cedenti", 
    " ", "moltiplicando", " ", "\[Tau]", " ", "per", " ", "le", " ", 
    "accelerazioni", " ", "dei", " ", "moventi", " ", "e", " ", "sommando", 
    " ", "\[Tau]1", " ", 
    RowBox[{"(", 
     RowBox[{"derivata", " ", "dei", " ", "\[Tau]"}], ")"}], " ", "per", " ", 
    "le", " ", "velocit\[AGrave]", " ", "dei", " ", "moventi"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"a2", "=", 
    RowBox[{"Simplify", "@", 
     RowBox[{"MatrixForm", "[", 
      RowBox[{
       RowBox[{"\[Tau]", ".", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"s1", "''"}], "[", "t", "]"}], ",", 
          RowBox[{
           RowBox[{"s2", "''"}], "[", "t", "]"}], ",", 
          RowBox[{
           RowBox[{"s3", "''"}], "[", "t", "]"}]}], "}"}]}], "+", 
       RowBox[{"\[Tau]1", ".", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"s1", "'"}], "[", "t", "]"}], ",", 
          RowBox[{
           RowBox[{"s2", "'"}], "[", "t", "]"}], ",", 
          RowBox[{
           RowBox[{"s3", "'"}], "[", "t", "]"}]}], "}"}]}]}], "]"}]}]}], 
   "\n"}]}]], "Input",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994822119827`*^9}, {
   3.875699520476288*^9, 3.8756995514920177`*^9}, {3.875699598027767*^9, 
   3.875699706023056*^9}, 3.875790290179709*^9, {3.875790370372736*^9, 
   3.875790403303378*^9}, {3.875790462640843*^9, 3.875790520845908*^9}, {
   3.87579056248407*^9, 3.875790574749996*^9}, {3.876919007884839*^9, 
   3.876919016272078*^9}, {3.876920502796331*^9, 3.8769205086766148`*^9}, {
   3.877417315408041*^9, 3.8774173176352663`*^9}, {3.8774175038097486`*^9, 
   3.8774175052778263`*^9}, {3.8774361619502983`*^9, 3.877436162633321*^9}, 
   3.877518793347672*^9, {3.87751882728605*^9, 3.8775188621638117`*^9}, {
   3.8775311994027967`*^9, 3.877531243986333*^9}, {3.877607937485485*^9, 
   3.8776079675220423`*^9}, {3.877608239288252*^9, 3.8776082417677193`*^9}, {
   3.877608443477467*^9, 3.877608446371676*^9}, {3.8776614739588003`*^9, 
   3.87766147467552*^9}, {3.877694254063924*^9, 3.8776943343457527`*^9}, {
   3.8776977099272213`*^9, 3.87769771756406*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"5ce5d349-84fb-4d66-9c0c-f575a6615094"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          RowBox[{"Cot", "[", 
           RowBox[{
            RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
          SuperscriptBox[
           RowBox[{
            SuperscriptBox["s1", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
         RowBox[{"4", " ", 
          RowBox[{"Csc", "[", 
           RowBox[{
            RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["s1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Csc", "[", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s2", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"Csc", "[", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Csc", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{"s1", "[", "t", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[Theta]1", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}], "-", 
               RowBox[{
                SuperscriptBox["\[Theta]4", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], 
           ")"}]}], "+", 
         RowBox[{
          RowBox[{"s1", "[", "t", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"Csc", "[", 
               RowBox[{
                RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], "2"], " ", 
             SuperscriptBox[
              RowBox[{"Csc", "[", 
               RowBox[{
                RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["s3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Theta]1", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], "+", 
               RowBox[{"4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Theta]2", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], "-", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Theta]3", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], "-", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"\[Theta]2", "[", "t", "]"}]}], "+", 
                  RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Theta]3", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"\[Theta]2", "[", "t", "]"}]}], "-", 
                  RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"\[Theta]4", "[", "t", "]"}]}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Theta]3", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "+", 
                  RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"\[Theta]4", "[", "t", "]"}]}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Theta]3", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Theta]4", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"\[Theta]2", "[", "t", "]"}]}], "+", 
                  RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Theta]4", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "-", 
            RowBox[{"4", " ", 
             RowBox[{"Csc", "[", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{"Csc", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s2", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Cot", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Theta]1", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cot", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Theta]2", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], "-", 
               RowBox[{
                RowBox[{"Csc", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Theta]3", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Csc", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Theta]4", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
            RowBox[{"4", " ", 
             RowBox[{"Cot", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s1", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{"4", " ", 
             RowBox[{"Csc", "[", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{"Csc", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["s2", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], "-", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["s3", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
           ")"}]}]}], 
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{"s1", "[", "t", "]"}], "2"]}]]},
      {
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"Csc", "[", 
           RowBox[{
            RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]3", "[", "t", "]"}]}], ")"}]}], "]"}]}], 
            " ", 
            SuperscriptBox[
             RowBox[{
              SuperscriptBox["s2", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
           RowBox[{"2", " ", 
            RowBox[{
             SuperscriptBox["s2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
               RowBox[{
                SuperscriptBox["s3", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}]}], "+", 
              RowBox[{
               RowBox[{"s2", "[", "t", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]2", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}], "+", 
                 RowBox[{
                  SuperscriptBox["\[Theta]3", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], 
             ")"}]}], "+", 
           RowBox[{
            RowBox[{"s2", "[", "t", "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
               RowBox[{
                SuperscriptBox["s3", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["\[Theta]2", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}], "-", 
                 RowBox[{
                  SuperscriptBox["\[Theta]3", "\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "+", 
              
              RowBox[{"2", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Cos", "[", 
                   RowBox[{
                    RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                    RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
                  RowBox[{
                   SuperscriptBox["s2", "\[Prime]\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}], "-", 
                 RowBox[{
                  SuperscriptBox["s3", "\[Prime]\[Prime]",
                   MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], 
             ")"}]}]}], ")"}]}], 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"s2", "[", "t", "]"}], "2"]}]]},
      {
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Csc", "[", 
            RowBox[{
             RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]3", "[", "t", "]"}]}], ")"}]}], "]"}]}], 
             " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["s3", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{
              SuperscriptBox["s2", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["s3", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{"s3", "[", "t", "]"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   SuperscriptBox["\[Theta]2", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}], "-", 
                  RowBox[{
                   SuperscriptBox["\[Theta]3", "\[Prime]",
                    MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], 
              ")"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"s3", "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["s3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{
                 SuperscriptBox["\[Theta]2", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], "+", 
               RowBox[{
                SuperscriptBox["\[Theta]3", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"s3", "[", "t", "]"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{
                 SuperscriptBox["s2", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["s3", "\[Prime]\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
           ")"}]}], 
         RowBox[{"2", " ", 
          SuperscriptBox[
           RowBox[{"s3", "[", "t", "]"}], "2"]}]]}]},
      {
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          SuperscriptBox[
           RowBox[{"Csc", "[", 
            RowBox[{
             RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"Csc", "[", 
            RowBox[{
             RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]2", "[", "t", "]"}]}], "-", 
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]1", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]1", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]1", "[", "t", "]"}]}], "-", 
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]2", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]2", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]1", "[", "t", "]"}]}], "-", 
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]2", "[", "t", "]"}]}], "-", 
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]1", "[", "t", "]"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]2", "[", "t", "]"}]}], "+", 
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{"4", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{"Sin", "[", 
               RowBox[{
                RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], "2"], " ", 
             RowBox[{
              SuperscriptBox["s1", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[Theta]1", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}], "-", 
               RowBox[{
                SuperscriptBox["\[Theta]4", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]1", "[", "t", "]"}]}], "-", 
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]4", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]2", "[", "t", "]"}]}], "-", 
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]4", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]4", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]1", "[", "t", "]"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]2", "[", "t", "]"}]}], "+", 
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]4", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{
              SuperscriptBox["s2", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Theta]1", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], "-", 
               RowBox[{"4", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Theta]2", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   RowBox[{"\[Theta]1", "[", "t", "]"}]}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Theta]3", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Theta]3", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   RowBox[{"\[Theta]1", "[", "t", "]"}]}], "-", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Theta]4", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], "+", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Theta]4", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], "-", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"2", " ", 
                   RowBox[{"\[Theta]1", "[", "t", "]"}]}], "+", 
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"\[Theta]3", "[", "t", "]"}]}], "-", 
                  RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Theta]4", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}], "-", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                  RowBox[{"2", " ", 
                   RowBox[{"\[Theta]3", "[", "t", "]"}]}], "+", 
                  RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
                RowBox[{
                 SuperscriptBox["\[Theta]4", "\[Prime]",
                  MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "-", 
            RowBox[{"2", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s1", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]2", "[", "t", "]"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]3", "[", "t", "]"}]}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s1", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]2", "[", "t", "]"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]3", "[", "t", "]"}]}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s1", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]1", "[", "t", "]"}]}], "-", 
               RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s2", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s2", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]1", "[", "t", "]"}]}], "+", 
               RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]3", "[", "t", "]"}]}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s2", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]3", "[", "t", "]"}]}], "+", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s2", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]1", "[", "t", "]"}]}], "-", 
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s3", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]2", "[", "t", "]"}]}], "-", 
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s3", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s3", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]1", "[", "t", "]"}]}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"\[Theta]2", "[", "t", "]"}]}], "+", 
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["s3", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
         RowBox[{"8", " ", "L"}]]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.877618046283887*^9, 3.877661842771842*^9, 
  3.8776651690137033`*^9, 3.8776653363000393`*^9, 3.877684045817011*^9, 
  3.877692876015317*^9, 3.877694693279481*^9, 3.877694880600456*^9, 
  3.877696595100121*^9, 3.8776975873693933`*^9, 3.877697820263871*^9, 
  3.8777535360912123`*^9, 3.877754168590575*^9, 3.877755600400196*^9, 
  3.877755824844837*^9, 3.8778709523036547`*^9, 3.877956371285799*^9, 
  3.877958474684782*^9, 3.877959446270261*^9, 3.8779634561172743`*^9, 
  3.8779768336624727`*^9},
 CellLabel->
  "Out[51]//MatrixForm=",ExpressionUUID->"65103946-2832-498a-97e6-\
afab3efa580d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Accelerazioni del punto E", "Subsubsection",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.87579058718157*^9, {3.875791412445324*^9, 3.8757914352311563`*^9}, 
   3.877007068526761*^9, 3.877617753910204*^9, 3.87761779149044*^9, {
   3.877694343077167*^9, 
   3.8776943494491663`*^9}},ExpressionUUID->"32414901-801f-4481-aa7f-\
cfd59ebd27fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Accelerazione", " ", "del", " ", "punto", " ", "E", " ", "lungo", " ", 
    "x"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"axE", " ", "=", " ", 
     RowBox[{
      SubscriptBox["\[PartialD]", "t"], "vxE"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", "axE", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.87769402489121*^9, 3.877694032176272*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"29070aed-6f9b-4ba9-b40d-4f3f241eac5e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["s3", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], " ", 
   RowBox[{
    SuperscriptBox["\[Theta]3", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "-", 
  RowBox[{"L", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["\[Theta]4", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
  RowBox[{"L", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["\[Theta]4", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["s3", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "-", 
  RowBox[{
   RowBox[{"s3", "[", "t", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Theta]3", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Theta]3", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
  RowBox[{"L", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["\[Theta]4", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "-", 
  RowBox[{"L", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["\[Theta]4", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.87769469330963*^9, 3.87769488063234*^9, 
  3.877696595144895*^9, 3.877697587413599*^9, 3.877697820318125*^9, 
  3.877754168635844*^9, 3.877755600446694*^9, 3.8777558248887787`*^9, 
  3.87787095235973*^9, 3.877956371358493*^9, 3.877958474733013*^9, 
  3.8779594463137903`*^9, 3.877963456178586*^9, 3.877976833705881*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"bfca6802-0d09-4660-b35f-41eb49c8974a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Accelerazione", " ", "del", " ", "punto", " ", "E", " ", "lungo", " ", 
    "y"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"ayE", " ", "=", " ", 
     RowBox[{
      SubscriptBox["\[PartialD]", "t"], "vyE"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", "ayE", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.87769402489121*^9, 3.877694039306546*^9}, 
   3.87769437200394*^9},
 CellLabel->"In[54]:=",ExpressionUUID->"f42cc776-6762-4426-87c5-d170fdc26b47"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["s3", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], " ", 
   RowBox[{
    SuperscriptBox["\[Theta]3", "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{"L", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["\[Theta]4", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
  RowBox[{"L", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{
     SuperscriptBox["\[Theta]4", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["s3", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{
   RowBox[{"s3", "[", "t", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Theta]3", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Theta]3", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
  RowBox[{"L", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["\[Theta]4", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "+", 
  RowBox[{"L", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], " ", 
   RowBox[{
    SuperscriptBox["\[Theta]4", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}]}]], "Output",
 CellChangeTimes->{3.877694693313135*^9, 3.8776948806373653`*^9, 
  3.877696595164743*^9, 3.8776975874337387`*^9, 3.8776978203378687`*^9, 
  3.877754168654933*^9, 3.877755600465252*^9, 3.87775582490738*^9, 
  3.87787095238279*^9, 3.877956371405616*^9, 3.877958474760788*^9, 
  3.8779594463329897`*^9, 3.877963456215045*^9, 3.877976833724574*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"9cbe64db-8dab-4885-a6d8-3fdb8a1460dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Accelerazione", " ", "del", " ", "punto", " ", "E"}], "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"aE", "=", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{
        RowBox[{"(", "axE", ")"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", "ayE", ")"}], "^", "2"}]}]]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", "aE", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.87769402489121*^9, 3.877694047848069*^9}, {
   3.877694393391004*^9, 3.877694394638307*^9}, 3.877694428837389*^9, {
   3.877695499557716*^9, 3.877695513647336*^9}, {3.8776955628936577`*^9, 
   3.87769556817795*^9}, {3.8776956076431513`*^9, 3.8776956799307003`*^9}, {
   3.877696467993587*^9, 3.877696471244296*^9}, {3.877696839907305*^9, 
   3.877696846532544*^9}, 3.877697103381048*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"aa31db48-4051-4641-a7bb-87cff7b2d3dd"],

Cell[BoxData[
 RowBox[{"\[Sqrt]", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["s3", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]3", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{"L", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]4", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
       RowBox[{"L", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]4", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["s3", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"s3", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Theta]3", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]3", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "-", 
       RowBox[{"L", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]4", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{"L", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]4", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["s3", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]3", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"s3", "[", "t", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
       RowBox[{"L", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]4", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
       RowBox[{"L", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], " ", 
        SuperscriptBox[
         RowBox[{
          SuperscriptBox["\[Theta]4", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["s3", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
        RowBox[{"s3", "[", "t", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]3", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{"L", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]4", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{"L", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]4", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}], "2"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.8776975875436773`*^9, 3.8776978204478827`*^9, 
  3.877754168763227*^9, 3.877755600574225*^9, 3.8777558250161953`*^9, 
  3.8778709525064173`*^9, 3.8779563715181503`*^9, 3.877958474873069*^9, 
  3.877959446444714*^9, 3.877963456325965*^9, 3.877976833835194*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"Out[57]=",ExpressionUUID->"1bd82f22-e570-4234-965d-b4b563fead3a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Accelerazione", " ", "angolare", " ", "della", " ", "pinza"}], 
   "*)"}], "\n", 
  RowBox[{"a\[Theta]Pinza", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"a2", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "4"}], "]"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.87769402489121*^9, 3.877694047848069*^9}, {
  3.877694393391004*^9, 3.877694394638307*^9}, {3.877694428837389*^9, 
  3.877694473716961*^9}, {3.8776954128513813`*^9, 3.877695414058773*^9}, {
  3.877697728423505*^9, 3.877697728564671*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"59e52f17-240d-461c-8d1f-d4585fb0033d"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"2", " ", "L"}]], 
  RowBox[{
   RowBox[{"Csc", "[", 
    RowBox[{
     RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
     RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Cot", "[", 
       RowBox[{
        RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
        RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["s1", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Theta]4", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["s1", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "+", 
     RowBox[{
      RowBox[{"Csc", "[", 
       RowBox[{
        RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
        RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           SuperscriptBox["s2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Csc", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Csc", "[", 
             RowBox[{
              RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]3", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cot", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}]}], " ", 
               RowBox[{
                SuperscriptBox["\[Theta]2", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cot", "[", 
                RowBox[{
                 RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
               RowBox[{
                SuperscriptBox["\[Theta]4", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
          ")"}]}], "+", 
        RowBox[{
         RowBox[{
          SuperscriptBox["s3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Csc", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{
            RowBox[{"Csc", "[", 
             RowBox[{
              RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Cot", "[", 
                RowBox[{
                 RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
               RowBox[{
                SuperscriptBox["\[Theta]3", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cot", "[", 
                RowBox[{
                 RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
               RowBox[{
                SuperscriptBox["\[Theta]4", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
          ")"}]}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["s2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["s3", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.877697617889146*^9, 3.877697849165941*^9, 
  3.877754197374028*^9, 3.877755629312873*^9, 3.87775585384228*^9, 
  3.877870982282382*^9, 3.8779564008559732`*^9, 3.877958503800705*^9, 
  3.87795947581361*^9, 3.877963484861843*^9, 3.8779768633915367`*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"Out[58]=",ExpressionUUID->"a8396ead-f7a3-47c7-a5ba-54a6a0d94c8d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"In", " ", "queste", " ", "espressioni", " ", 
   RowBox[{"dell", "'"}], "accelerazione", " ", "devo", " ", "sostituire", 
   " ", "le", " ", "velocit\[AGrave]", " ", "e", " ", "le", " ", 
   "accelerazioni", " ", "dei", " ", "cedenti", " ", "che", " ", 
   RowBox[{"sono", ":"}]}], "*)"}]], "Text", "Input",
 CellChangeTimes->{{3.877697182174417*^9, 3.877697182177949*^9}, {
   3.8776972894921494`*^9, 3.8776973059644527`*^9}, 3.877956236069302*^9},
 CellLabel->"In[59]:=",ExpressionUUID->"7f12021c-9cda-498b-9c71-081e6fb52bf3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Theta]1", "'"}], "[", "t", "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"v2", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.87769695096349*^9, 3.8776970196996*^9}, {
   3.877697134130512*^9, 3.877697138591967*^9}, 3.87769719524013*^9, {
   3.877697243908044*^9, 3.87769725391964*^9}, {3.8776973211760683`*^9, 
   3.8776973384195957`*^9}, {3.877697388308247*^9, 3.8776973929023733`*^9}, {
   3.877697645218399*^9, 3.877697645278648*^9}, {3.877697770712781*^9, 
   3.877697772636746*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"cd4af19c-120d-4000-a68e-2b0754426fe4"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"s1", "[", "t", "]"}]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Cot", "[", 
      RowBox[{
       RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
       RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["s1", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], "+", 
    RowBox[{
     RowBox[{"Csc", "[", 
      RowBox[{
       RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
       RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
     RowBox[{"Csc", "[", 
      RowBox[{
       RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
       RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["s2", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["s3", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{3.877697617936573*^9, 3.877697849216456*^9, 
  3.877754197419622*^9, 3.877755629361356*^9, 3.8777558538909817`*^9, 
  3.877870982936182*^9, 3.877956400896553*^9, 3.8779585038612347`*^9, 
  3.877959475873866*^9, 3.877963484939505*^9, 3.877976863530764*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"fd53c853-fb3b-472c-a874-37b29e5a2880"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Theta]2", "'"}], "[", "t", "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"v2", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.87769695096349*^9, 3.8776970196996*^9}, {
   3.877697134130512*^9, 3.877697138591967*^9}, 3.87769719524013*^9, {
   3.877697243908044*^9, 3.877697258990815*^9}, {3.877697343295917*^9, 
   3.8776973460396833`*^9}, {3.87769738560602*^9, 3.877697418682021*^9}, {
   3.877697649408544*^9, 3.877697649523362*^9}, {3.8776977676123247`*^9, 
   3.877697768421294*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"63953529-7f49-41e6-9116-6fc84b150d22"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"Csc", "[", 
    RowBox[{
     RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
     RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
        RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["s2", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["s3", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], 
  RowBox[{"s2", "[", "t", "]"}]]], "Output",
 CellChangeTimes->{3.877697617961179*^9, 3.8776978492773542`*^9, 
  3.877754197476911*^9, 3.877755629418726*^9, 3.877755853948689*^9, 
  3.8778709830034523`*^9, 3.877956400955431*^9, 3.877958503919681*^9, 
  3.8779594759339943`*^9, 3.87796348499807*^9, 3.8779768635964403`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"f18161a0-2208-45e9-94ba-8bd92b0be9c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Theta]3", "'"}], "[", "t", "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"v2", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "3"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.87769695096349*^9, 3.8776970196996*^9}, {
   3.877697134130512*^9, 3.877697138591967*^9}, 3.87769719524013*^9, {
   3.877697243908044*^9, 3.877697264116576*^9}, {3.8776973501843576`*^9, 
   3.8776973520782623`*^9}, {3.8776973840018187`*^9, 3.87769741722265*^9}, {
   3.8776976520513487`*^9, 3.877697652148141*^9}, {3.877697764321958*^9, 
   3.8776977654442167`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"a9862ef9-5bb1-4317-a569-55e8b1794397"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"Csc", "[", 
    RowBox[{
     RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
     RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["s2", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "-", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
        RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["s3", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], 
  RowBox[{"s3", "[", "t", "]"}]]], "Output",
 CellChangeTimes->{3.877697617970072*^9, 3.877697849291976*^9, 
  3.877754197495503*^9, 3.8777556294336033`*^9, 3.8777558539620647`*^9, 
  3.8778709830497017`*^9, 3.877956400967615*^9, 3.87795850393266*^9, 
  3.877959475946156*^9, 3.8779634850279207`*^9, 3.877976863613112*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"3d933e30-5fe2-414e-b2cb-128a019786e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Theta]4", "'"}], "[", "t", "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"v2", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "4"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.87769695096349*^9, 3.8776970196996*^9}, {
   3.877697134130512*^9, 3.877697138591967*^9}, 3.87769719524013*^9, {
   3.877697243908044*^9, 3.877697266084683*^9}, {3.877697353365456*^9, 
   3.8776974155233927`*^9}, {3.877697655054882*^9, 3.877697655153644*^9}, {
   3.877697761196096*^9, 3.877697762003276*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"2df4bf06-0868-479a-ac30-f2e67ab88706"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"Csc", "[", 
    RowBox[{
     RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
     RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox["s1", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "+", 
     RowBox[{
      RowBox[{"Csc", "[", 
       RowBox[{
        RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
        RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}]}], " ", 
         RowBox[{
          SuperscriptBox["s2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["s3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], ")"}]}], 
  
  RowBox[{"2", " ", "L"}]]], "Output",
 CellChangeTimes->{3.877697617991091*^9, 3.8776978493135777`*^9, 
  3.8777541975224752`*^9, 3.877755629460313*^9, 3.87775585398809*^9, 
  3.877870983509197*^9, 3.8779564009883013`*^9, 3.877958503953614*^9, 
  3.877959475970944*^9, 3.8779634850585537`*^9, 3.8779768636657753`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"405f2ee0-91c2-4421-99fe-23ecbf3f525a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Theta]1", "''"}], "[", "t", "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"a2", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.87769695096349*^9, 3.8776970196996*^9}, {
  3.877697134130512*^9, 3.877697138591967*^9}, {3.87769719524013*^9, 
  3.8776972157202263`*^9}, {3.877697356732829*^9, 3.8776974143318996`*^9}, {
  3.877697735158914*^9, 3.877697758830736*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"8527e360-0a3f-41ec-9fff-15128707569d"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   SuperscriptBox[
    RowBox[{"s1", "[", "t", "]"}], "2"]], 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Cot", "[", 
       RowBox[{
        RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
        RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], " ", 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["s1", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
    RowBox[{
     RowBox[{"Csc", "[", 
      RowBox[{
       RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
       RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["s1", "\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], " ", 
           RowBox[{
            SuperscriptBox["s2", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["s3", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"s1", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            SuperscriptBox["\[Theta]1", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           SuperscriptBox["\[Theta]4", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
    "+", 
    RowBox[{
     RowBox[{"s1", "[", "t", "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["s3", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Csc", "[", 
            RowBox[{
             RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]2", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cot", "[", 
               RowBox[{
                RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Theta]1", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Cot", "[", 
               RowBox[{
                RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Theta]3", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Csc", "[", 
            RowBox[{
             RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]4", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["s2", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cot", "[", 
               RowBox[{
                RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Theta]1", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}], "+", 
             RowBox[{
              RowBox[{"Cot", "[", 
               RowBox[{
                RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Theta]2", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"Csc", "[", 
            RowBox[{
             RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]3", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Csc", "[", 
            RowBox[{
             RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Theta]4", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"Cot", "[", 
         RowBox[{
          RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{
         SuperscriptBox["s1", "\[Prime]\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{
          RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
          RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["s2", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "-", 
          RowBox[{
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["s3", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
      ")"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.87769762185157*^9, 3.877698012780137*^9, 
  3.8777543599220333`*^9, 3.8777560166607428`*^9, 3.8778711495012417`*^9, 
  3.877956565331725*^9, 3.8779586706779737`*^9, 3.877959643912428*^9, 
  3.877963649706478*^9, 3.877977032183836*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"d163f19c-cea5-421f-a218-6796977d0159"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Theta]2", "''"}], "[", "t", "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"a2", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.87769695096349*^9, 3.8776970196996*^9}, {
  3.877697134130512*^9, 3.877697138591967*^9}, {3.87769719524013*^9, 
  3.877697223603442*^9}, {3.877697361227518*^9, 3.877697412843441*^9}, {
  3.8776977367956247`*^9, 3.877697755065343*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"c1c2a8cb-67fe-411e-827c-0a3d766bd305"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"s2", "[", "t", "]"}], "2"]}]], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Csc", "[", 
     RowBox[{
      RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
      RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]3", "[", "t", "]"}]}], ")"}]}], "]"}]}], " ", 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["s2", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{
       SuperscriptBox["s2", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["s3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"s2", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            SuperscriptBox["\[Theta]3", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], ")"}]}], 
     "+", 
     RowBox[{"2", " ", 
      RowBox[{"s2", "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["s3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Theta]2", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "-", 
           RowBox[{
            SuperscriptBox["\[Theta]3", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["s2", "\[Prime]\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{
            SuperscriptBox["s3", "\[Prime]\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], 
       ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.8776976219292793`*^9, 3.877698013585294*^9, 
  3.877754360710661*^9, 3.877756017445689*^9, 3.8778711503891773`*^9, 
  3.877956566153099*^9, 3.877958671483941*^9, 3.8779596447274237`*^9, 
  3.877963650507572*^9, 3.877977032994514*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"d8bcd0bc-4575-470e-9b4b-dcca26637832"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Theta]3", "''"}], "[", "t", "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"a2", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "3"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.87769695096349*^9, 3.8776970196996*^9}, {
  3.877697134130512*^9, 3.877697138591967*^9}, {3.87769719524013*^9, 
  3.877697228748014*^9}, {3.8776973646757317`*^9, 3.877697375622367*^9}, {
  3.877697405671719*^9, 3.877697411337132*^9}, {3.877697738987639*^9, 
  3.87769775198545*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"8d50fe55-55c1-426b-8a1b-43842df04c86"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"s3", "[", "t", "]"}], "2"]}]], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Csc", "[", 
      RowBox[{
       RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
       RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]3", "[", "t", "]"}]}], ")"}]}], "]"}]}], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["s3", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{
        SuperscriptBox["s2", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["s3", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
          RowBox[{"s3", "[", "t", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], "-", 
            RowBox[{
             SuperscriptBox["\[Theta]3", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], ")"}]}],
       "+", 
      RowBox[{"2", " ", 
       RowBox[{"s3", "[", "t", "]"}], " ", 
       RowBox[{
        SuperscriptBox["s3", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{
          SuperscriptBox["\[Theta]3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"s3", "[", "t", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
         RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           SuperscriptBox["s2", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["s3", "\[Prime]\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
     ")"}]}]}]}]], "Output",
 CellChangeTimes->{3.877697622020014*^9, 3.8776980141807413`*^9, 
  3.877754361299694*^9, 3.8777560180376883`*^9, 3.8778711510047693`*^9, 
  3.877956566759099*^9, 3.8779586720758944`*^9, 3.87795964533097*^9, 
  3.877963651092085*^9, 3.877977033597311*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"73042fa7-9885-45a8-b813-a756a67353cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Theta]4", "''"}], "[", "t", "]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"a2", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "4"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.87769695096349*^9, 3.8776970196996*^9}, {
  3.877697134130512*^9, 3.877697138591967*^9}, {3.87769719524013*^9, 
  3.8776972299268303`*^9}, {3.877697367985314*^9, 3.877697373350334*^9}, {
  3.8776974069013557`*^9, 3.877697409641007*^9}, {3.877697741973724*^9, 
  3.877697749024514*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"44bbfb36-a2a9-45de-abba-cbbee75219ac"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"2", " ", "L"}]], 
  RowBox[{
   RowBox[{"Csc", "[", 
    RowBox[{
     RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
     RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Cot", "[", 
       RowBox[{
        RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
        RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
      RowBox[{
       SuperscriptBox["s1", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["\[Theta]4", "\[Prime]",
          MultilineFunction->None], "[", "t", "]"}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["s1", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "t", "]"}], "+", 
     RowBox[{
      RowBox[{"Csc", "[", 
       RowBox[{
        RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
        RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           SuperscriptBox["s2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Csc", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Csc", "[", 
             RowBox[{
              RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]3", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cot", "[", 
                 RowBox[{
                  RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                  RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}]}], " ", 
               RowBox[{
                SuperscriptBox["\[Theta]2", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cot", "[", 
                RowBox[{
                 RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
               RowBox[{
                SuperscriptBox["\[Theta]4", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
          ")"}]}], "+", 
        RowBox[{
         RowBox[{
          SuperscriptBox["s3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Csc", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]1", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "-", 
           RowBox[{
            RowBox[{"Csc", "[", 
             RowBox[{
              RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]2", "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Cot", "[", 
                RowBox[{
                 RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
               RowBox[{
                SuperscriptBox["\[Theta]3", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}]}], "+", 
              RowBox[{
               RowBox[{"Cot", "[", 
                RowBox[{
                 RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
               RowBox[{
                SuperscriptBox["\[Theta]4", "\[Prime]",
                 MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
          ")"}]}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]3", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["s2", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]2", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["s3", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.8776976228374767`*^9, 3.877698014202173*^9, 
  3.877754361322791*^9, 3.877756018053603*^9, 3.877871151140354*^9, 
  3.877956566777052*^9, 3.877958672093732*^9, 3.8779596453464603`*^9, 
  3.877963651127159*^9, 3.877977033616275*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"0558daca-bc9d-4d6e-aec8-f9e967c15408"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["d) Determinare le configurazioni singolari.", "Subsection",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994822119827`*^9}, {
   3.875699520476288*^9, 3.8756995514920177`*^9}, {3.875699598027767*^9, 
   3.875699728997818*^9}, 
   3.875785080745098*^9},ExpressionUUID->"0f75a08f-0563-45a2-90c1-\
675d73ebaa3a"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Le", " ", "configurazioni", " ", "singolari", " ", "si", " ", "trovano", 
   " ", "quando", " ", "il", " ", "determinante", " ", "della", " ", 
   "matrice", " ", "J", " ", "\[EGrave]", " ", "pari", " ", "a", " ", 
   "zero"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.877011288632277*^9, 3.877011291983287*^9}, {
   3.877415188324381*^9, 3.87741519034081*^9}, {3.877529986186612*^9, 
   3.8775300484408207`*^9}, {3.877530114198101*^9, 3.877530129481613*^9}, 
   3.877599552978488*^9},
 CellLabel->"In[68]:=",ExpressionUUID->"c4070cb9-9824-4d8a-9fec-a246193004db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{"Det", "[", "J", "]"}], "==", "0"}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.877011288632277*^9, 3.877011291983287*^9}, {
   3.877415188324381*^9, 3.87741519034081*^9}, 3.877529986186612*^9},
 CellLabel->"In[69]:=",ExpressionUUID->"4e217f5e-0874-4159-90d4-7e2b18bd2831"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], "\[Equal]", "0"}]}], ")"}],
   "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], "\[Equal]", "0"}]}], ")"}],
   "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"Cot", "[", 
       RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], "\[Equal]", 
     RowBox[{
      RowBox[{"Cot", "[", 
       RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}]}]}], ")"}], "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], "\[Equal]", "0"}]}], ")"}],
   "||", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], "\[Equal]", "0"}], "&&", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], "\[NotEqual]", "0"}], "&&", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}], "\[Equal]", "0"}]}], ")"}],
   "||", 
  RowBox[{"L", "\[Equal]", "0"}], "||", 
  RowBox[{
   RowBox[{"s1", "[", "t", "]"}], "\[Equal]", "0"}], "||", 
  RowBox[{
   RowBox[{"s2", "[", "t", "]"}], "\[Equal]", "0"}], "||", 
  RowBox[{
   RowBox[{"s3", "[", "t", "]"}], "\[Equal]", "0"}]}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.8779586721421347`*^9, 3.877959645390842*^9, 
  3.877963651189393*^9, 3.877964465773472*^9, 3.8779770336564074`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"16cc81f0-1171-47f0-af53-fa9cd6bcfdbb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Reduce", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Simplify", "@", 
      RowBox[{"Det", "[", "J", "]"}]}], "==", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Theta]1", "[", "t", "]"}], ",", 
      RowBox[{"\[Theta]2", "[", "t", "]"}], ",", 
      RowBox[{"\[Theta]3", "[", "t", "]"}], ",", 
      RowBox[{"\[Theta]4", "[", "t", "]"}]}], "}"}]}], "]"}], "/.", 
  RowBox[{
   TemplateBox[{"1"},
    "C"], "->", "0"}]}]], "Input",
 CellChangeTimes->{{3.877753835788641*^9, 3.877753950642974*^9}, {
  3.877753987519422*^9, 3.877753989113596*^9}, {3.877964524483074*^9, 
  3.8779645514353437`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"678e4818-ad27-4aa0-83e6-856932d60cd1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Theta]4", "[", "t", "]"}], "\[Equal]", 
   RowBox[{"\[Theta]1", "[", "t", "]"}]}], "||", 
  RowBox[{
   RowBox[{"\[Theta]4", "[", "t", "]"}], "\[Equal]", 
   RowBox[{"\[Pi]", "+", 
    RowBox[{"\[Theta]1", "[", "t", "]"}]}]}], "||", 
  RowBox[{
   RowBox[{"\[Theta]3", "[", "t", "]"}], "\[Equal]", 
   RowBox[{"\[Theta]2", "[", "t", "]"}]}], "||", 
  RowBox[{
   RowBox[{"\[Theta]3", "[", "t", "]"}], "\[Equal]", 
   RowBox[{"\[Pi]", "+", 
    RowBox[{"\[Theta]2", "[", "t", "]"}]}]}], "||", 
  RowBox[{"L", "\[Equal]", "0"}], "||", 
  RowBox[{
   RowBox[{"s1", "[", "t", "]"}], "\[Equal]", "0"}], "||", 
  RowBox[{
   RowBox[{"s2", "[", "t", "]"}], "\[Equal]", "0"}], "||", 
  RowBox[{
   RowBox[{"s3", "[", "t", "]"}], "\[Equal]", "0"}]}]], "Output",
 CellChangeTimes->{{3.8777538786191387`*^9, 3.87775392432063*^9}, 
   3.87775395646249*^9, 3.877753989708699*^9, 3.877754361443245*^9, 
   3.877756018159173*^9, 3.877871151428769*^9, 3.877956566893696*^9, 
   3.8779586722131157`*^9, 3.877959645457985*^9, 3.877963651279821*^9, {
   3.877964525520471*^9, 3.877964555838114*^9}, 3.877977033733714*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"166a9906-129b-4482-9b4c-2d042b3a77e3"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "e) Scrivere una procedura per l\[CloseCurlyQuote]analisi di posizione del \
manipolatore, noti  ",
 StyleBox["x",
  FontSlant->"Italic"],
 ", ",
 StyleBox["y",
  FontSlant->"Italic"],
 ", \[Theta] (cinematica inversa), adattando le procedure studiate. \
Determinare le corse dei cilindri s1, s2, s3 dati  ",
 StyleBox["x",
  FontSlant->"Italic"],
 ", ",
 StyleBox["y",
  FontSlant->"Italic"],
 ", \[Theta] .  Realizzare una animazione interattiva del meccanismo per la \
cinematica inversa."
}], "Subsection",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994822119827`*^9}, {
   3.875699520476288*^9, 3.8756995514920177`*^9}, {3.875699598027767*^9, 
   3.8756997815642853`*^9}, {3.875699956091813*^9, 3.8757000409644747`*^9}, 
   3.8757850832347393`*^9, 3.876921027698361*^9, 3.876921072314333*^9, 
   3.876989638922803*^9, 
   3.877005095209037*^9},ExpressionUUID->"563543e7-b0b3-44ac-8410-\
7104eb21c5f0"],

Cell[CellGroupData[{

Cell["Equazioni del punto E", "Subsubsection",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994822119827`*^9}, {
   3.875699520476288*^9, 3.8756995514920177`*^9}, {3.875699598027767*^9, 
   3.8756997815642853`*^9}, {3.875699956091813*^9, 3.8757000409644747`*^9}, 
   3.8757850832347393`*^9, 3.876921027698361*^9, 3.876921072314333*^9, 
   3.876989638922803*^9, {3.877005097134221*^9, 
   3.877005134144814*^9}},ExpressionUUID->"2e3e7942-ae26-4940-953a-\
e7a8470eaa2d"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"xE", ",", "yE"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"E1x", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"s3", "[", "t", "]"}], "*", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{"L", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{"L", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"\[Theta]4", "[", "t", "]"}], "+", 
        RowBox[{
         RowBox[{"3", "/", "2"}], " ", "\[Pi]"}]}], "]"}]}], "-", 
     RowBox[{"xE", "[", "t", "]"}]}], "==", "0"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"E1y", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"s3", "[", "t", "]"}], "*", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{"L", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{"L", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"\[Theta]4", "[", "t", "]"}], "+", 
        RowBox[{
         RowBox[{"3", "/", "2"}], " ", "\[Pi]"}]}], "]"}]}], "-", 
     RowBox[{"yE", "[", "t", "]"}]}], "==", "0"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"E2x", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"6", "L"}], "+", 
     RowBox[{
      RowBox[{"s2", "[", "t", "]"}], "*", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{"L", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{"L", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"\[Theta]4", "[", "t", "]"}], "+", 
        RowBox[{
         RowBox[{"3", "/", "2"}], " ", "\[Pi]"}]}], "]"}]}], " ", "-", 
     RowBox[{"xE", "[", "t", "]"}]}], "==", "0"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"E2y", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"s2", "[", "t", "]"}], "*", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{"L", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{"L", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"\[Theta]4", "[", "t", "]"}], "+", 
        RowBox[{
         RowBox[{"3", "/", "2"}], " ", "\[Pi]"}]}], "]"}]}], "-", 
     RowBox[{"yE", "[", "t", "]"}]}], "==", "0"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"E3x", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"8", "L"}], "+", 
     RowBox[{
      RowBox[{"s1", "[", "t", "]"}], "*", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
     RowBox[{"L", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{"L", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"\[Theta]4", "[", "t", "]"}], "+", 
        RowBox[{
         RowBox[{"3", "/", "2"}], " ", "\[Pi]"}]}], "]"}]}], "-", 
     RowBox[{"xE", "[", "t", "]"}]}], "==", "0"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"E3y", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"s1", "[", "t", "]"}], "*", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
     RowBox[{"L", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "+", 
     RowBox[{"L", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"\[Theta]4", "[", "t", "]"}], "+", 
        RowBox[{
         RowBox[{"3", "/", "2"}], " ", "\[Pi]"}]}], "]"}]}], "-", 
     RowBox[{"yE", "[", "t", "]"}]}], "==", "0"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994822119827`*^9}, {
   3.875699520476288*^9, 3.8756995514920177`*^9}, {3.875699598027767*^9, 
   3.8756997815642853`*^9}, {3.875699956091813*^9, 3.8757000409644747`*^9}, 
   3.8757850832347393`*^9, 3.876921027698361*^9, 3.876921072314333*^9, 
   3.876989638922803*^9, {3.877005097134221*^9, 3.877005148914731*^9}, {
   3.877415974797491*^9, 3.877415975434033*^9}, {3.8774161304909573`*^9, 
   3.877416131428142*^9}, {3.877417021568884*^9, 3.877417025042873*^9}, {
   3.8774171487716618`*^9, 3.877417169765518*^9}, {3.877698288901277*^9, 
   3.877698328722027*^9}, {3.8777540780175877`*^9, 3.877754120702716*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"5dbf43ca-fa25-4941-8420-d47ce89a7f0a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"{", 
   RowBox[{
   "E1x", ",", "E1y", ",", "E2x", ",", "E2y", ",", "E3x", ",", "E3y"}], "}"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994822119827`*^9}, {
   3.875699520476288*^9, 3.8756995514920177`*^9}, {3.875699598027767*^9, 
   3.8756997815642853`*^9}, {3.875699956091813*^9, 3.8757000409644747`*^9}, 
   3.8757850832347393`*^9, 3.876921027698361*^9, 3.876921072314333*^9, 
   3.876989638922803*^9, {3.877005097134221*^9, 3.877005148914731*^9}, {
   3.877415974797491*^9, 3.877415975434033*^9}, {3.8774161304909573`*^9, 
   3.877416131428142*^9}, {3.877417021568884*^9, 3.8774170677787247`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"a1125ed7-41e9-4d45-adf1-880279194819"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"L", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"s3", "[", "t", "]"}]}], "+", 
        RowBox[{"L", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{"xE", "[", "t", "]"}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "L"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"s3", "[", "t", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{"L", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{"yE", "[", "t", "]"}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"6", " ", "L"}], "+", 
        RowBox[{"L", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"s2", "[", "t", "]"}]}], "+", 
        RowBox[{"L", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{"xE", "[", "t", "]"}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "L"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"s2", "[", "t", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{"L", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{"yE", "[", "t", "]"}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"8", " ", "L"}], "-", 
        RowBox[{"L", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"s1", "[", "t", "]"}]}], "+", 
        RowBox[{"L", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{"xE", "[", "t", "]"}]}], "\[Equal]", "0"}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "L"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "+", 
        RowBox[{
         RowBox[{"s1", "[", "t", "]"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{"L", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "-", 
        RowBox[{"yE", "[", "t", "]"}]}], "\[Equal]", "0"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8777543614485083`*^9, 3.877756018173102*^9, 
  3.877871151501285*^9, 3.877956566908461*^9, 3.87795867222861*^9, 
  3.877959645472555*^9, 3.877963651313773*^9, 3.877977033749703*^9},
 CellLabel->
  "Out[78]//TableForm=",ExpressionUUID->"4b6be3ad-abf8-42a4-a402-\
c4fa94998c2e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"F1", "=", 
   RowBox[{"First", "[", "E1x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F2", "=", 
   RowBox[{"First", "[", "E1y", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F3", "=", 
   RowBox[{"First", "[", "E2x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F4", "=", 
   RowBox[{"First", "[", "E2y", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F5", "=", 
   RowBox[{"First", "[", "E3x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"F6", "=", 
   RowBox[{"First", "[", "E3y", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.877698190251136*^9, 3.877698248068532*^9}},
 CellLabel->"In[79]:=",ExpressionUUID->"b7979f98-bd46-49ca-b0f5-d990cb6168bd"]
}, Closed]],

Cell[CellGroupData[{

Cell["Animazione interattiva", "Subsubsection",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994822119827`*^9}, {
   3.875699520476288*^9, 3.8756995514920177`*^9}, {3.875699598027767*^9, 
   3.8756997815642853`*^9}, {3.875699956091813*^9, 3.8757000409644747`*^9}, 
   3.8757850832347393`*^9, 3.876921027698361*^9, 3.876921072314333*^9, {
   3.876989643236959*^9, 3.876989653129086*^9}, 
   3.877005205865748*^9},ExpressionUUID->"c799b99f-6a46-4d92-ba29-\
7586927770a2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Manipolatoreinverso", "[", 
   RowBox[{
   "xE_", ",", "yE_", ",", "L_", ",", "xB_", ",", "yB_", ",", "\[Theta]4_"}], 
   "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "s1", ",", "s2", ",", "s3", ",", "\[Theta]3", ",", "\[Theta]1", ",", 
      "\[Theta]2", ",", "OABDC2", ",", "xA", ",", "yA", ",", "xC", ",", "yC", 
      ",", "xD", ",", "yD", ",", "xF", ",", "yF"}], "}"}], ",", " ", 
    RowBox[{"(*", " ", "argomenti", " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Definisco", " ", "x", " ", "e", " ", "y", " ", "del", " ", "punto", " ",
       "A"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xA", "=", 
      RowBox[{"6", "L"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"yA", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Definisco", " ", "x", " ", "e", " ", "y", " ", "del", " ", "punto", 
       " ", "F"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"xF", " ", "=", " ", 
      RowBox[{"xE", "-", 
       RowBox[{"L", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]4", "+", 
          RowBox[{
           RowBox[{"3", "/", "2"}], " ", "\[Pi]"}]}], "]"}]}]}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"yF", " ", "=", " ", 
      RowBox[{"yE", " ", "-", 
       RowBox[{"L", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]4", "+", 
          RowBox[{
           RowBox[{"3", "/", "2"}], " ", "\[Pi]"}]}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Definisco", " ", "x", " ", "e", " ", "y", " ", "del", " ", "punto", 
       " ", "C"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"xC", " ", "=", " ", 
      RowBox[{"xE", "-", 
       RowBox[{"L", " ", 
        RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
       RowBox[{"L", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]4", "+", 
          RowBox[{
           RowBox[{"3", "/", "2"}], " ", "\[Pi]"}]}], "]"}]}]}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"yC", " ", "=", " ", 
      RowBox[{"yE", "-", 
       RowBox[{"L", " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
       RowBox[{"L", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]4", "+", 
          RowBox[{
           RowBox[{"3", "/", "2"}], " ", "\[Pi]"}]}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Definisco", " ", "x", " ", "e", " ", "y", " ", "del", " ", "punto", 
       " ", "D"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"xD", " ", "=", " ", 
      RowBox[{"xE", "+", 
       RowBox[{"L", " ", 
        RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
       RowBox[{"L", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]4", "+", 
          RowBox[{
           RowBox[{"3", "/", "2"}], " ", "\[Pi]"}]}], "]"}]}]}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"yD", " ", "=", " ", 
      RowBox[{"yE", " ", "+", 
       RowBox[{"L", " ", 
        RowBox[{"Sin", "[", "\[Theta]4", "]"}]}], "-", 
       RowBox[{"L", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]4", "+", 
          RowBox[{
           RowBox[{"3", "/", "2"}], " ", "\[Pi]"}]}], "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Calcolo", " ", "\[Theta]2", " ", "con", " ", "ArcTan", " ", "con", " ",
        "2", " ", "argomenti"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Theta]2", "=", 
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"xC", "-", 
         RowBox[{"6", "L"}]}], ",", "yC"}], "]"}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"calcola", " ", "\[Theta]1"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Theta]1", " ", "=", 
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"xB", "-", "xD"}], ",", 
        RowBox[{"yB", "-", "yD"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"calcola", " ", "\[Theta]3"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Theta]3", " ", "=", 
      RowBox[{"ArcTan", "[", 
       RowBox[{
        RowBox[{"0", "-", "xC"}], ",", 
        RowBox[{"0", "-", "yC"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Calcola", " ", "s1"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"s1", "=", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"xD", "-", "xB"}], ")"}], "^", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"yD", "-", "yB"}], ")"}], "^", "2"}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Calcola", " ", "s2"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"s2", "=", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"xC", "-", "xA"}], ")"}], "^", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"yC", "-", "yA"}], ")"}], "^", "2"}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Calcola", " ", "s3"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"s3", "=", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"xC", "-", "0"}], ")"}], "^", "2"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"yC", "-", "0"}], ")"}], "^", "2"}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "restituisce", " ", "il", " ", "manipolatore", " ", "e", " ", "i", " ", 
       "cedenti"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"OABDC2", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"xC", ",", "yC"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xF", ",", "yF"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"xE", ",", "yE"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"xC", ",", "yC"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"xD", ",", "yD"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"8", "L"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"xD", ",", "yD"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"6", "L"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"xC", ",", "yC"}], "}"}]}], "}"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "s1", ",", "s2", ",", "s3", ",", "\[Theta]3", ",", "\[Theta]2", ",", 
       "\[Theta]1", ",", "OABDC2"}], "}"}]}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Definisco", " ", "gli", " ", 
      RowBox[{"output", ":", " ", "s1"}]}], ",", "s2", ",", "s3", ",", 
     "\[Theta]3", ",", "\[Theta]2", ",", 
     RowBox[{"\[Theta]1", " ", "e", " ", 
      RowBox[{"l", "'"}], "insieme", " ", "dei", " ", "punti", " ", "per", 
      " ", "fare", " ", "il", " ", "grafico"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", "]"}]}], "\n", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"L", "=", "0.1"}], ",", "s1", ",", "s2", ",", "s3", ",", 
       "\[Theta]3", ",", "\[Theta]1", ",", "\[Theta]2", ",", "OABDC2"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "s1", ",", "s2", ",", "s3", ",", "\[Theta]3", ",", "\[Theta]1", ",", 
         "\[Theta]2", ",", "OABDC2"}], "}"}], "=", 
       RowBox[{"Manipolatoreinverso", "[", 
        RowBox[{"xE", ",", "yE", ",", "L", ",", 
         RowBox[{"8", "L"}], ",", "0", ",", "\[Theta]4"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ListPlot", "[", 
       RowBox[{"OABDC2", ",", 
        RowBox[{"Joined", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotMarkers", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<\[FilledCircle]\>\"", ",", "10"}], "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"xE", ",", 
     RowBox[{
      RowBox[{"-", "10"}], "L"}], ",", 
     RowBox[{"10", "L"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"yE", ",", 
     RowBox[{
      RowBox[{"-", "10"}], "L"}], ",", 
     RowBox[{"10", "L"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]4", ",", "0", ",", 
     RowBox[{"4", " ", "\[Pi]"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.877005179087016*^9, 3.877005179090831*^9}, {
  3.877754571337888*^9, 3.877754682406506*^9}, {3.877754730360847*^9, 
  3.877754822052569*^9}, {3.877754857142418*^9, 3.877754858952196*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"37d88c7f-f33f-435f-9757-b184e97c42d6"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`xE$$ = (-10) $CellContext`L, \
$CellContext`yE$$ = (-10) $CellContext`L, $CellContext`\[Theta]4$$ = 0, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`xE$$], (-10) $CellContext`L, 10 $CellContext`L}, {
      Hold[$CellContext`yE$$], (-10) $CellContext`L, 10 $CellContext`L}, {
      Hold[$CellContext`\[Theta]4$$], 0, 4 Pi}}, Typeset`size$$ = {
    540., {262., 269.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`xE$$ = (-10) $CellContext`L, \
$CellContext`yE$$ = (-10) $CellContext`L, $CellContext`\[Theta]4$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Block[{$CellContext`L = 
         0.1, $CellContext`s1, $CellContext`s2, $CellContext`s3, \
$CellContext`\[Theta]3, $CellContext`\[Theta]1, $CellContext`\[Theta]2, \
$CellContext`OABDC2}, {$CellContext`s1, $CellContext`s2, $CellContext`s3, \
$CellContext`\[Theta]3, $CellContext`\[Theta]1, $CellContext`\[Theta]2, \
$CellContext`OABDC2} = $CellContext`Manipolatoreinverso[$CellContext`xE$$, \
$CellContext`yE$$, $CellContext`L, 8 $CellContext`L, 
           0, $CellContext`\[Theta]4$$]; 
        ListPlot[$CellContext`OABDC2, Joined -> True, 
          PlotMarkers -> {"\[FilledCircle]", 10}, 
          PlotRange -> {{-1.5, 1.5}, {-1.5, 1.5}}, AspectRatio -> 1]], 
      "Specifications" :> {{$CellContext`xE$$, (-10) $CellContext`L, 
         10 $CellContext`L}, {$CellContext`yE$$, (-10) $CellContext`L, 
         10 $CellContext`L}, {$CellContext`\[Theta]4$$, 0, 4 Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{606., {371., 379.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->CompressedData["
1:eJwVzWkow3EAh/GxctX+qxVDjjZRS5m82NYIk+MFaSmLEiXUJo2pOSbKUXLM
kR0511ZIaa1IeUNyzFzZCoklFl6sTSa58/29ePq8fDi1yrL6IBqNJkQzCR7/
8b1XEr7D459AkZouJgZkpjri4pU/7hTW/zWJnXBAI0v+gV2xnC/Og1cSzW9k
cCHTNeEgdpdHudtgnlVT0w7dymJDB+x9tKXp4B3F8hEvuU0FeqhVW9hGaIwZ
0S3AYN811wTfdmdXiTc958lmWGIc9x1Ac1ji0yEULkaGOODWq0x6BFM8+udz
yOobpZzkx6KmiPk2qdwFL7IOBonLncOUH9qNylsiJ9tSGoC6/TP+B3wfqp5k
eLwS58p+BhOq2LYiYpWpQRENp6Wpm3FwQ+CcjYf6NsEa8a1FpU2A23J3RCJM
6rNnEnPpERViaKDSt4g5Y/JPYnNh6y9RzS7UZsLnlMBeK+Qpbjvn4PpXaO88
7F+1fhMrGxUvJvi0JOpYgv/efPuJ
  "],
 CellLabel->"Out[86]=",ExpressionUUID->"5b458961-1980-43a7-b8aa-ea19e48229e6"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Metodo 2 Calcolare i rapporti di velocit\[AGrave]", "Subsubsection",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.877005358994216*^9, 3.877005689426464*^9, 3.877005776303013*^9, 
   3.877006117184865*^9, 3.8770075916502943`*^9, 3.877016019606883*^9, 
   3.877179345189851*^9, 3.877179499479678*^9, 3.877181012713045*^9, 
   3.8773552488563557`*^9, 3.877356284023888*^9, 3.877358778513397*^9, 
   3.8774152857828703`*^9, 3.877416816809512*^9, 3.8774175155787497`*^9, 
   3.877421245258623*^9, 3.877436588534503*^9, 3.8774377189895973`*^9, 
   3.877438829069792*^9, 3.87744183863466*^9, 3.877519220663052*^9, 
   3.8775232571200733`*^9, 3.877523504826627*^9, 3.877526146875677*^9, 
   3.8775396528248863`*^9, 3.877539956536674*^9, 3.877541024526182*^9, 
   3.877542730631435*^9, 3.87754298231327*^9, 3.877599348491356*^9, 
   3.87760100364058*^9, 3.877608053238964*^9, 3.877618046647687*^9, 
   3.877661843109836*^9, 3.8776651743562183`*^9, 3.877665341677112*^9, 
   3.877684051386631*^9, 3.87769288153615*^9, 3.8776946947118597`*^9, 
   3.877694881864097*^9, 3.877696627724679*^9, 3.8776976230967817`*^9, {
   3.877697945246634*^9, 3.877697966913265*^9}, 
   3.877697999386364*^9},ExpressionUUID->"80c8a529-4223-4e74-ae6b-\
60f92b98f29e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"JI", "=", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"F1", ",", "F2", ",", "F3", ",", "F4", ",", "F5", ",", "F6"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Theta]1", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]3", "[", "t", "]"}], ",", 
        RowBox[{"s1", "[", "t", "]"}], ",", 
        RowBox[{"s2", "[", "t", "]"}], ",", 
        RowBox[{"s3", "[", "t", "]"}]}], "}"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "JI", "]"}]}], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.877005358994216*^9, 3.877005689426464*^9, 3.877005776303013*^9, 
   3.877006117184865*^9, 3.8770075916502943`*^9, 3.877016019606883*^9, 
   3.877179345189851*^9, 3.877179499479678*^9, 3.877181012713045*^9, 
   3.8773552488563557`*^9, 3.877356284023888*^9, 3.877358778513397*^9, 
   3.8774152857828703`*^9, 3.877416816809512*^9, 3.8774175155787497`*^9, 
   3.877421245258623*^9, 3.877436588534503*^9, 3.8774377189895973`*^9, 
   3.877438829069792*^9, 3.87744183863466*^9, 3.877519220663052*^9, 
   3.8775232571200733`*^9, 3.877523504826627*^9, 3.877526146875677*^9, 
   3.8775396528248863`*^9, 3.877539956536674*^9, 3.877541024526182*^9, 
   3.877542730631435*^9, 3.87754298231327*^9, 3.877599348491356*^9, 
   3.87760100364058*^9, 3.877608053238964*^9, 3.877618046647687*^9, 
   3.877661843109836*^9, 3.8776651743562183`*^9, 3.877665341677112*^9, 
   3.877684051386631*^9, 3.87769288153615*^9, 3.8776946947118597`*^9, 
   3.877694881864097*^9, 3.877696627724679*^9, 3.8776976230967817`*^9, {
   3.877697945246634*^9, 3.877697946054823*^9}, {3.877698033255787*^9, 
   3.877698039673438*^9}, {3.8776980715609293`*^9, 3.8776981052326727`*^9}, {
   3.877698137290296*^9, 3.8776981536251297`*^9}, {3.8777006581002283`*^9, 
   3.877700664348858*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"c0e69aed-7316-4c05-b8e9-5402c6d3472d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"s3", "[", "t", "]"}]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], "0", "0", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]},
     {"0", "0", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"s3", "[", "t", "]"}]}], "0", "0", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]},
     {"0", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"s2", "[", "t", "]"}]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], "0", "0", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], "0"},
     {"0", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"s2", "[", "t", "]"}]}], "0", "0", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], "0"},
     {
      RowBox[{
       RowBox[{"-", 
        RowBox[{"s1", "[", "t", "]"}]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], "0", "0", 
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], "0", "0"},
     {
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{"s1", "[", "t", "]"}]}], "0", "0", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8776982668863573`*^9, 3.87769834318077*^9, 
  3.877700903318015*^9, 3.877753536359708*^9, 3.8777543615595512`*^9, 
  3.8777560182380877`*^9, 3.877871151621069*^9, 3.87795656697645*^9, 
  3.877958672252433*^9, 3.877959645493238*^9, 3.877963651329866*^9, 
  3.8779770338183403`*^9},
 CellLabel->
  "Out[88]//MatrixForm=",ExpressionUUID->"eda1f4ca-e3b4-4aaa-ba64-\
2e34df94dd6f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BI", " ", "=", "  ", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"F1", ",", "F2", ",", "F3", ",", "F4", ",", "F5", ",", "F6"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"xE", "[", "t", "]"}], ",", 
        RowBox[{"yE", "[", "t", "]"}], ",", 
        RowBox[{"\[Theta]4", "[", "t", "]"}]}], "}"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "BI", "]"}]}], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.877005358994216*^9, 3.877005689426464*^9, 3.877005776303013*^9, 
   3.877006117184865*^9, 3.8770075916502943`*^9, 3.877016019606883*^9, 
   3.877179345189851*^9, 3.877179499479678*^9, 3.877181012713045*^9, 
   3.8773552488563557`*^9, 3.877356284023888*^9, 3.877358778513397*^9, 
   3.8774152857828703`*^9, 3.877416816809512*^9, 3.8774175155787497`*^9, 
   3.877421245258623*^9, 3.877436588534503*^9, 3.8774377189895973`*^9, 
   3.877438829069792*^9, 3.87744183863466*^9, 3.877519220663052*^9, 
   3.8775232571200733`*^9, 3.877523504826627*^9, 3.877526146875677*^9, 
   3.8775396528248863`*^9, 3.877539956536674*^9, 3.877541024526182*^9, 
   3.877542730631435*^9, 3.87754298231327*^9, 3.877599348491356*^9, 
   3.87760100364058*^9, 3.877608053238964*^9, 3.877618046647687*^9, 
   3.877661843109836*^9, 3.8776651743562183`*^9, 3.877665341677112*^9, 
   3.877684051386631*^9, 3.87769288153615*^9, 3.8776946947118597`*^9, 
   3.877694881864097*^9, 3.877696627724679*^9, 3.8776976230967817`*^9, {
   3.877697945246634*^9, 3.877697946054823*^9}, {3.877698033255787*^9, 
   3.8776980738543043`*^9}, {3.8776981111009693`*^9, 3.877698122851061*^9}, 
   3.8776983726914*^9, {3.8777006604609833`*^9, 3.877700666224725*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"8b67b12d-7e4f-4c85-8fc2-89ae5d1cbfc5"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}], "0", 
      RowBox[{
       RowBox[{"L", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"L", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}]}]},
     {"0", 
      RowBox[{"-", "1"}], 
      RowBox[{
       RowBox[{"L", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"L", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}]}]},
     {
      RowBox[{"-", "1"}], "0", 
      RowBox[{
       RowBox[{"L", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "-", 
       RowBox[{"L", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}]}]},
     {"0", 
      RowBox[{"-", "1"}], 
      RowBox[{
       RowBox[{"L", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"L", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}]}]},
     {
      RowBox[{"-", "1"}], "0", 
      RowBox[{
       RowBox[{"L", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"L", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}]}]},
     {"0", 
      RowBox[{"-", "1"}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "L"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}], "+", 
       RowBox[{"L", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]4", "[", "t", "]"}], "]"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.877698271511079*^9, {3.877698345795632*^9, 3.877698374143221*^9}, 
   3.8777009063888073`*^9, 3.877753536424571*^9, 3.877754361562963*^9, 
   3.8777560182566853`*^9, 3.877871151723033*^9, 3.877956566979982*^9, 
   3.877958672264883*^9, 3.8779596455045652`*^9, 3.8779636513327208`*^9, 
   3.877977033839272*^9},
 CellLabel->
  "Out[90]//MatrixForm=",ExpressionUUID->"e75280f1-b49f-417e-a75b-\
081f1ab2c7ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"JIinv", "=", 
   RowBox[{"-", 
    RowBox[{"Inverse", "[", "JI", "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"\[Tau]I", " ", "=", " ", 
   RowBox[{"JIinv", ".", "BI"}]}], ";"}], "\n", 
 RowBox[{"Simplify", "@", 
  RowBox[{"MatrixForm", "[", "\[Tau]I", "]"}]}]}], "Input",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.877005358994216*^9, 3.877005689426464*^9, 3.877005776303013*^9, 
   3.877006117184865*^9, 3.8770075916502943`*^9, 3.877016019606883*^9, 
   3.877179345189851*^9, 3.877179499479678*^9, 3.877181012713045*^9, 
   3.8773552488563557`*^9, 3.877356284023888*^9, 3.877358778513397*^9, 
   3.8774152857828703`*^9, 3.877416816809512*^9, 3.8774175155787497`*^9, 
   3.877421245258623*^9, 3.877436588534503*^9, 3.8774377189895973`*^9, 
   3.877438829069792*^9, 3.87744183863466*^9, 3.877519220663052*^9, 
   3.8775232571200733`*^9, 3.877523504826627*^9, 3.877526146875677*^9, 
   3.8775396528248863`*^9, 3.877539956536674*^9, 3.877541024526182*^9, 
   3.877542730631435*^9, 3.87754298231327*^9, 3.877599348491356*^9, 
   3.87760100364058*^9, 3.877608053238964*^9, 3.877618046647687*^9, 
   3.877661843109836*^9, 3.8776651743562183`*^9, 3.877665341677112*^9, 
   3.877684051386631*^9, 3.87769288153615*^9, 3.8776946947118597`*^9, 
   3.877694881864097*^9, 3.877696627724679*^9, 3.8776976230967817`*^9, {
   3.877697945246634*^9, 3.877697946054823*^9}, {3.877698033255787*^9, 
   3.87769808484599*^9}, {3.8777006727688093`*^9, 3.8777006844317017`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"9ba9c4fe-3441-47d7-b5bc-1e26188c076f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], 
        RowBox[{"s1", "[", "t", "]"}]]}], 
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], 
       RowBox[{"s1", "[", "t", "]"}]], 
      FractionBox[
       RowBox[{"L", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], ")"}]}], 
       RowBox[{"s1", "[", "t", "]"}]]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], 
        RowBox[{"s2", "[", "t", "]"}]]}], 
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], 
       RowBox[{"s2", "[", "t", "]"}]], 
      FractionBox[
       RowBox[{"L", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], ")"}]}], 
       RowBox[{"s2", "[", "t", "]"}]]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], 
        RowBox[{"s3", "[", "t", "]"}]]}], 
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], 
       RowBox[{"s3", "[", "t", "]"}]], 
      FractionBox[
       RowBox[{"L", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], "+", 
          RowBox[{"Sin", "[", 
           RowBox[{
            RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], ")"}]}], 
       RowBox[{"s3", "[", "t", "]"}]]},
     {
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], 
      RowBox[{"L", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
            RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], ")"}]}]},
     {
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], 
      RowBox[{
       RowBox[{"-", "L"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], ")"}]}]},
     {
      RowBox[{"Cos", "[", 
       RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], 
      RowBox[{
       RowBox[{"-", "L"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], ")"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8777543616574802`*^9, 3.8777560183533287`*^9, 
  3.877871151860392*^9, 3.877956567077894*^9, 3.8779586723628063`*^9, 
  3.877959645603486*^9, 3.877963651430957*^9, 3.8779770339361467`*^9},
 CellLabel->
  "Out[93]//MatrixForm=",ExpressionUUID->"8493b3ab-a69c-4163-9fe9-\
3c1629a971e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Calcolo", " ", "le", " ", "velocit\[AGrave]", " ", "dei", " ", "cedenti", 
    " ", "moltiplicando", " ", "\[Tau]I", " ", "per", " ", "le", " ", 
    "velocit\[AGrave]", " ", "dei", " ", "moventi"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"vI", "=", 
   RowBox[{"Simplify", "@", 
    RowBox[{"MatrixForm", "[", 
     RowBox[{"\[Tau]I", ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"xE", "'"}], "[", "t", "]"}], ",", 
        RowBox[{
         RowBox[{"yE", "'"}], "[", "t", "]"}], ",", 
        RowBox[{
         RowBox[{"\[Theta]4", "'"}], "[", "t", "]"}]}], "}"}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.877698494348322*^9, 3.877698530732945*^9}, {
  3.87770068699748*^9, 3.877700687842338*^9}, {3.877701018576462*^9, 
  3.877701072076502*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"ecf012da-501f-495a-9eda-41d04a06fed0"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], " ", 
          RowBox[{
           SuperscriptBox["xE", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["yE", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{"L", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], "+", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["\[Theta]4", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], 
        RowBox[{"s1", "[", "t", "]"}]]},
      {
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], " ", 
          RowBox[{
           SuperscriptBox["xE", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["yE", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{"L", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], "+", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["\[Theta]4", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], 
        RowBox[{"s2", "[", "t", "]"}]]},
      {
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", 
            RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], " ", 
          RowBox[{
           SuperscriptBox["xE", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["yE", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{"L", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], "+", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], ")"}], " ", 
          RowBox[{
           SuperscriptBox["\[Theta]4", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], 
        RowBox[{"s3", "[", "t", "]"}]]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xE", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yE", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"L", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
              RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], "+", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]4", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xE", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yE", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"L", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], "+", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]4", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xE", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yE", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"L", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], "+", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]4", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.87770093108538*^9, 3.8777543618009377`*^9, 
  3.877756018496314*^9, 3.877871152014799*^9, 3.8779565672237864`*^9, 
  3.877958672509016*^9, 3.8779596457513437`*^9, 3.8779636515762653`*^9, 
  3.877977034082055*^9},
 CellLabel->
  "Out[94]//MatrixForm=",ExpressionUUID->"48b1cee6-f67d-472a-a79f-\
c35cffe36a1b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Calcolo accelerazioni dei cedenti", "Subsubsection",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994822119827`*^9}, {
   3.875699520476288*^9, 3.8756995514920177`*^9}, {3.875699598027767*^9, 
   3.8756997815642853`*^9}, {3.875699956091813*^9, 3.8757000409644747`*^9}, 
   3.8757850832347393`*^9, {3.876921031741383*^9, 3.876921041144326*^9}, 
   3.876921103444542*^9, {3.877005419344627*^9, 3.877005421670082*^9}, 
   3.877698555442952*^9, 
   3.8777008432458153`*^9},ExpressionUUID->"86f5f509-f238-442b-b3ce-\
fb48aab38b36"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Derivo", " ", "la", " ", "matrice", " ", "\[Tau]I", " ", "che", " ", 
    "contiene", " ", "i", " ", "rapporti", " ", "di", " ", 
    "velocit\[AGrave]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Tau]I1", "=", "  ", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       SubscriptBox["\[PartialD]", "t"], " ", "\[Tau]I"}], "]"}]}], ";"}], 
   "\n", 
   RowBox[{"Simplify", "@", 
    RowBox[{"MatrixForm", "[", "\[Tau]I1", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994822119827`*^9}, {
   3.875699520476288*^9, 3.8756995514920177`*^9}, {3.875699598027767*^9, 
   3.8756997815642853`*^9}, {3.875699956091813*^9, 3.8757000409644747`*^9}, 
   3.8757850832347393`*^9, {3.876921031741383*^9, 3.876921041144326*^9}, 
   3.876921103444542*^9, {3.877005419344627*^9, 3.877005421670082*^9}, {
   3.8776985777254467`*^9, 3.8776986136030207`*^9}, 3.87770064661996*^9, {
   3.877700691481388*^9, 3.877700699916491*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"d3ae2922-9836-47a9-b83c-eaf0c215f79b"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["s1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"s1", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], 
       SuperscriptBox[
        RowBox[{"s1", "[", "t", "]"}], "2"]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["s1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"s1", "[", "t", "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Theta]1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], 
        SuperscriptBox[
         RowBox[{"s1", "[", "t", "]"}], "2"]]}], 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "L"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], "+", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], ")"}], " ", 
         RowBox[{
          SuperscriptBox["s1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"L", " ", 
         RowBox[{"s1", "[", "t", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], "-", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
             RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[Theta]1", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}], "-", 
           RowBox[{
            SuperscriptBox["\[Theta]4", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], 
       SuperscriptBox[
        RowBox[{"s1", "[", "t", "]"}], "2"]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["s2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"s2", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], 
       SuperscriptBox[
        RowBox[{"s2", "[", "t", "]"}], "2"]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["s2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"s2", "[", "t", "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Theta]2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], 
        SuperscriptBox[
         RowBox[{"s2", "[", "t", "]"}], "2"]]}], 
      FractionBox[
       RowBox[{"L", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], "-", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["s2", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"s2", "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], "+", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[Theta]2", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "-", 
             RowBox[{
              SuperscriptBox["\[Theta]4", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], 
         ")"}]}], 
       SuperscriptBox[
        RowBox[{"s2", "[", "t", "]"}], "2"]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["s3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
         RowBox[{"s3", "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}], 
       SuperscriptBox[
        RowBox[{"s3", "[", "t", "]"}], "2"]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["s3", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"s3", "[", "t", "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Theta]3", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}]}]}], 
        SuperscriptBox[
         RowBox[{"s3", "[", "t", "]"}], "2"]]}], 
      FractionBox[
       RowBox[{"L", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], "-", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], ")"}], " ", 
           RowBox[{
            SuperscriptBox["s3", "\[Prime]",
             MultilineFunction->None], "[", "t", "]"}]}], "+", 
          RowBox[{
           RowBox[{"s3", "[", "t", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], "+", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SuperscriptBox["\[Theta]3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], "-", 
             RowBox[{
              SuperscriptBox["\[Theta]4", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}], 
         ")"}]}], 
       SuperscriptBox[
        RowBox[{"s3", "[", "t", "]"}], "2"]]},
     {
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]1", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]1", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], 
      RowBox[{"L", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "-", 
         RowBox[{
          SuperscriptBox["\[Theta]4", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]2", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]2", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", "L"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], "-", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "-", 
         RowBox[{
          SuperscriptBox["\[Theta]4", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]},
     {
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]3", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]3", "\[Prime]",
         MultilineFunction->None], "[", "t", "]"}]}], 
      RowBox[{
       RowBox[{"-", "L"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], "-", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[Theta]3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], "-", 
         RowBox[{
          SuperscriptBox["\[Theta]4", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], ")"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8776986517001657`*^9, 3.877700969043692*^9, 
  3.8777535364969587`*^9, 3.877754362459941*^9, 3.877756019146304*^9, 
  3.87787115290877*^9, 3.877956567881235*^9, 3.8779586731627817`*^9, 
  3.877959646409892*^9, 3.877963652230568*^9, 3.877977034743013*^9},
 CellLabel->
  "Out[96]//MatrixForm=",ExpressionUUID->"657bcd4a-c3b7-4775-8041-\
bb4e7dac42c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Calcolo", " ", "le", " ", "accelerazioni", " ", "dei", " ", "cedenti", 
    " ", "moltiplicando", " ", "\[Tau]I", " ", "per", " ", "le", " ", 
    "accelerazioni", " ", "dei", " ", "moventi", " ", "e", " ", "sommando", 
    " ", "\[Tau]I1", " ", 
    RowBox[{"(", 
     RowBox[{"derivata", " ", "di", " ", "\[Tau]I"}], ")"}], " ", "per", " ", 
    "le", " ", "velocit\[AGrave]", " ", "dei", " ", "moventi"}], "*)"}], "\n", 
  RowBox[{"aI", "=", 
   RowBox[{"Simplify", "@", 
    RowBox[{"MatrixForm", "[", 
     RowBox[{
      RowBox[{"\[Tau]I", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"xE", "''"}], "[", "t", "]"}], ",", 
         RowBox[{
          RowBox[{"yE", "''"}], "[", "t", "]"}], ",", 
         RowBox[{
          RowBox[{"\[Theta]4", "''"}], "[", "t", "]"}]}], "}"}]}], "+", 
      RowBox[{"\[Tau]I1", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"xE", "'"}], "[", "t", "]"}], ",", 
         RowBox[{
          RowBox[{"yE", "'"}], "[", "t", "]"}], ",", 
         RowBox[{
          RowBox[{"\[Theta]4", "'"}], "[", "t", "]"}]}], "}"}]}]}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.812076913399973*^9, 3.812077374905034*^9}, {
   3.812078240244515*^9, 3.812078242316243*^9}, {3.812078589421371*^9, 
   3.812078615348269*^9}, {3.812079904254126*^9, 3.812080028640004*^9}, 
   3.8434776813428802`*^9, {3.843477732773134*^9, 3.8434778487964287`*^9}, {
   3.843477891323553*^9, 3.8434779396746073`*^9}, {3.8434779796341343`*^9, 
   3.843478079120288*^9}, {3.843478137727845*^9, 3.843478159759363*^9}, {
   3.843478222822777*^9, 3.843478358699707*^9}, {3.84349111970891*^9, 
   3.843491126235796*^9}, {3.843491163229313*^9, 3.8434913977823153`*^9}, {
   3.8434916055338783`*^9, 3.843491623291135*^9}, {3.843491679116053*^9, 
   3.843491681853771*^9}, {3.846653216395143*^9, 3.846653230891168*^9}, {
   3.846653665866578*^9, 3.8466540063359623`*^9}, {3.8474428948318853`*^9, 
   3.847442944885171*^9}, {3.847442976138617*^9, 3.847443038348003*^9}, 
   3.8474742914710083`*^9, {3.852121720254529*^9, 3.852121721212329*^9}, {
   3.8573651907503033`*^9, 3.857365326734674*^9}, {3.8573692315478163`*^9, 
   3.857369261011552*^9}, {3.875699383458858*^9, 3.8756994822119827`*^9}, {
   3.875699520476288*^9, 3.8756995514920177`*^9}, {3.875699598027767*^9, 
   3.8756997815642853`*^9}, {3.875699956091813*^9, 3.8757000409644747`*^9}, 
   3.8757850832347393`*^9, {3.876921031741383*^9, 3.876921041144326*^9}, 
   3.876921103444542*^9, {3.877005419344627*^9, 3.877005421670082*^9}, {
   3.8776985777254467`*^9, 3.877698649236473*^9}, {3.877700705470313*^9, 
   3.877700736381855*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"af4af0fa-ee64-4ce0-88f5-7abc24870927"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["s1", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["xE", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["yE", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{"L", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], "+", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], ")"}], " ", 
             
             RowBox[{
              SuperscriptBox["\[Theta]4", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"s1", "[", "t", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], " ", 
             RowBox[{
              SuperscriptBox["xE", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]1", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["yE", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]1", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{"L", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]1", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]4", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{"L", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]1", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]4", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{"L", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Theta]4", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
            RowBox[{"L", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Theta]4", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["xE", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["yE", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{"L", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]4", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{"L", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]4", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
        SuperscriptBox[
         RowBox[{"s1", "[", "t", "]"}], "2"]]},
      {
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["s2", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["xE", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["yE", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{"L", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], "-", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], ")"}], " ", 
             
             RowBox[{
              SuperscriptBox["\[Theta]4", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"s2", "[", "t", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["xE", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]2", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["yE", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]2", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{"L", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]2", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]4", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{"L", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]2", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]4", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{"L", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Theta]4", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
            RowBox[{"L", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Theta]4", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["xE", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["yE", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{"L", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]4", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{"L", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]4", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
        SuperscriptBox[
         RowBox[{"s2", "[", "t", "]"}], "2"]]},
      {
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["s3", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["xE", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["yE", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{"L", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], "-", 
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
                 RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}]}], ")"}], " ", 
             
             RowBox[{
              SuperscriptBox["\[Theta]4", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"s3", "[", "t", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["xE", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["yE", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{"L", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]4", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{"L", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]3", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]4", "\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{"L", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Theta]4", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
            RowBox[{"L", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             SuperscriptBox[
              RowBox[{
               SuperscriptBox["\[Theta]4", "\[Prime]",
                MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["xE", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{
             RowBox[{"Cos", "[", 
              RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["yE", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "+", 
            RowBox[{"L", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]4", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}], "-", 
            RowBox[{"L", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{
               RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
               RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]4", "\[Prime]\[Prime]",
               MultilineFunction->None], "[", "t", "]"}]}]}], ")"}]}]}], 
        SuperscriptBox[
         RowBox[{"s3", "[", "t", "]"}], "2"]]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}]}], " ", 
         RowBox[{
          SuperscriptBox["xE", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yE", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"L", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]4", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"L", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]4", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"L", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]4", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"L", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]4", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xE", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]1", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yE", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"L", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]4", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"L", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]4", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}]}], " ", 
         RowBox[{
          SuperscriptBox["xE", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yE", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"L", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]4", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"L", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]2", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]4", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"L", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]4", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"L", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]4", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xE", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]2", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yE", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"L", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]4", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"L", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]2", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]4", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}]},
      {
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}]}], " ", 
         RowBox[{
          SuperscriptBox["xE", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yE", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"L", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]4", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"L", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]3", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]4", "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{"L", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]4", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "-", 
        RowBox[{"L", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         SuperscriptBox[
          RowBox[{
           SuperscriptBox["\[Theta]4", "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["xE", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]3", "[", "t", "]"}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["yE", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"L", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]4", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}], "-", 
        RowBox[{"L", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           RowBox[{"\[Theta]3", "[", "t", "]"}], "-", 
           RowBox[{"\[Theta]4", "[", "t", "]"}]}], "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Theta]4", "\[Prime]\[Prime]",
           MultilineFunction->None], "[", "t", "]"}]}]}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8779565685602293`*^9, 3.877958673862728*^9, 
  3.877959647107684*^9, 3.8779636529252777`*^9, 3.87797703544405*^9},
 CellLabel->
  "Out[97]//MatrixForm=",ExpressionUUID->"c6358b02-07c1-4aea-b47c-\
47abb481e972"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Corsa dei cilindri s1,s2 e s3", "Subsubsection",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.8776986561138477`*^9, 3.87770097141442*^9, 3.877753536550632*^9, {
   3.8777542378117228`*^9, 3.877754265977791*^9}, {3.87796465374686*^9, 
   3.877964654251376*^9}},ExpressionUUID->"a24d35a8-5f6c-4a27-9763-\
6dfa279ad2f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Corsa", " ", "del", " ", "cilindro", " ", "s1"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipolatoreinverso", "[", 
    RowBox[{"xE", ",", "yE", ",", "L", ",", 
     RowBox[{"8", "L"}], ",", "0", ",", "\[Theta]4"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.877754301148246*^9, 3.877754342940167*^9}, {
  3.877754471639134*^9, 3.877754499461156*^9}, {3.877754836097715*^9, 
  3.8777548370138206`*^9}, {3.877754885540268*^9, 3.8777548913524446`*^9}, {
  3.877755027380417*^9, 3.877755033582366*^9}, {3.877964689028378*^9, 
  3.87796469036045*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"5e3761ce-8c1a-4793-ace7-14b77ec1d0bc"],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "8"}], " ", "L"}], "+", "xE", "+", 
      RowBox[{"L", " ", 
       RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
      RowBox[{"L", " ", 
       RowBox[{"Sin", "[", "\[Theta]4", "]"}]}]}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"yE", "+", 
      RowBox[{"L", " ", 
       RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "+", 
      RowBox[{"L", " ", 
       RowBox[{"Sin", "[", "\[Theta]4", "]"}]}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{{3.877754844129253*^9, 3.877754891925891*^9}, 
   3.877755157559845*^9, 3.877756019819849*^9, 3.8779565685651827`*^9, 
   3.877958673865781*^9, 3.877959647110812*^9, 3.877963652928636*^9, 
   3.877977035448977*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"Out[98]=",ExpressionUUID->"11ad12f0-956b-47da-82a3-5b104a564112"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Corsa", " ", "del", " ", "cilindro", " ", "s2"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipolatoreinverso", "[", 
    RowBox[{"xE", ",", "yE", ",", "L", ",", 
     RowBox[{"8", "L"}], ",", "0", ",", "\[Theta]4"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.877754301148246*^9, 3.877754354007807*^9}, {
  3.877964685781323*^9, 3.877964686933837*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"9e9f4769-885e-4d0d-bbd0-92ef2c5ba25c"],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "6"}], " ", "L"}], "+", "xE", "-", 
      RowBox[{"L", " ", 
       RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
      RowBox[{"L", " ", 
       RowBox[{"Sin", "[", "\[Theta]4", "]"}]}]}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"yE", "+", 
      RowBox[{"L", " ", 
       RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
      RowBox[{"L", " ", 
       RowBox[{"Sin", "[", "\[Theta]4", "]"}]}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{{3.8777548459788446`*^9, 3.8777548942085943`*^9}, 
   3.877756019839115*^9, 3.8779565685781612`*^9, 3.8779586738806667`*^9, 
   3.877959647124481*^9, 3.877963652958022*^9, 3.877977035463025*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->"Out[99]=",ExpressionUUID->"a2888636-b7c2-40f9-b3a9-4556590c6108"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Corsa", " ", "del", " ", "cilindro", " ", "s3"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipolatoreinverso", "[", 
    RowBox[{"xE", ",", "yE", ",", "L", ",", 
     RowBox[{"8", "L"}], ",", "0", ",", "\[Theta]4"}], "]"}], "[", 
   RowBox[{"[", "3", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.877754301148246*^9, 3.877754356047612*^9}, {
  3.877964682457803*^9, 3.877964683591902*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"f253320d-bc12-4b3e-8935-8bb325ceafef"],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"xE", "-", 
      RowBox[{"L", " ", 
       RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
      RowBox[{"L", " ", 
       RowBox[{"Sin", "[", "\[Theta]4", "]"}]}]}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"yE", "+", 
      RowBox[{"L", " ", 
       RowBox[{"Cos", "[", "\[Theta]4", "]"}]}], "-", 
      RowBox[{"L", " ", 
       RowBox[{"Sin", "[", "\[Theta]4", "]"}]}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{3.877754872601362*^9, 3.8777560198474607`*^9, 
  3.877956568581256*^9, 3.877958673883923*^9, 3.8779596471326303`*^9, 
  3.8779636529676743`*^9, 3.8779770354660997`*^9},
 Background->RGBColor[0.88, 1, 0.88],
 CellLabel->
  "Out[100]=",ExpressionUUID->"431630be-d2b4-41ab-a070-01ecd85def47"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{616, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.5 Inherited,
FrontEndVersion->"13.0 for Mac OS X ARM (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9a3d9ddc-e40e-4044-b7ff-c17a89300e90"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 761, 13, 217, "Title",ExpressionUUID->"b3541be0-15b0-420c-9e7f-953781c8bf7f"],
Cell[CellGroupData[{
Cell[1366, 39, 533, 11, 101, "Section",ExpressionUUID->"67b9ee53-e707-453b-a884-661ac3741736"],
Cell[CellGroupData[{
Cell[1924, 54, 190, 3, 81, "Subsection",ExpressionUUID->"7777d8ea-9cca-41e0-8c03-96ad9c298842"],
Cell[2117, 59, 1733, 27, 226, "Text",ExpressionUUID->"d90db7b7-fbba-4b92-be90-34ceae23b25d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3887, 91, 173, 3, 81, "Subsection",ExpressionUUID->"e6a48333-dd87-440f-b1e8-eb8d45be9fe0"],
Cell[4063, 96, 249, 6, 53, "Text",ExpressionUUID->"6d83045e-1317-4fc4-b4f3-7b1bbcd65144"],
Cell[CellGroupData[{
Cell[4337, 106, 235, 5, 67, "Subsubsection",ExpressionUUID->"8fdc472f-808c-4c37-8a5a-2434f726fd52"],
Cell[4575, 113, 978, 16, 191, "Text",ExpressionUUID->"959e2749-dc51-4b5c-834a-426a9b9774ab"],
Cell[5556, 131, 816, 14, 191, "Text",ExpressionUUID->"d1f42ea9-14d4-431a-8201-6bb4cfe06a31"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6409, 150, 197, 3, 67, "Subsubsection",ExpressionUUID->"12c1cfb3-adbe-4445-afce-739f420cca5a"],
Cell[6609, 155, 2225, 35, 467, "Text",ExpressionUUID->"aee77bc2-032b-4c7f-aaf4-124f2a56eb7b"],
Cell[8837, 192, 1905, 31, 467, "Text",ExpressionUUID->"2668b96d-6c8c-43eb-a769-0c678ac82185"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10803, 230, 268, 4, 101, "Section",ExpressionUUID->"d4a3e2d4-7b1b-4007-9b03-11dbb6d5a038"],
Cell[11074, 236, 904, 14, 122, "Text",ExpressionUUID->"8a3242f9-5177-4b55-a2b4-854dabc294ca"],
Cell[11981, 252, 747540, 12261, 692, "Text",ExpressionUUID->"c80e613d-1b68-4f9f-a81c-ac6d8b4eda2a"],
Cell[759524, 12515, 1476, 20, 62, "Text",ExpressionUUID->"eec9d302-21ef-4554-9e3c-ffaaf9779441"],
Cell[CellGroupData[{
Cell[761025, 12539, 2195, 36, 243, "Subsection",ExpressionUUID->"6b023581-048c-4cfe-a5e0-46e9b4290b88"],
Cell[CellGroupData[{
Cell[763245, 12579, 1658, 23, 67, "Subsubsection",ExpressionUUID->"a004f295-c9da-465e-9247-31f87698c320"],
Cell[764906, 12604, 4762, 104, 264, "Input",ExpressionUUID->"8250bf72-9a06-4992-929f-51a76f154630"],
Cell[CellGroupData[{
Cell[769693, 12712, 2341, 34, 46, "Input",ExpressionUUID->"b6bbc9a6-b607-4146-ba7f-d3d5427e22e4"],
Cell[772037, 12748, 2570, 75, 144, "Output",ExpressionUUID->"c58c4bed-d79a-4095-837e-bb2920dd8707"]
}, Open  ]],
Cell[774622, 12826, 2234, 37, 140, "Input",ExpressionUUID->"5af9e968-95a0-48be-8cd7-667c998c497a"]
}, Closed]],
Cell[CellGroupData[{
Cell[776893, 12868, 247, 5, 53, "Subsubsection",ExpressionUUID->"f816b22b-4861-45d8-9f43-617b217c61cf"],
Cell[777143, 12875, 8547, 217, 1153, "Input",ExpressionUUID->"76c99c21-8fcf-4806-984b-2245ef24ea79"],
Cell[CellGroupData[{
Cell[785715, 13096, 2429, 62, 202, "Input",ExpressionUUID->"628f7bca-bcbe-4de7-bfa8-7e4bc5056019"],
Cell[788147, 13160, 2955, 53, 836, "Output",ExpressionUUID->"c76b5f3e-e508-4719-93ae-72d9cb7a61ac"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[791163, 13220, 1628, 23, 96, "Subsection",ExpressionUUID->"cd9d6d36-647f-4c80-b54d-4ac1c8c4698b"],
Cell[CellGroupData[{
Cell[792816, 13247, 1671, 23, 67, "Subsubsection",ExpressionUUID->"3615f563-3ddf-43be-9734-ba12fdbcd875"],
Cell[CellGroupData[{
Cell[794512, 13274, 1765, 26, 46, "Input",ExpressionUUID->"8b120fa1-c038-4d2f-9189-57d8bb2980f0"],
Cell[796280, 13302, 4704, 83, 69, "Output",ExpressionUUID->"4a8afb61-93e3-438c-938f-eab2553e684b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[801021, 13390, 1692, 25, 46, "Input",ExpressionUUID->"775491a7-b48d-49db-9443-829d4c7ee793"],
Cell[802716, 13417, 4720, 83, 69, "Output",ExpressionUUID->"71cd074a-b4c0-4c1f-92ff-7630de5ac6cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[807473, 13505, 1690, 25, 46, "Input",ExpressionUUID->"c9c285b0-3de0-486a-bcde-4434b766282b"],
Cell[809166, 13532, 4933, 89, 69, "Output",ExpressionUUID->"848abcb9-3214-4a47-9a68-15354eca1a1a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[814136, 13626, 1693, 25, 46, "Input",ExpressionUUID->"914cf7ef-dda6-4d22-b341-3a143d77316c"],
Cell[815832, 13653, 2732, 58, 69, "Output",ExpressionUUID->"d6ffe3a9-e1f9-4248-bab9-db0fcb94e2e7"]
}, Open  ]],
Cell[818579, 13714, 399, 8, 46, "Input",ExpressionUUID->"9b989fc8-9e9c-4927-9cb2-f1c5ce429107"],
Cell[CellGroupData[{
Cell[819003, 13726, 315, 7, 46, "Input",ExpressionUUID->"4c8565dd-a154-4696-bd33-9dd2832ee019"],
Cell[819321, 13735, 5791, 154, 146, "Output",ExpressionUUID->"5d937b1b-a5c1-41b3-8fac-99f838570550"]
}, Open  ]],
Cell[CellGroupData[{
Cell[825149, 13894, 2588, 45, 46, "Input",ExpressionUUID->"edae5582-bce5-44e1-8369-4dc41a22e080"],
Cell[827740, 13941, 5310, 143, 287, "Output",ExpressionUUID->"cb60cd54-e9ea-44b4-a545-0bac38865d38"]
}, Open  ]],
Cell[833065, 14087, 493, 9, 46, "Input",ExpressionUUID->"0c8256bc-422e-4685-a24d-0b146a3a1e75"],
Cell[CellGroupData[{
Cell[833583, 14100, 1958, 42, 109, "Input",ExpressionUUID->"5848a7c0-de1e-439d-83b3-20eb1b764173"],
Cell[835544, 14144, 3526, 93, 182, "Output",ExpressionUUID->"a257a4ef-69c6-424e-9852-5a42a3873c9a"]
}, Open  ]],
Cell[839085, 14240, 645, 11, 46, "Input",ExpressionUUID->"9eb94685-ffe3-4a0b-8cf5-c2fc22074010"],
Cell[CellGroupData[{
Cell[839755, 14255, 1788, 40, 109, "Input",ExpressionUUID->"fb1ff3a4-024a-4820-ae16-fc5fafa27aeb"],
Cell[841546, 14297, 3514, 92, 151, "Output",ExpressionUUID->"638a8d3f-28b3-4523-9ce1-0e12f39cba6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[845097, 14394, 1332, 31, 114, "Input",ExpressionUUID->"1e5ee875-635a-43ce-8c7b-308d925496b0"],
Cell[846432, 14427, 6844, 175, 302, "Output",ExpressionUUID->"d50eee80-aa2a-4dc4-952a-3c5192e59f22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[853313, 14607, 796, 15, 78, "Input",ExpressionUUID->"f7bc66d4-dd77-471b-9aed-9b2987ce3172"],
Cell[854112, 14624, 2613, 58, 111, "Output",ExpressionUUID->"387a29a7-e90d-4066-8902-f8bde9da2f5e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[856774, 14688, 400, 8, 53, "Subsubsection",ExpressionUUID->"1a6ffa04-c139-4712-ac2a-d19d3cb8a1e6"],
Cell[857177, 14698, 1251, 27, 46, "Input",ExpressionUUID->"638e1c40-4df8-4de4-a2f6-342073aa1144"],
Cell[CellGroupData[{
Cell[858453, 14729, 261, 4, 46, "Input",ExpressionUUID->"133f165b-8153-4500-bba5-b630e3abfc0b"],
Cell[858717, 14735, 4073, 92, 144, "Output",ExpressionUUID->"041450d3-0838-4a7c-b0fa-a6aceb80a0dc"]
}, Open  ]],
Cell[862805, 14830, 1045, 24, 46, "Input",ExpressionUUID->"8753d771-b2a3-4ac3-ad89-6820bd40dd3d"],
Cell[CellGroupData[{
Cell[863875, 14858, 258, 4, 46, "Input",ExpressionUUID->"08f36e4a-3ef0-457a-8276-2a1196b881ac"],
Cell[864136, 14864, 2487, 57, 144, "Output",ExpressionUUID->"da86f4d5-0bd8-4e9e-b494-bb990502af01"]
}, Open  ]],
Cell[866638, 14924, 592, 11, 46, "Input",ExpressionUUID->"ef50141b-ad14-458c-a675-0c1e8eada538"],
Cell[867233, 14937, 1198, 20, 46, "Input",ExpressionUUID->"86d30382-6b74-45a7-b686-396757244727"],
Cell[CellGroupData[{
Cell[868456, 14961, 845, 14, 46, "Input",ExpressionUUID->"53da8d5a-6fb1-408a-bbde-f924e38462a1"],
Cell[869304, 14977, 5436, 138, 196, "Output",ExpressionUUID->"82a6feb3-13eb-4fba-90d0-ba477e2b0d30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[874777, 15120, 1122, 26, 78, "Input",ExpressionUUID->"d4a2c8b5-4cca-4b9f-b727-c05016e84820"],
Cell[875902, 15148, 5647, 146, 200, "Output",ExpressionUUID->"9056b763-9949-47ae-aca7-54893486a58d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[881598, 15300, 446, 9, 53, "Subsubsection",ExpressionUUID->"1f6ba289-ab97-402c-b22a-7f905102c8a3"],
Cell[882047, 15311, 626, 11, 46, "Input",ExpressionUUID->"dca94c55-fa95-4147-82f6-0dd068519fa3"],
Cell[CellGroupData[{
Cell[882698, 15326, 613, 13, 46, "Input",ExpressionUUID->"d6c0a09c-94ba-4f63-84cb-cef7bce0a13a"],
Cell[883314, 15341, 1523, 22, 69, "Output",ExpressionUUID->"19370e85-3190-4c7c-b43a-f90dd782745d"]
}, Open  ]],
Cell[884852, 15366, 449, 8, 46, "Input",ExpressionUUID->"8c08efa2-d202-4354-be95-4ca10feda6b7"],
Cell[CellGroupData[{
Cell[885326, 15378, 537, 12, 46, "Input",ExpressionUUID->"dbeb2c1d-664c-41fe-b064-9c5d8e91cc49"],
Cell[885866, 15392, 1533, 22, 69, "Output",ExpressionUUID->"7677496e-d6db-45a8-ab01-c3f97521da1c"]
}, Open  ]],
Cell[887414, 15417, 448, 8, 46, "Input",ExpressionUUID->"ac64e9fb-0ec7-4de8-b957-11433b9158a2"],
Cell[CellGroupData[{
Cell[887887, 15429, 612, 13, 46, "Input",ExpressionUUID->"73926995-5d71-4087-bfe7-70b03fd9a6fb"],
Cell[888502, 15444, 1543, 22, 69, "Output",ExpressionUUID->"aee7f7d9-f2a3-4b00-be3b-6e4fb06b0edd"]
}, Open  ]],
Cell[890060, 15469, 449, 8, 46, "Input",ExpressionUUID->"18a2b3ac-b694-4084-996d-ce81c052fd80"],
Cell[CellGroupData[{
Cell[890534, 15481, 534, 12, 46, "Input",ExpressionUUID->"82331063-f2eb-4300-a84b-35069d45cc2f"],
Cell[891071, 15495, 1530, 22, 69, "Output",ExpressionUUID->"f659a388-7347-485e-bdee-fb5dfdcaad95"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[892662, 15524, 1378, 18, 55, "Subsection",ExpressionUUID->"0669086e-6dfb-45c7-90d6-bb88fb80dab3"],
Cell[CellGroupData[{
Cell[894065, 15546, 1520, 21, 67, "Subsubsection",ExpressionUUID->"7057738f-1dff-48f3-b6be-11e797e08e55"],
Cell[CellGroupData[{
Cell[895610, 15571, 2606, 43, 109, "Input",ExpressionUUID->"15b5eceb-1532-4a1a-9206-cd3248391939"],
Cell[898219, 15616, 22845, 572, 246, "Output",ExpressionUUID->"9df2911f-7bb7-4eb2-a510-aea245e99c94"]
}, Open  ]],
Cell[CellGroupData[{
Cell[921101, 16193, 3387, 64, 140, "Input",ExpressionUUID->"5ce5d349-84fb-4d66-9c0c-f575a6615094"],
Cell[924491, 16259, 37941, 872, 250, "Output",ExpressionUUID->"65103946-2832-498a-97e6-afab3efa580d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[962481, 17137, 374, 8, 53, "Subsubsection",ExpressionUUID->"32414901-801f-4481-aa7f-cfd59ebd27fe"],
Cell[CellGroupData[{
Cell[962880, 17149, 517, 14, 109, "Input",ExpressionUUID->"29070aed-6f9b-4ba9-b40d-4f3f241eac5e"],
Cell[963400, 17165, 2478, 66, 103, "Output",ExpressionUUID->"bfca6802-0d09-4660-b35f-41eb49c8974a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[965915, 17236, 542, 15, 109, "Input",ExpressionUUID->"f42cc776-6762-4426-87c5-d170fdc26b47"],
Cell[966460, 17253, 2488, 66, 103, "Output",ExpressionUUID->"9cbe64db-8dab-4885-a6d8-3fdb8a1460dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[968985, 17324, 921, 22, 113, "Input",ExpressionUUID->"aa31db48-4051-4641-a7bb-87cff7b2d3dd"],
Cell[969909, 17348, 5155, 130, 208, "Output",ExpressionUUID->"1bd82f22-e570-4234-965d-b4b563fead3a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[975101, 17483, 659, 14, 78, "Input",ExpressionUUID->"59e52f17-240d-461c-8d1f-d4585fb0033d"],
Cell[975763, 17499, 6756, 170, 268, "Output",ExpressionUUID->"a8396ead-f7a3-47c7-a5ba-54a6a0d94c8d"]
}, Open  ]],
Cell[982534, 17672, 569, 9, 78, "Text",ExpressionUUID->"7f12021c-9cda-498b-9c71-081e6fb52bf3"],
Cell[CellGroupData[{
Cell[983128, 17685, 736, 16, 78, "Input",ExpressionUUID->"cd4af19c-120d-4000-a68e-2b0754426fe4"],
Cell[983867, 17703, 1719, 46, 123, "Output",ExpressionUUID->"fd53c853-fb3b-472c-a874-37b29e5a2880"]
}, Open  ]],
Cell[CellGroupData[{
Cell[985623, 17754, 734, 16, 78, "Input",ExpressionUUID->"63953529-7f49-41e6-9116-6fc84b150d22"],
Cell[986360, 17772, 1013, 25, 90, "Output",ExpressionUUID->"f18161a0-2208-45e9-94ba-8bd92b0be9c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[987410, 17802, 740, 16, 78, "Input",ExpressionUUID->"a9862ef9-5bb1-4317-a569-55e8b1794397"],
Cell[988153, 17820, 1013, 25, 90, "Output",ExpressionUUID->"3d933e30-5fe2-414e-b2cb-128a019786e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[989203, 17850, 683, 15, 78, "Input",ExpressionUUID->"2df4bf06-0868-479a-ac30-f2e67ab88706"],
Cell[989889, 17867, 1590, 42, 87, "Output",ExpressionUUID->"405f2ee0-91c2-4421-99fe-23ecbf3f525a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[991516, 17914, 611, 14, 78, "Input",ExpressionUUID->"8527e360-0a3f-41ec-9fff-15128707569d"],
Cell[992130, 17930, 9099, 234, 347, "Output",ExpressionUUID->"d163f19c-cea5-421f-a218-6796977d0159"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1001266, 18169, 609, 14, 78, "Input",ExpressionUUID->"c1c2a8cb-67fe-411e-827c-0a3d766bd305"],
Cell[1001878, 18185, 3476, 95, 165, "Output",ExpressionUUID->"d8bcd0bc-4575-470e-9b4b-dcca26637832"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1005391, 18285, 657, 15, 78, "Input",ExpressionUUID->"8d50fe55-55c1-426b-8a1b-43842df04c86"],
Cell[1006051, 18302, 3506, 95, 165, "Output",ExpressionUUID->"73042fa7-9885-45a8-b813-a756a67353cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1009594, 18402, 660, 15, 78, "Input",ExpressionUUID->"44bbfb36-a2a9-45de-abba-cbbee75219ac"],
Cell[1010257, 18419, 6698, 169, 244, "Output",ExpressionUUID->"0558daca-bc9d-4d6e-aec8-f9e967c15408"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1017016, 18595, 1359, 19, 55, "Subsection",ExpressionUUID->"0f75a08f-0563-45a2-90c1-675d73ebaa3a"],
Cell[1018378, 18616, 612, 11, 46, "Input",ExpressionUUID->"c4070cb9-9824-4d8a-9fec-a246193004db"],
Cell[CellGroupData[{
Cell[1019015, 18631, 350, 7, 46, "Input",ExpressionUUID->"4e217f5e-0874-4159-90d4-7e2b18bd2831"],
Cell[1019368, 18640, 2771, 81, 163, "Output",ExpressionUUID->"16cc81f0-1171-47f0-af53-fa9cd6bcfdbb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1022176, 18726, 728, 19, 46, "Input",ExpressionUUID->"678e4818-ad27-4aa0-83e6-856932d60cd1"],
Cell[1022907, 18747, 1230, 28, 69, "Output",ExpressionUUID->"166a9906-129b-4482-9b4c-2d042b3a77e3"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1024186, 18781, 1969, 38, 136, "Subsection",ExpressionUUID->"563543e7-b0b3-44ac-8410-7104eb21c5f0"],
Cell[CellGroupData[{
Cell[1026180, 18823, 1512, 21, 67, "Subsubsection",ExpressionUUID->"2e3e7942-ae26-4940-953a-e7a8470eaa2d"],
Cell[1027695, 18846, 5504, 136, 233, "Input",ExpressionUUID->"5dbf43ca-fa25-4941-8420-d47ce89a7f0a"],
Cell[CellGroupData[{
Cell[1033224, 18986, 1802, 27, 46, "Input",ExpressionUUID->"a1125ed7-41e9-4d45-adf1-880279194819"],
Cell[1035029, 19015, 3852, 109, 200, "Output",ExpressionUUID->"4b6be3ad-abf8-42a4-a402-c4fa94998c2e"]
}, Open  ]],
Cell[1038896, 19127, 770, 20, 202, "Input",ExpressionUUID->"b7979f98-bd46-49ca-b0f5-d990cb6168bd"]
}, Closed]],
Cell[CellGroupData[{
Cell[1039703, 19152, 1513, 21, 53, "Subsubsection",ExpressionUUID->"c799b99f-6a46-4d92-ba29-7586927770a2"],
Cell[CellGroupData[{
Cell[1041241, 19177, 9491, 255, 1227, "Input",ExpressionUUID->"37d88c7f-f33f-435f-9757-b184e97c42d6"],
Cell[1050735, 19434, 3220, 60, 795, "Output",ExpressionUUID->"5b458961-1980-43a7-b8aa-ea19e48229e6"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1054004, 19500, 1272, 20, 53, "Subsubsection",ExpressionUUID->"80c8a529-4223-4e74-ae6b-60f92b98f29e"],
Cell[CellGroupData[{
Cell[1055301, 19524, 2028, 39, 78, "Input",ExpressionUUID->"c0e69aed-7316-4c05-b8e9-5402c6d3472d"],
Cell[1057332, 19565, 2418, 66, 200, "Output",ExpressionUUID->"eda1f4ca-e3b4-4aaa-ba64-2e34df94dd6f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1059787, 19636, 1861, 36, 78, "Input",ExpressionUUID->"8b67b12d-7e4f-4c85-8fc2-89ae5d1cbfc5"],
Cell[1061651, 19674, 2613, 77, 200, "Output",ExpressionUUID->"e75280f1-b49f-417e-a75b-081f1ab2c7ab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1064301, 19756, 1601, 29, 109, "Input",ExpressionUUID->"9ba9c4fe-3441-47d7-b5bc-1e26188c076f"],
Cell[1065905, 19787, 4975, 141, 238, "Output",ExpressionUUID->"8493b3ab-a69c-4163-9fe9-3c1629a971e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1070917, 19933, 933, 24, 78, "Input",ExpressionUUID->"ecf012da-501f-495a-9eda-41d04a06fed0"],
Cell[1071853, 19959, 7527, 202, 242, "Output",ExpressionUUID->"48b1cee6-f67d-472a-a79f-c35cffe36a1b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1079429, 20167, 1576, 22, 53, "Subsubsection",ExpressionUUID->"86f5f509-f238-442b-b3ce-fb48aab38b36"],
Cell[CellGroupData[{
Cell[1081030, 20193, 2141, 37, 109, "Input",ExpressionUUID->"d3ae2922-9836-47a9-b83c-eaf0c215f79b"],
Cell[1083174, 20232, 12867, 350, 250, "Output",ExpressionUUID->"657bcd4a-c3b7-4775-8041-bb4e7dac42c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1096078, 20587, 2800, 55, 109, "Input",ExpressionUUID->"af4af0fa-ee64-4ce0-88f5-7abc24870927"],
Cell[1098881, 20644, 27564, 672, 290, "Output",ExpressionUUID->"c6358b02-07c1-4aea-b47c-47abb481e972"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1126494, 21322, 352, 7, 53, "Subsubsection",ExpressionUUID->"a24d35a8-5f6c-4a27-9763-6dfa279ad2f4"],
Cell[CellGroupData[{
Cell[1126871, 21333, 738, 15, 78, "Input",ExpressionUUID->"5e3761ce-8c1a-4793-ace7-14b77ec1d0bc"],
Cell[1127612, 21350, 927, 24, 96, "Output",ExpressionUUID->"11ad12f0-956b-47da-82a3-5b104a564112"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1128576, 21379, 542, 12, 78, "Input",ExpressionUUID->"9e9f4769-885e-4d0d-bbd0-92ef2c5ba25c"],
Cell[1129121, 21393, 907, 23, 96, "Output",ExpressionUUID->"a2888636-b7c2-40f9-b3a9-4556590c6108"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1130065, 21421, 546, 13, 95, "Input",ExpressionUUID->"f253320d-bc12-4b3e-8935-8bb325ceafef"],
Cell[1130614, 21436, 825, 22, 96, "Output",ExpressionUUID->"431630be-d2b4-41ab-a070-01ecd85def47"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

